<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE queries [
<!ELEMENT queries (query*)>
<!ELEMENT query (use-case+, description,paginacao?,command+, projecao?, ordenacoes?)>
<!ELEMENT use-case    (#PCDATA) >
<!ELEMENT description (#PCDATA) >
<!ELEMENT command     (#PCDATA) >
<!ELEMENT parametros  (#PCDATA) >
<!ELEMENT projecao (#PCDATA) >
<!ELEMENT paginar  (#PCDATA) >
<!ELEMENT paginacao (#PCDATA) >
<!ELEMENT colunaCodigo    (#PCDATA) >
<!ELEMENT colunaDescricao    (#PCDATA) >
<!ELEMENT numeroOcorrenciasPorPagina    (#PCDATA) >
<!ELEMENT primeiraCondicao    (#PCDATA) >
<!ELEMENT ascendente    (#PCDATA) >
<!ELEMENT ordenacoes (ordenacao+)>
<!ELEMENT ordenacao (#PCDATA)>

<!ELEMENT sql  (#PCDATA) >

<!ATTLIST ordenacao chave CDATA    #REQUIRED >
<!ATTLIST ordenacao default CDATA    #IMPLIED >

<!ATTLIST command parametros CDATA    #IMPLIED  >
<!ATTLIST command paginar CDATA    #IMPLIED  >

<!ATTLIST use-case name CDATA    #REQUIRED >

<!ATTLIST query name CDATA    #REQUIRED >

<!ATTLIST paginacao colunaCodigo CDATA    #REQUIRED>
<!ATTLIST paginacao colunaDescricao CDATA    #REQUIRED>
<!ATTLIST paginacao numeroOcorrenciasPorPagina CDATA    #REQUIRED>
<!ATTLIST paginacao primeiraCondicao CDATA    #REQUIRED>
<!ATTLIST paginacao ascendente CDATA    #REQUIRED>
<!ATTLIST paginacao hint CDATA    #REQUIRED>
<!ATTLIST paginacao hintAuxiliar CDATA   #IMPLIED >
]>

<queries>	
	<query name="PESQUISA_EXEMPLO">
		<use-case name="Exemplo"></use-case>
		<description>Exemplo</description>
		<command>
			<![CDATA[
			]]>
		</command>
	</query>
	<query name="PESQUISA_CONTA_CAPITAL">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa dados do conta capital</description>
		<command>
			<![CDATA[
				FROM br.com.sicoob.contacapital.comum.negocio.entidades.ContaCapital cca
				WHERE 1 = 1	
				<j:if test="${criterios.filtro != null}">
					<j:if test="${criterios.filtro.id != null}">
						AND cca.id = ${criterios.filtro.id}
					</j:if>
					<j:if test="${criterios.filtro.numCliente != null}">
						AND cca.numCliente = ${criterios.filtro.numCliente}
					</j:if>
				</j:if>
			]]>
		</command>
	</query>
	
	<query name="PESQUISA_INF_ACUMULADA">
		<use-case name="Inf Acumulada"></use-case>
		<description>Pesquisa dados de Inf Acumulada</description>
		<command>
			<![CDATA[
				FROM br.com.sicoob.contacapital.comum.negocio.entidades.InfAcumulada if
				WHERE 1 = 1	
				<j:if test="${criterios.filtro != null}">
					<j:if test="${criterios.filtro.id != null}">
						<j:if test="${criterios.filtro.id.idProduto != null}">
							AND if.id.idProduto = ${criterios.filtro.id.idProduto}
						</j:if>
						<j:if test="${criterios.filtro.id.idTipoInfoAcumulo != null}">
							AND if.id.idTipoInfoAcumulo = ${criterios.filtro.id.idTipoInfoAcumulo}
						</j:if>
						<j:if test="${criterios.filtro.id.numAnoRef != null}">
							AND if.id.numAnoRef = ${criterios.filtro.id.numAnoRef}
						</j:if>
						<j:if test="${criterios.filtro.id.numMesRef != null}">
							AND if.id.numMesRef = ${criterios.filtro.id.numMesRef}
						</j:if>
					</j:if>
				</j:if>
				<j:if test="${criterios.ordenacao != null}">
					${criterios.ordenacao}
				</j:if>
			]]>
		</command>
	</query>
	
	<query name="PESQUISA_LANCAMENTOS_CCAPITAL">
		<use-case name="LancamentosCCapital"></use-case>
		<description>Pesquisa dados do LancamentosCCapital</description>
		<command>
			<![CDATA[
				FROM br.com.sicoob.contacapital.comum.negocio.entidades.LancamentosCCapital lan
				WHERE 1 = 1	
				<j:if test="${criterios.filtro != null}">
					<j:if test="${criterios.filtro.id.dataLote != null}">
						AND lan.id.dataLote = <bancoob:valorOql valor="${criterios.filtro.id.dataLote}" tipo="Date"/>
					</j:if>
					<j:if test="${criterios.filtro.id.numLoteLanc != null}">
						AND lan.id.numLoteLanc = ${criterios.filtro.id.numLoteLanc}
					</j:if>
					<j:if test="${criterios.filtro.id.numSeqLanc != null}">
						AND lan.id.numSeqLanc = ${criterios.filtro.id.numSeqLanc}
					</j:if>
					<j:if test="${criterios.filtro.valorLanc != null}">
						AND lan.valorLanc = ${criterios.filtro.valorLanc}
					</j:if>		
					<j:if test="${criterios.filtro.idTipoHistoricoLanc != null}">
						AND lan.idTipoHistoricoLanc = ${criterios.filtro.idTipoHistoricoLanc}
					</j:if>
					<j:if test="${criterios.filtro.numMatricula != null}">
						AND lan.numMatricula = ${criterios.filtro.numMatricula}
					</j:if>
				</j:if>
				<j:if test="${criterios.ordenacao != null}">
					${criterios.ordenacao}
				</j:if>
			]]>
		</command>
	</query>
	
	<query name="OBTER_LANC_NAO_ATUALIZADOS">
		<use-case name="Obter lançamentos não atualizados"></use-case>
		<description>Obter lançamentos não atualizados</description>
		<command>
			<![CDATA[
				SELECT DataLote, NumLoteLanc, NumSeqLanc, DescNumDocumento, ValorLanc, 
					BolAtualizado, NumMatricula, IDProduto, IDTipoHistoricoLanc, 
					IDProdutoEst, IDTipoHistoricoEstorno, IDUsuarioResp, DataHoraInclusao 
				FROM dbo.LancamentosCCapital
				Where BolAtualizado = 0 
				And DataLote = '${dtmDataLancamento}'
				    
				<j:if test="${lNumLoteLanc != null}">
					AND NumLoteLanc = ${lNumLoteLanc}
				</j:if>
				<j:if test="${lNumSeqLanc != null}">
					AND NumSeqLanc = ${lNumSeqLanc}
				</j:if>
				<j:if test="${lNumMatricula != null}">
					AND NumMatricula = ${lNumMatricula}
				</j:if>
				<j:if test="${iIdTipoHistoricoLanc != null}">
					AND IDTipoHistoricoLanc = ${iIdTipoHistoricoLanc}
				</j:if>
				<j:if test="${sDescNumDocumento != null}">
					AND DescNumDocumento = '${sDescNumDocumento}'
				</j:if>
			]]>
		</command>
	</query>
	<query name="OBTER_PARCELAS_EM_ABERTO">
		<use-case name="Obter parcelas em Aberto"></use-case>
		<description>Obter parcelas em Aberto</description>
		<command>
			<![CDATA[
				SELECT ContaCapital.CodSituacao AS CodSituacaoCCA, P.NumMatricula, 
					P.NumParcelamento, P.NumParcela, P.CodTipoParcelamento, P.DataVencParcela, 
					P.DataSituacaoParcela, P.ValorParcela, P.CodModoLanc, 
					P.CodSituacaoParcela, P.NumContaCorrente, 
					ContaCorrente = Str(P.NumContaCorrente), P.UIDTrabalha, 
					Conta = CASE WHEN CodModoLanc = ${codModoLancamentoViaCaixa} THEN 'Via Caixa' 
								WHEN CodModoLanc = ${codModoLancamentoViaFolha} THEN 'Via Folha' + CASE WHEN P.UIDTrabalha IS NULL THEN '' 
																									Else ': ' + (SELECT DescMatriculaFunc 
																													FROM dbo.Trabalha 
																													WHERE Trabalha.UIDTrabalha = P.UIDTrabalha) 
																									END 
								WHEN CodModoLanc = ${codModoLancamentoViaCobranca} THEN 'Via Cobrança' 
								WHEN CodModoLanc = ${codModoLancamentoViaMigracao} THEN 'Via Migração' 
								WHEN CodModoLanc = ${codModoLancamentoViaBancoChadmin} THEN 'Via Banco/Chq. Adm.' 
								WHEN CodModoLanc = ${codModoLancamentoViaRateio} THEN 'Via Rateio' 
								WHEN CodModoLanc = ${codModoLancamentoViaReserva} THEN 'Via Reserva' 
								WHEN CodModoLanc = ${codModoLancamentoViaConta} THEN CASE WHEN LEN(LTRIM(STR(P.NumContaCorrente))) &lt; 5 THEN 'Via Conta Corrente: ' + 
																								SUBSTRING(STR(P.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(P.NumContaCorrente), 10, 1) 
																							WHEN LEN(LTRIM(STR(P.NumContaCorrente))) &gt; 4 AND LEN(LTRIM(STR(P.NumContaCorrente))) &lt; 8 THEN 'Via Conta Corrente: ' + 
																								SUBSTRING(STR(P.NumContaCorrente), 4, 3) + '.' + SUBSTRING(STR(P.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(P.NumContaCorrente), 10, 1) 
																					Else 'Via Conta Corrente: ' + SUBSTRING(STR(P.NumContaCorrente), 1, 3) + '.' + SUBSTRING(STR(P.NumContaCorrente), 4, 3) + '.' + 
																						SUBSTRING(STR(P.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(P.NumContaCorrente), 10, 1) 
																					END 
					END,
					Situacao = CASE CodSituacaoParcela 
								 WHEN ${codParcelaGerada} THEN 'Em Aberto' 
								 WHEN ${codParcelaPagaViaCaixa} THEN 'Paga Via Caixa' 
								 WHEN ${codParcelaPagaViaConta} THEN 'Paga Via Conta' 
								 WHEN ${codParcelaCancelada} THEN 'Cancelada' 
								 WHEN ${codParcelaPagaViaChadmin} THEN 'Paga Via Banco/Chq. Adm.'
								 WHEN ${codParcelaExcluida} THEN 'Excluída' 
								 WHEN ${codParcelaPagaViaFolha} THEN 'Paga Via Folha' 
								 WHEN ${codParcelaPagaViaCobranca} THEN 'Paga Via Cobrança' 
								 WHEN ${codParcelaPagaAntesMigracao} THEN 'Paga Antes da Migração' 
								 WHEN ${codParcelaPagaViaRateio} THEN 'Paga Via Rateio' 
								 WHEN ${codParcelaPagaViaReserva} THEN 'Paga Via Reserva' 
								 Else 'Situação INVÁLIDA' 
								 END, 
					Pessoa.DescNomePessoa , Pessoa.NumCGC_CPF, 
					Ocorrencia = Pessoa.DescObsPessoa 
				FROM dbo.ParcelamentoCCA P 
				 INNER JOIN dbo.ContaCapital ON P.NumMatricula = ContaCapital.NumMatricula 
				 INNER JOIN dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente 
				 INNER JOIN dbo.Pessoa ON Cliente.NumCliente = Pessoa.NumPessoa 
				Where P.CodSituacaoParcela = ${codParcelaGerada}
				
				<j:if test="${iCodModoLancamento != null}">
					And P.CodModoLanc = ${iCodModoLancamento}
				</j:if>
				<j:if test="${dtpInicial != null}">
					And P.DataVencParcela &gt;= '${dtpInicial}'
				</j:if>
				<j:if test="${dtpFinal != null}">
					And P.DataVencParcela &lt;= '${dtpFinal}'
				</j:if>
				<j:if test="${iTipoParcelamento != null}">
					And P.CodTipoParcelamento = ${iTipoParcelamento}
				</j:if>
				<j:if test="${lNumMatricula != null}">
					And P.NumMatricula = ${lNumMatricula}
				</j:if>
			]]>
		</command>
	</query>
	<query name="OBTER_RATEIO_CALCULADO_COOPERADO">
		<use-case name="Obter rateio calculado Cooperado"></use-case>
		<description>Obter rateio calculado Cooperado</description>
		<command>
			<![CDATA[
				SELECT COUNT(RateioCalculado.NumMatricula) AS Quant, RateioAGO.CodSituacao
			    FROM dbo.RateioCalculado 
			    INNER JOIN dbo.RateioAGO ON RateioCalculado.DataCalculo = RateioAGO.DataCalculo 
			    WHERE NumMatricula = ${lNumMatricula}			
				<j:if test="${dtmDataCalculo != null}">
					AND DataCalculo = '${dtmDataCalculo}'
				</j:if>
				<j:if test="${iNumFormula != null}">
					AND NumFormulaRateio = ${iNumFormula}
				</j:if>    
			    GROUP BY NumMatricula, CodSituacao	
	
			]]>
		</command>
	</query>
	<query name="EXISTE_VALORES_BASE_COOPERADO">
		<use-case name="Existem Valores Base Cooperado"></use-case>
		<description>Existem Valores Base Cooperado</description>
		<command>
			<![CDATA[
				SELECT DataCalculo, NumFormulaRateio
			    FROM dbo.ValorBase
			    WHERE NumMatricula = ${lNumMatricula}			
				<j:if test="${dtmDataRateio != null}">
					AND DataCalculo = '${dtmDataRateio}'
				</j:if>    
				<j:if test="${iNumFormula != null}">
					AND NumFormulaRateio = ${iNumFormula}
				</j:if>
			]]>
		</command>
	</query>
	<query name="VERIFICA_FECH_CAPITAL_INICIADO">
		<use-case name="Conta Capital"></use-case>
		<description>Verifica o fechamento do produto conta capital foi inicializado</description>
		<command>
			<![CDATA[
				SELECT 
				dataprocessamento 
				FROM dbo.fechordemproduto WHERE idproduto = ${PRODUTO_CONTA_CAPITAL} 
				AND dataprocessamento = 
					(SELECT DataAtualProd FROM dbo.Produto 
						WHERE idProduto = ${PRODUTO_CONTA_CAPITAL})
			]]>
		</command>
	</query>
	<query name="OBTER_SALDO_CONTA_CAPITAL">
		<use-case name="Conta Capital"></use-case>
		<description>Retorna o saldo</description>
		<command>
			<![CDATA[
				SELECT 
					ISNULL(SUM(dbo.VIW_CTA_SaldoContaCapital.ValorLanc),0) As Saldo 
				FROM dbo.VIW_CTA_SaldoContaCapital 
				INNER JOIN dbo.ContaCapital 
					ON dbo.ContaCapital.NumMatricula = dbo.VIW_CTA_SaldoContaCapital.NumMatricula 
				WHERE 
					dbo.VIW_CTA_SaldoContaCapital.NumMatricula = ${NUM_MATRICULA} 
					AND dbo.VIW_CTA_SaldoContaCapital.CodGrupoHist = ${GRUPO_HIST} 
					<j:if test="${DATA_BASE == null}">
						AND dbo.VIW_CTA_SaldoContaCapital.BolAtualizado = 0 
					</j:if>
					<j:if test="${DATA_BASE != null}">
						AND dbo.VIW_CTA_SaldoContaCapital.DataLote &gt; dbo.ContaCapital.DataSaldoAnterior 
						AND dbo.VIW_CTA_SaldoContaCapital.DataLote &lt;= '${DATA_ATUAL_MOV}' 
					</j:if>
				GROUP BY dbo.ContaCapital.NumMatricula, ${VALOR_BASE} 
			]]>
		</command>
	</query>
	<query name="OBTER_DADOS_CCA_EXCLUSAO">
		<use-case name="Obter dados exclusao"></use-case>
		<description>Obter dados para exclusao</description>
		<command>
			<![CDATA[
				SELECT NumMatricula, NumPessoa, DescNomePessoa,  
				    NumCGC_CPF = CASE CodPF_PJ WHEN  ${codTipoPesFisica}  THEN  
				    SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2)  
				    WHEN  ${codTipoPesJuridica}  THEN  
				    SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END,  
				    DataSaida, CodSituacao, sCodSituacao = Case CodSituacao  
				    WHEN  ${codSituacaoCooperadoAtivo}  THEN 'Ativo'  
				    WHEN  ${codSituacaoCooperadoDemitido}  THEN 'Desligado'  
				    WHEN  ${codSituacaoCooperadoExcluido}  THEN 'Desligado'  
				    WHEN  ${codSituacaoCooperadoEliminado}  THEN 'Desligado'  
				    ELSE 'Não-Cooperado' END  
				    FROM dbo.ContaCapital  
				    INNER JOIN dbo.Pessoa ON  Pessoa.NumPessoa = ContaCapital.NumCliente  
				    WHERE dbo.ContaCapital.CodSituacao IN ( 
				    ${codSituacaoCooperadoDemitido}  ,  
				    ${codSituacaoCooperadoEliminado}  ,  
				    ${codSituacaoCooperadoExcluido} )  
				<j:if test="${procuraPor != null}">
					<j:if test="${tipoProcura == 1}">
						And NumMatricula Like '%${procuraPor}%'
					</j:if>
					<j:if test="${tipoProcura == 2}">
						And NumPessoa Like '%${procuraPor}%'
					</j:if>
					<j:if test="${tipoProcura == 3}">
						And DescNomePessoa Like '%${procuraPor}%'
					</j:if>
					<j:if test="${tipoProcura == 4}">
						And NumCGC_CPF Like '%${procuraPor}%'
					</j:if>
				</j:if>	
					ORDER BY NumMatricula
			]]>
		</command>
	</query>
	
	<query name="OBTER_VALOR_COTA_VIGENTE">
		<use-case name="Conta Capital"></use-case>
		<description>Retorna o saldo</description>
		<command>
			<![CDATA[			
				SELECT v.valorCota 
	         		FROM br.com.sicoob.contacapital.comum.negocio.entidades.ValorCotas v
	         		WHERE (v.id &lt;= Convert(DateTime, GetDate(), 102)) 
	         	ORDER BY v.id DESC        
			]]>
		</command>
	</query>

	<query name="PESQUISA_PARCELAMENTO_CCA">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa dados de parcelamento</description>
		<command>
			<![CDATA[
				FROM br.com.sicoob.contacapital.comum.negocio.entidades.ParcelamentoCCA p
				WHERE 1 = 1	
				<j:if test="${criterios.filtro != null}">
					<j:if test="${criterios.filtro.id != null}">
						<j:if test="${criterios.filtro.id.contaCapital != null}">
							AND p.id.contaCapital.id = ${criterios.filtro.id.contaCapital.id}
						</j:if>
						<j:if test="${criterios.filtro.id.numParcela != null}">
							AND p.id.numParcela = ${criterios.filtro.id.numParcela}
						</j:if>
						<j:if test="${criterios.filtro.id.codTipoParcelamento != null}">
							AND p.id.codTipoParcelamento = ${criterios.filtro.id.codTipoParcelamento}
						</j:if>
					</j:if>
					<j:if test="${criterios.filtro.codSituacaoParcela != null}">
						AND p.codSituacaoParcela = ${criterios.filtro.codSituacaoParcela}
					</j:if>
				</j:if>
			]]>
		</command>
	</query>
	<query name="PESQUISA_QUANTIDADE_PARCELAS_NAO_PAGAS">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa a quantidade de parcelas de integralizacao nao pagas pelo cooperado</description>
		<command>
			<![CDATA[
				SELECT COUNT(p.dataVencParcela)
				FROM br.com.sicoob.contacapital.comum.negocio.entidades.ParcelamentoCCA p
				WHERE p.codSituacaoParcela = ${codSituacaoParcela} 
				AND p.id.contaCapital.id = ${numMatricula}
			]]>
		</command>
	</query>
	<query name="OBTER_PARCELAMENTO_ATUAL">
		<use-case name="Conta Capital"></use-case>
		<description>Retorna o saldo</description>
		<command>
			<![CDATA[			
			SELECT MAX(p.id.numParcelamento) As Parcelamento From  
				br.com.sicoob.contacapital.comum.negocio.entidades.ParcelamentoCCA p 
			WHERE  p.id.contaCapital.id = ${NUM_MATRICULA}
            AND p.id.codTipoParcelamento = ${TIPO_PARCELAMENTO}
            <j:if test="${MODO_LANC != null}">
                  AND p.codModoLanc = ${MODO_LANC} 	
            </j:if>		          
			]]>
		</command>
	</query>
	<query name="EXCLUIR_INF_ACUM_COOP_CCA">
		<use-case name="Excluir Informações acumuladas"></use-case>
		<description>Exclui Informações acumuladas</description>
		<command>
			<![CDATA[
				DELETE FROM dbo.InfAcumulada 
					WHERE IDProduto = ${produtoContaCapital} AND IdentNegocio = '${lNumMatricula}'		
			]]>
		</command>
	</query>	
	<query name="EXCLUIR_PARCELAMENTO_POR_MAT">
		<use-case name="Excluir ParcelamentoCCA por matricula"></use-case>
		<description>Excluir ParcelamentoCCA por matricula</description>
		<command>
			<![CDATA[
				DELETE FROM dbo.ParcelamentoCCA WHERE (NumMatricula = ${lNumMatricula})	
				<j:if test="${codTipoParcelamento != null}">
                     AND CodTipoParcelamento = ${codTipoParcelamento} 	
            	</j:if>
            	<j:if test="${numParcelamento != null}">
                     AND NumParcelamento = ${numParcelamento} 	
            	</j:if>
            	<j:if test="${numParcela != null}">
                     AND NumParcela = ${numParcela} 	
            	</j:if>            	  
			]]>
		</command>
	</query>
	<query name="EXCLUIR_HISTCCA_POR_MAT">
		<use-case name="Excluir HistContaCapital por matricula"></use-case>
		<description>Excluir HistContaCapital por matricula</description>
		<command>
			<![CDATA[
				DELETE FROM dbo.HistContaCapital WHERE NumMatricula = ${lNumMatricula}
			]]>
		</command>
	</query>
	<query name="EXCLUIR_PROVJUROS_COOP">
		<use-case name="Excluir ProvisaoJuros por matricula"></use-case>
		<description>Excluir ProvisaoJuros por matricula</description>
		<command>
			<![CDATA[
				DELETE FROM dbo.ProvisaoJurosCCapital WHERE NumMatricula = ${lNumMatricula}
			]]>
		</command>
	</query>
	<query name="EXCLUIR_DESTINOPROV_COOP">
		<use-case name="Excluir DestinoProv por matricula"></use-case>
		<description>Excluir DestinoProv por matricula</description>
		<command>
			<![CDATA[
				DELETE FROM dbo.DestinoProvisao WHERE NumMatricula = ${lNumMatricula}
			]]>
		</command>
	</query>
	<query name="LISTAR_POR_COOP">
		<use-case name="Listar por Coop"></use-case>
		<description>Listar por Coop</description>
		<command>
			<![CDATA[
				SELECT QtdLancInf = QtdLancInf - COUNT(ValorLanc), 
					QtdLancApu = QtdLancApu - COUNT(ValorLanc), 
					ValorTotalLoteApu = ValorTotalLoteApu - SUM(ValorLanc), 
					ValorTotalLoteInf = ValorTotalLoteInf - SUM(ValorLanc), 
					LancamentosCcapital.DataLote , 
					LancamentosCcapital.NumLoteLanc 
				From dbo.LancamentosCcapital 
					INNER JOIN dbo.CapaLoteCapital ON LancamentosCcapital.DataLote = CapaLoteCapital.DataLote 
						AND LancamentosCcapital.NumLoteLanc = CapaLoteCapital.NumLoteLanc 
				Where NumMatricula = ${lNumMatricula}
					GROUP BY LancamentosCcapital.DataLote, 
						LancamentosCcapital.NumLoteLanc, 
						QtdLancInf , 
						QtdLancApu, 
						ValorTotalLoteApu, 
						ValorTotalLoteInf 
			]]>
		</command>
	</query>
	
	<query name="OBTER_VALOR_TOTAL_PARCELAMENTO">
		<use-case name="Conta Capital"></use-case>
		<description>Retorna o saldo</description>
		<command>
			<![CDATA[			
			SELECT SUM(p.valorParcela) As Total From  br.com.sicoob.contacapital.comum.negocio.entidades.ParcelamentoCCA p
			WHERE p.id.contaCapital.id = ${NUM_MATRICULA} AND 
			p.id.codTipoParcelamento = ${TIPO_PARCELAMENTO} AND p.id.numParcelamento = ${NUM_PARCELAMENTO} 	
			<j:if test="${TIPO_PARCELAS == null}">
					AND p.codSituacaoParcela = ${COD_PARCELA_GERADA}
                     OR p.codSituacaoParcela = ${COD_PARCELA_PAGA_VIA_CAIXA}
                     OR p.codSituacaoParcela = ${COD_PARCELA_PAGA_VIA_CHADMIN}
                     OR p.codSituacaoParcela = ${COD_PARCELA_PAGA_VIA_CONTA}
                     OR p.codSituacaoParcela = ${COD_PARCELA_PAGA_VIA_FOLHA}
                     OR p.codSituacaoParcela = ${COD_PARCELA_PAGA_VIA_COBRANCA}
                     OR p.codSituacaoParcela = ${COD_PARCELA_PAGA_ANTES_MIGRACAO}
                     OR p.codSituacaoParcela = ${COD_PARCELA_PAGA_VIA_RATEIO}
                     OR p.codSituacaoParcela = ${COD_PARCELA_PAGA_VIA_RESERVA}
			</j:if>	
			<j:if test="${TIPO_PARCELAS != null}">
                     AND p.codSituacaoParcela = ${TIPO_PARCELAS} 	
            </j:if>	         
			]]>
		</command>
	</query>
		
	<query name="PESQUISAR_VALOR_COTA_POR_DATA_MENOR">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa o valor cota pela data</description>
		<command>
			<![CDATA[			 
         		FROM br.com.sicoob.contacapital.comum.negocio.entidades.ValorCotas v
         		WHERE (v.id &lt;= :dataAtual) 
	         	ORDER BY v.id DESC
			]]>
		</command>
	</query>
	
	<query name="OBTER_DADOS_SELECAO_VALOR_COTA">
		<use-case name="Selecao geral Valor Cota"></use-case>
		<description>Selecao geral valor Cota</description>
		<command>
			<![CDATA[			 
         		SELECT DataInicialCota, DataCadastroCota, ValorCota,
				        NumMinCotasInteg, MoedaCorrente = (convert(float,ValorCota) * convert(float,NumMinCotasInteg)),
				        PercMinIntegralizacao,
				        ValorSalarioBase, BolLimIntegralCapConsignado, ValorLimiteIntegralMinimo, ValorLimiteIntegralMaximo,
				        CASE BolLimIntegralCapConsignado WHEN 1 THEN 'Sim' ELSE 'Não' END AS sBolLimIntegralCapConsignado
				FROM dbo.ValorCotas
				<j:if test="${criterios.filtro.procuraPor != null}">
					<j:if test="${criterios.filtro.tipoProcura == 1}">
						WHERE CONVERT(CHAR(10),DataInicialCota,103) LIKE '%${criterios.filtro.procuraPor}%'
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 2}">
						WHERE ValorCota = ${criterios.filtro.procuraPor}
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 3}">
						WHERE NumMinCotasInteg = ${criterios.filtro.procuraPor}
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 4}">
						WHERE PercMinIntegralizacao = ${criterios.filtro.procuraPor}
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 5}">
						WHERE (ValorSalarioBase = ${criterios.filtro.procuraPor})
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 6}">
						WHERE (ValorLimiteIntegralMinimo = ${criterios.filtro.procuraPor})
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 7}">
						WHERE (ValorLimiteIntegralMaximo = ${criterios.filtro.procuraPor})
					</j:if>	
				</j:if>	
			]]>
		</command>
	</query>
	
	<query name="OBTER_DADOS_SELECAO_VALOR_COTA_COUNT">
		<use-case name="Selecao geral Valor Cota contador"></use-case>
		<description>Selecao geral valor Cota contador</description>
		<command>
			<![CDATA[			 
         		SELECT COUNT(*) FROM dbo.ValorCotas
				<j:if test="${criterios.filtro.procuraPor != null}">
					<j:if test="${criterios.filtro.tipoProcura == 1}">
						WHERE CONVERT(CHAR(10),DataInicialCota,103) LIKE '%${criterios.filtro.procuraPor}%'
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 2}">
						WHERE ValorCota = ${criterios.filtro.procuraPor}
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 3}">
						WHERE NumMinCotasInteg = ${criterios.filtro.procuraPor}
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 4}">
						WHERE PercMinIntegralizacao = ${criterios.filtro.procuraPor}
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 5}">
						WHERE (ValorSalarioBase = ${criterios.filtro.procuraPor})
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 6}">
						WHERE (ValorLimiteIntegralMinimo = ${criterios.filtro.procuraPor})
					</j:if>
					<j:if test="${criterios.filtro.tipoProcura == 7}">
						WHERE (ValorLimiteIntegralMaximo = ${criterios.filtro.procuraPor})
					</j:if>	
				</j:if>	
			]]>
		</command>
	</query>
	
	<query name="OBTER_DADOS_CANCELAR_LANCAMENTOS_DIA">
		<use-case name="Obter lancamentos a serem estornados"></use-case>
		<description>Obtem Lista De lancamentos a serem estornados</description>
		<command>
			<![CDATA[			 
         		SELECT NumMatricula, DescNomePessoa, IDTipoHistoricoLanc, NumLoteLanc, NumSeqLanc,
					 DescNumDocumento, ValorLanc, DataHoraInclusao, Evento FROM
					 ((SELECT LancamentosCCapital.NumMatricula, Pessoa.DescNomePessoa,
						 LancamentosCCapital.IDTipoHistoricoLanc,
						 NumLoteLanc, NumSeqLanc, DescNumDocumento, ValorLanc, DataHoraInclusao,
						 Evento = CASE LancamentosCCapital.IDTipoHistoricoLanc
									WHEN ${vo.codHistoricoCcaSubscricao} THEN
										CASE WHEN NumLoteLanc = ${vo.codLoteCcaDestRateio} THEN CONVERT(VARCHAR(40), 'Destinação do Rateio (Cooperado Ativo)')
											WHEN LEFT(DescNumDocumento, 6) = '${vo.codDescDocumentoIncCoop}' THEN CONVERT(VARCHAR(40), 'Inclusão de Cooperado')
											WHEN LEFT(DescNumDocumento, 6) = '${vo.codDescDocumentoReativacao}' THEN CONVERT(VARCHAR(40), 'Reativação')
											WHEN LEFT(DescNumDocumento, 6) = '${vo.codDescDocumentoSubscricao}' THEN CONVERT(VARCHAR(40), 'Subscrição')
											WHEN SUBSTRING(DescNumDocumento, 4,3) = SUBSTRING('${vo.codDescDocumentoImportFolha}', 4,3) THEN CONVERT(VARCHAR(40), 'Importação Via Folha')
											WHEN SUBSTRING(DescNumDocumento, 4,3) = SUBSTRING('${vo.codDescDocumentoImportReserva}', 4,3) THEN CONVERT(VARCHAR(40), 'Importação Via Reserva')
											WHEN SUBSTRING(DescNumDocumento, 4,3) = SUBSTRING('${vo.codDescDocumentoImportCco}', 4,3) THEN CONVERT(VARCHAR(40), 'Importação Via Conta Corrente')
											WHEN SUBSTRING(DescNumDocumento, 4,3) = SUBSTRING('${vo.codDescDocumentoImportBanco}', 4,3) THEN CONVERT(VARCHAR(40), 'Importação Via Banco')
											WHEN SUBSTRING(DescNumDocumento, 4,3) = SUBSTRING('${vo.codDescDocumentoImportRateio}', 4,3) THEN CONVERT(VARCHAR(40), 'Importação Via Rateio')
											WHEN DescNumDocumento = 'CONSIGNADO' THEN CONVERT(VARCHAR(40), 'Capital Consigando')
										END
									WHEN ${vo.codHistoricoCcaBaixaSubscricao} THEN
										CASE WHEN LEFT(DescNumDocumento, 6) = '${vo.codDescDocumentoDesligamento}' THEN CONVERT(VARCHAR(40), 'Desligamento')
											WHEN LEFT(DescNumDocumento, 6) = '${vo.codDescDocumentoDevCapitalAtivo}' THEN CONVERT(VARCHAR(40), 'Devolução de Capital (Cooperado Ativo)')
										END
									WHEN ${vo.codHistoricoCcaDevolEstorno} THEN 
										CASE WHEN LEFT(DescNumDocumento, 6) = '${vo.codDescDocumentoDevCapitalAtivo}' THEN CONVERT(VARCHAR(40), 'Estorno de Capital (Cooperado Ativo)')
											WHEN LEFT(DescNumDocumento, 6) = '${vo.codDescDocumentoDevCapitalInativo}' THEN CONVERT(VARCHAR(40), 'Estorno de Capital (Cooperado Inativo)')
										End
									WHEN ${vo.codHistoricoCcaSubscImplantacao} THEN CONVERT(VARCHAR(40), 'Implantação de Saldos (Migração)')
									WHEN ${vo.codHistoricoCcaCancelSubscricao} THEN CONVERT(VARCHAR(40), 'Baixa da Parcela de Subscrição')
									WHEN ${vo.codHistoricoCcaTransfBaixaInteg} THEN CONVERT(VARCHAR(40), 'Transferência de Cotas: ' + DescNumDocumento)
									WHEN ${vo.codHistoricoCcaTransferenciaInteg} THEN CONVERT(VARCHAR(40), 'Transferência de Cotas: ' + DescNumDocumento)
									WHEN ${vo.codHistoricoCcaDevolucaoChqAdm} THEN CONVERT(VARCHAR(40), 'Baixa da Parcela de Devolução Via Banco')
									WHEN ${ vo.codHistoricoCcaIntegCaixa} THEN CONVERT(VARCHAR(40), 'Integralização Via Caixa')
									WHEN ${vo.codHistoricoCcaDevolucaoCaixa} THEN
										CASE WHEN LEFT(DescNumDocumento, 6) = '000001' THEN CONVERT(VARCHAR(40), 'Devolução Via Caixa (Ativo)')
											WHEN LEFT(DescNumDocumento, 6) = '000002' THEN CONVERT(VARCHAR(40), 'Devolução Via Caixa (Inativo)') 
										END
									WHEN ${vo.codHistoricoCcaRateioCoopDeslig} THEN CONVERT(VARCHAR(40), 'Destinação do Rateio (Cooperado Inativo)')
									WHEN ${vo.codHistoricoCcaIntegBanco} THEN CONVERT(VARCHAR(40), 'Integralização Via Banco/Chq. Adm.')
									WHEN ${vo.codHistoricoCcaIntegFolha} THEN CONVERT(VARCHAR(40), 'Integralização Via Folha')
								  End
						From dbo.LancamentosCCapital
							INNER JOIN dbo.ContaCapital ON ContaCapital.NumMatricula = LancamentosCCapital.NumMatricula
							INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa
							INNER JOIN dbo.Produto ON Produto.IDProduto = ${vo.produtoContaCapital}
						Where LancamentosCCapital.DataLote = Produto.DataAtualProd
							AND LancamentosCCapital.IDTipoHistoricoLanc IN (${vo.codHistoricoCcaSubscricao}, ${vo.codHistoricoCcaBaixaSubscricao},
					            ${vo.codHistoricoCcaSubscImplantacao}, ${vo.codHistoricoCcaTransfBaixaInteg}, ${vo.codHistoricoCcaTransferenciaInteg},
					            ${vo.codHistoricoCcaDevolucaoChqAdm}, ${ vo.codHistoricoCcaIntegCaixa}, ${vo.codHistoricoCcaDevolucaoCaixa},
					            ${vo.codHistoricoCcaIntegBanco}, ${vo.codHistoricoCcaCancelSubscricao}, ${vo.codHistoricoCcaRateioCoopDeslig},
					            ${vo.codHistoricoCcaIntegFolha}, ${vo.codHistoricoCcaDevolEstorno})
							AND LancamentosCCapital.NumLoteLanc IN (${vo.codLoteCcaParcAvista}, ${vo.codLoteCcaParcelas}, ${vo.codLoteCcaTransferencia},
					            ${vo.codLoteCcaDestRateio}, ${vo.codLoteCcaArquivo}, ${vo.codLoteCcaMigracao}, ${vo.codLoteCcaCapitalConsignado})
							AND (LancamentosCCapital.IDTipoHistoricoLanc IN (${vo.codHistoricoCcaSubscricao}, ${vo.codHistoricoCcaBaixaSubscricao},
					            ${vo.codHistoricoCcaSubscImplantacao}, ${vo.codHistoricoCcaTransfBaixaInteg}, ${vo.codHistoricoCcaTransferenciaInteg},
					            ${ vo.codHistoricoCcaIntegCaixa}, ${vo.codHistoricoCcaDevolucaoCaixa}, ${vo.codHistoricoCcaRateioCoopDeslig}, ${vo.codHistoricoCcaDevolEstorno})
							OR SUBSTRING(DescNumDocumento,5,1) = '-')
						)
					UNION ALL
					 (SELECT ParcelamentoCCA.NumMatricula , Pessoa.DescNomePessoa, IDTipoHistoricoLanc = 0, NumLoteLanc = ${vo.codLoteCcaParcAvista},
						NumSeqLanc = CASE WHEN (SELECT TOP 1 NumSeqLanc 
													FROM dbo.LancamentosCCapital 
													WHERE DescNumDocumento = '${vo.codDescDocumentoDevCapitalAtivo}' + RIGHT(ParcelamentoCCA.NumParcelamento, 4) 
														AND DataLote = Produto.DataAtualProd AND NumMatricula = ParcelamentoCCA.NumMatricula) > 0 THEN -1
										WHEN (SELECT COUNT(NumSeqLanc) 
												FROM dbo.LancamentosCCapital
												WHERE LEFT(DescNumDocumento,6) = '${vo.codDescDocumentoDevCapitalInativo}' and IDTipoHistoricoLanc = ${vo.codHistoricoCcaDevolEstorno}
													AND DataLote = Produto.DataAtualProd AND NumMatricula = ParcelamentoCCA.NumMatricula) > 0 THEN (SELECT MAX( NumSeqLanc) 
																																						FROM dbo.LancamentosCCapital
																																						WHERE LEFT(DescNumDocumento,6) = '${vo.codDescDocumentoDevCapitalInativo}' 
																																							and IDTipoHistoricoLanc = ${vo.codHistoricoCcaDevolEstorno}
																																							AND DataLote = Produto.DataAtualProd AND NumMatricula = ParcelamentoCCA.NumMatricula) + 1
										WHEN (SELECT COUNT(NumSeqLanc) 
												FROM dbo.LancamentosCCapital
												WHERE DescNumDocumento = '${vo.codDescDocumentoDesligamento}' + RIGHT(ParcelamentoCCA.NumParcelamento, 4)
													AND NumMatricula = ParcelamentoCCA.NumMatricula) > 0 THEN (SELECT TOP 1 NumSeqLanc 
																												FROM dbo.LancamentosCCapital
																												WHERE DescNumDocumento = '${vo.codDescDocumentoDesligamento}' + RIGHT(ParcelamentoCCA.NumParcelamento, 4)
																													AND NumMatricula = ParcelamentoCCA.NumMatricula) + 1
																										ELSE (SELECT TOP 1 NumSeqLanc 
																												FROM dbo.LancamentosCCapital
																												WHERE IDTipoHistoricoLanc = ${vo.codHistoricoCcaRateioCoopDeslig}
																													AND NumMatricula = ParcelamentoCCA.NumMatricula) + 1
									END
						,DescNumDocumento = CONVERT(VARCHAR(10), ParcelamentoCCA.NumParcelamento), ValorLanc = SUM(ValorParcela),
						DataHoraInclusao = CASE WHEN (SELECT TOP 1 DataHoraInclusao 
														FROM dbo.LancamentosCCapital 
														WHERE DescNumDocumento = '${vo.codDescDocumentoDevCapitalAtivo}' + RIGHT(ParcelamentoCCA.NumParcelamento, 4) 
															AND DataLote = Produto.DataAtualProd AND NumMatricula = ParcelamentoCCA.NumMatricula) > 0 THEN -1
												WHEN (SELECT COUNT(DataHoraInclusao) 
														FROM dbo.LancamentosCCapital
														WHERE left(DescNumDocumento,6) = '${vo.codDescDocumentoDevCapitalInativo}' 
															and IDTipoHistoricoLanc = ${vo.codHistoricoCcaDevolEstorno} AND DataLote = Produto.DataAtualProd 
															AND NumMatricula = ParcelamentoCCA.NumMatricula) > 0 THEN (SELECT MAX(DataHoraInclusao) 
																														FROM dbo.LancamentosCCapital
																														WHERE left(DescNumDocumento,6) = '${vo.codDescDocumentoDevCapitalInativo}' 
																															and IDTipoHistoricoLanc = ${vo.codHistoricoCcaDevolEstorno}
																															AND DataLote = Produto.DataAtualProd AND NumMatricula = ParcelamentoCCA.NumMatricula)
												WHEN (SELECT COUNT(DataHoraInclusao) 
														FROM dbo.LancamentosCCapital
														WHERE DescNumDocumento = '${vo.codDescDocumentoDesligamento}' + RIGHT(ParcelamentoCCA.NumParcelamento, 4)
															AND NumMatricula = ParcelamentoCCA.NumMatricula) > 0 THEN (SELECT TOP 1 DataHoraInclusao 
																														FROM dbo.LancamentosCCapital
																														WHERE DescNumDocumento = '${vo.codDescDocumentoDesligamento}' + RIGHT(ParcelamentoCCA.NumParcelamento, 4)
																															AND NumMatricula = ParcelamentoCCA.NumMatricula)
																												ELSE (SELECT MAX(DataHoraInclusao) 
																														FROM dbo.LancamentosCCapital
																														WHERE IDTipoHistoricoLanc = ${vo.codHistoricoCcaRateioCoopDeslig}
																															AND NumMatricula = ParcelamentoCCA.NumMatricula)
												END,
						Evento = CONVERT(VARCHAR(40), 'Devolução de Capital (Cooperado Inativo)')
					 From dbo.ParcelamentoCCA
						INNER JOIN dbo.ContaCapital ON ContaCapital.NumMatricula = ParcelamentoCCA.NumMatricula
						INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa
						INNER JOIN dbo.Produto ON Produto.IDProduto = ${vo.produtoContaCapital}
					 WHERE CodTipoParcelamento = ${vo.codTipoParcelamentoDevolucao} And DataSituacaoParcela = Produto.DataAtualProd
					 GROUP BY ParcelamentoCCA.NumMatricula, Pessoa.DescNomePessoa, ParcelamentoCCA.NumParcelamento, Produto.DataAtualProd
					 )    
					UNION ALL
					 (SELECT NumMatricula, DescNomePessoa,IDTipoHistoricoLanc, NumLoteLanc, NumSeqLanc,
							DescNumDocumento,ValorLanc, DataHoraInclusao, Evento 
						FROM (SELECT HistContaCapital.NumMatricula, Pessoa.DescNomePessoa,
								IDTipoHistoricoLanc = CASE WHEN HistContaCapital.CodSituacao = ${vo.codSituacaoCooperadoAtivo} THEN (SELECT COUNT(IDTipoHistoricoLanc) 
																																		FROM dbo.LancamentosCCapital
																																		Where DataLote = Produto.DataAtualProd 
																																			And NumMatricula = HistContaCapital.NumMatricula AND IDTipoHistoricoLanc = ${vo.codHistoricoCcaSubscricao} 
																																			AND LEFT(DescNumDocumento, 6) IN ( '${vo.codDescDocumentoIncCoop}' , '${vo.codDescDocumentoReativacao}'))
																																ELSE (SELECT COUNT(IDTipoHistoricoLanc) 
																																		FROM dbo.LancamentosCCapital
																																		Where DataLote = Produto.DataAtualProd And NumMatricula = HistContaCapital.NumMatricula
																																		AND IDTipoHistoricoLanc = ${vo.codHistoricoCcaBaixaSubscricao} 
																																		AND LEFT(DescNumDocumento, 6) = '${vo.codDescDocumentoDesligamento}')
														END,
								NumLoteLanc = ${vo.codLoteCcaParcAvista} , NumSeqLanc = 0, DescNumDocumento = '', ValorLanc = 0,
								DataHoraInclusao = CASE WHEN (SELECT COUNT(DataHoraInclusao) 
																FROM dbo.LancamentosCCapital
																WHERE DataLote = Produto.DataAtualProd AND NumMatricula = HistContaCapital.NumMatricula ) = 0 
																	THEN HistContaCapital.DataOcorrencia
																	ELSE CONVERT(DATETIME,CONVERT(VARCHAR(10), (SELECT TOP 1 DataHoraInclusao 
																													FROM dbo.LancamentosCCapital
																													WHERE DataLote = Produto.DataAtualProd AND NumMatricula = HistContaCapital.NumMatricula ),103)
																													+ ' ' + CONVERT(VARCHAR(12), HistContaCapital.DataOcorrencia,108),103)
													END,
								Evento = CASE WHEN HistContaCapital.CodSituacao = ${vo.codSituacaoCooperadoAtivo}
										   THEN CONVERT(VARCHAR(40), 'Inclusão/Reativação (Saldo zero)')
										   ELSE CONVERT(VARCHAR(40), 'Desligamento (Saldo zero)') 
										END
							  From dbo.HistContaCapital
								 INNER JOIN dbo.ContaCapital ON ContaCapital.NumMatricula = HistContaCapital.NumMatricula
								 INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa
								 INNER JOIN dbo.Produto ON Produto.IDProduto = ${vo.produtoContaCapital}
							  Where HistContaCapital.DataOcorrencia >= Produto.DataAtualProd
								AND HistContaCapital.CodSituacao IN (${vo.codSituacaoCooperadoAtivo}, ${vo.codSituacaoCooperadoDemitido}, 
																		${vo.codSituacaoCooperadoEliminado},${vo.codSituacaoCooperadoExcluido})
							) AS X 
							WHERE (IDTipoHistoricoLanc = 0 OR IDTipoHistoricoLanc IS NULL)
					 )
					 ) AS A
					 WHERE NumSeqLanc >= 0 
					 AND EVENTO IS NOT NULL 
					 <j:if test="${vo.numMatricula != null}">
						AND NumMatricula = ${vo.numMatricula}
					 </j:if> 
					 ORDER BY NumMatricula, DataHoraInclusao, NumSeqLanc, NumLoteLanc
			]]>
		</command>
	</query>
	
	<query name="ESTORNAR_CAPITAL">
		<use-case name="Estornar Capital"></use-case>
		<description>Estornar Capital</description>
		<command>
			<![CDATA[
				dbo.spu_CCA_DevolucaoViaEstorno ${NUM_MATRICULA},${COOP_ATIVO},${VALOR_LANCAMENTO},'${DATA_ESTORNO}','${USUARIO}'                                     	
			]]>
		</command>
	</query>		
	
	<query name="OBTER_MATRICULA_REATIVACAO">
		<use-case name="Obter Matricula Reativação"></use-case>
		<description>Obter Matricula Reativação</description>
		<command>
			<![CDATA[
				Select top 1 nummatricula
				From dbo.ContaCapital
				Where NumCliente = ${numcliente}
					and NumCliente not in (Select NumCliente FROM dbo.ContaCapital 
			                                   WHERE CodSituacao = 1 and NumCliente = ${numcliente})
				order by datamatricula desc , datasaida desc, nummatricula desc
			]]>
		</command>
	</query>	

	<query name="OBTER_LISTA_ANO_EXERCICIO_REMUNERADO">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa o valor cota pela data</description>
		<command>
			<![CDATA[
				SELECT DISTINCT(exercicioRemunerado.id.anoProvisao) AS anoProvisao
				from br.com.sicoob.contacapital.comum.negocio.entidades.ExercicioRemunerado exercicioRemunerado
				ORDER BY exercicioRemunerado.id.anoProvisao					 
			]]>
		</command>
	</query>
	
	<query name="PESQUISAR_EXERCICIO_REMUNERADO">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisar Exercicio Remunerado</description>
		<command>
			<![CDATA[
				FROM br.com.sicoob.contacapital.comum.negocio.entidades.ExercicioRemunerado exercicioRemunerado
				<j:if test="${criterios.filtro != null}">
					<j:if test="${criterios.filtro.id != null}">
						<j:if test="${criterios.filtro.id.anoProvisao != null}">
							WHERE exercicioRemunerado.id.anoProvisao = ${criterios.filtro.id.anoProvisao}
						</j:if>
					</j:if>
				</j:if>
			]]>
		</command>
	</query>
	
	<query name="VERIFICAR_EXISTENCIA_EXERCICIO_REMUNERADO">
		<use-case name="Conta Capital"></use-case>
		<description>Verifica se exercicio remunerado já está cadastrado para a data do movimento</description>
		<command>
			<![CDATA[
				SELECT exercicioRemunerado.id.dataCadastro
				FROM br.com.sicoob.contacapital.comum.negocio.entidades.ExercicioRemunerado exercicioRemunerado
				WHERE exercicioRemunerado.id.dataCadastro = '${dataCadastroFmt}'
			]]>
		</command>
	</query>
	<query name="SOMAR_VALOR_CAPA_LOTE">
		<use-case name="Somar valor CapaLote"></use-case>
		<description>Atualiza valores no capaLote</description>
		<command>
			<![CDATA[
				Update dbo.CapaLoteCapital
				    SET QtdLancApu = QtdLancApu + (${iQtdLanc})
						, ValorTotalLoteApu = ValorTotalLoteApu + ${cValor} - ISNULL(D.ValorLanc, 0)
				                
				       <j:if test="${geradoAutomatico == true}">
				            , QtdLancInf = QtdLancInf + (${iQtdLanc})
						    , ValorTotalLoteInf = ValorTotalLoteInf + (${cValor}) -  ISNULL(D.ValorLanc, 0)
				       </j:if>
				        
				        FROM dbo.CapaLoteCapital C
				           LEFT OUTER JOIN dbo.LancamentoCCO D
				               ON C.DataLote = D.DataLote
				               AND C.NumLoteLanc = D.NumLoteLanc
				               <j:if test="${iQtdLanc == 0}">
									AND NumSeqLanc = ${numSeqLanc}
							   </j:if>
			      			   <j:if test="${iQtdLanc != 0}">
							   		AND NumSeqLanc = NULL
							   </j:if>				            	
				            WHERE C.DataLote = '${dataLote}'
								AND	C.NumLoteLanc =  ${numLoteLanc}
			]]>
		</command>
	</query>
	<query name="PESQUISA_PARCELA_VIA_FOLHA_CLIENTE">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa parcelas via folha em aberto ou aguardando retorno</description>
		<command>
			<![CDATA[
			FROM br.com.sicoob.contacapital.comum.negocio.entidades.ParcelamentoCCA p
			WHERE 
			p.codSituacaoParcela in (${listaCod})
			AND p.codModoLanc = ${codModoLanc}
			AND p.id.codTipoParcelamento = ${codTipoParc}
			<j:if test="${numCliente != null}">
				AND p.id.contaCapital.numCliente = ${numCliente}
			</j:if>
			<j:if test="${numCliente == null}">
				AND p.id.contaCapital.numCliente in (
					SELECT c.numCliente 
					FROM br.com.sicoob.contacapital.comum.negocio.entidades.ContaCapital c
					WHERE c.id = ${numMatricula}
				)
			</j:if>
			]]>
		</command>
	</query>
	
	<query name="PESQUISA_CLIENTE_PREP_REMESSA">
		<use-case name="Conta Capital"></use-case>
		<description>Verificar se a empresa onde o cooperado trabalha já teve ou não preparação de Remessas</description>
		<command>
			<![CDATA[
				SELECT T.NumPessoaJuridica
				FROM dbo.Trabalha T 
				INNER JOIN dbo.COR_FolhaRemessa FR 
					ON FR.NumPessoaJuridica = T.NumPessoaJuridica 
					AND AnoRef = ${anoData} 
					AND MesRef = ${mesData} 
				Where T.UIDTrabalha = '${uidTrabalha}'
			]]>
		</command>
	</query>
	
	<query name="PESQUISA_SE_CLIENTE_TRABALHA_EMPRESA_FOLHA">
		<use-case name="Conta Capital"></use-case>
		<description></description>
		<command>
			<![CDATA[
				SELECT P.NumPessoa 
				From dbo.Trabalha T 
				Inner Join dbo.LancFolhaPJ LF 
					On T.NumPessoaJuridica = LF.NumPessoaJuridica 
				INNER JOIN dbo.Pessoa P 
					on CodPF_PJ = 0 
					and P.NumPessoa = ${numCliente}
					<j:if test="${uidTrabalha != null}">
						AND T.UIDTrabalha = '${uidTrabalha}'
					</j:if>
			]]>
		</command>
	</query>
		
	<query name="PESQUISA_SE_DEBITO_INDETERMINADO_FOLHA_CLIENTE">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa que verifica se o cliente possui débito indeterminado via folha</description>
		<command>
			<![CDATA[
			FROM br.com.sicoob.contacapital.comum.negocio.entidades.ContaCapital p
			WHERE 
			p.codFormaDeb in (${listaCod})
			AND p.bolDebIndeterminado = 1
			AND p.codSituacao = 1
			<j:if test="${numCliente != null}">
				AND p.numCliente = ${numCliente}
			</j:if>
			<j:if test="${numCliente == null}">
				AND p.id != ${numMatricula}
				AND p.numCliente in (
					SELECT c.numCliente 
					FROM br.com.sicoob.contacapital.comum.negocio.entidades.ContaCapital c
					WHERE c.id = ${numMatricula}
				)
			</j:if>
			]]>
		</command>
	</query>
	<query name="PESQUISA_MAX_NUM_PARCELAMENTO">
		<use-case name="Conta Capital"></use-case>
		<description></description>
		<command>
			<![CDATA[
			SELECT max(p.id.numParcelamento)
			FROM br.com.sicoob.contacapital.comum.negocio.entidades.ParcelamentoCCA p
			WHERE p.id.contaCapital.id = :numMatricula
			AND p.id.codTipoParcelamento = :codTipoParcelamento
			]]>
		</command>
	</query>
	
	<query name="PESQUISA_DADOS_CONTA_CAPITAL">
		<use-case name="Exemplo"></use-case>
		<description>Exemplo</description>
		<command>
			<![CDATA[
			
				SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED  
			
				SELECT 
				NumMatricula, DataMatricula, DataSaida, NumCliente, NumContaCorrente, 
				UIDTrabalha, ValorSaldoAtuInteg, ValorSaldoAtuSubsc, 
				ValorSaldoAtuDevolver, DataSaldoAnterior, ValorSaldoAntInteg, 
				ValorSaldoAntSubsc, ValorSaldoAntDevolver, ValorSaldoMedRealAcu, 
				ValorSaldoMedPosAcu, ValorSaldoAtuDivs, ValorSaldoAntDivs, CodSituacao, 
				BolDebIndeterminado, ValorDeb, CodFormaDeb, DataVencimentoDeb, 
				PeriodoProxDeb, TipoPeriodoDeb, BolParticipaRateio, CodTipoValorDebito, 
				IDCondicaoAssociacao, BolDireitoVoto, 
				DescCondicaoAssociacao = CASE ISNULL(IDCondicaoAssociacao,-1) 
				            WHEN -1 THEN '' 
				        ELSE 
				            (SELECT TOP 1 DescCondicaoAssociacao FROM dbo.CondicaoAssociacao 
				            	WHERE ContaCapital.IDCondicaoAssociacao = CondicaoAssociacao.IDCondicaoAssociacao)
				        END, 
				ValorAtuSubsc= CASE ISNULL(ContaCapital.ValorSaldoAtuSubsc,0)
				        WHEN 0 THEN 0
				                        Else ContaCapital.ValorSaldoAtuSubsc
				                        End   +
				                           CASE ISNULL((SELECT ValorLanc=Sum(V.ValorLanc)
				                           FROM dbo.Viw_CCA_Extrato as V
				                           Where V.NumMatricula = ContaCapital.NumMatricula AND
				                                   V.CodGrupoHist = ${COD_GRUPO_HIST_SUBSCRICAO} And
				                                   V.BolAtualizado = 0
				                           group by V.NumMatricula), 0)
				                           WHEN 0 THEN 0
				                           ELSE (SELECT ValorLanc=Sum(V.ValorLanc)
				                               FROM dbo.Viw_CCA_Extrato as V
				                               Where V.NumMatricula = ContaCapital.NumMatricula AND
				                                   V.CodGrupoHist = ${COD_GRUPO_HIST_SUBSCRICAO} And
				                                   V.BolAtualizado = 0
				                               group by V.NumMatricula)
				                           END,
				            ValorAtuInteg= CASE ISNULL(ContaCapital.ValorSaldoAtuInteg,0)
				                            WHEN 0 THEN 0
				                            Else ContaCapital.ValorSaldoAtuInteg
				                            End    +
				                           CASE ISNULL((SELECT ValorLanc=Sum(V.ValorLanc)
				                                       FROM dbo.Viw_CCA_Extrato as V
				                                       Where V.NumMatricula = ContaCapital.NumMatricula AND
				                                           V.CodGrupoHist = ${COD_GRUPO_HIST_INTEGRALIZACAO} AND
				                                           V.BolAtualizado = 0
				                                       group by V.NumMatricula), 0)
				                           WHEN 0 THEN 0
				                           ELSE (SELECT ValorLanc=Sum(V.ValorLanc)
				                                   FROM dbo.Viw_CCA_Extrato as V
				                                   Where V.NumMatricula = ContaCapital.NumMatricula AND
				                                       V.CodGrupoHist = ${COD_GRUPO_HIST_INTEGRALIZACAO} AND
				                                       V.BolAtualizado = 0
				                                   group by V.NumMatricula)
				                           END,
				            ValorAtuDevolver= CASE ISNULL(ContaCapital.ValorSaldoAtuDevolver,0)
				                                WHEN 0 THEN 0
				                                Else ContaCapital.ValorSaldoAtuDevolver
				                                End   +
				                               CASE ISNULL((SELECT ValorLanc=Sum(V.ValorLanc)
				                               FROM dbo.Viw_CCA_Extrato as V
				                               Where V.NumMatricula = ContaCapital.NumMatricula AND
				                                   V.CodGrupoHist = ${COD_GRUPO_HIST_DEVOLUCAO} AND
				                                   V.BolAtualizado = 0
				                               group by V.NumMatricula), 0)
				                               WHEN 0 THEN 0
				                               ELSE (SELECT ValorLanc=Sum(V.ValorLanc)
				                                       FROM dbo.Viw_CCA_Extrato as V
				                                       WHERE V.NumMatricula = ContaCapital.NumMatricula AND
				                                               V.CodGrupoHist = ${COD_GRUPO_HIST_DEVOLUCAO} AND
				                                               V.BolAtualizado = 0
				                                       GROUP BY V.NumMatricula)
				                               END,
				 ValorAtuDivs= CASE ISNULL(ContaCapital.ValorSaldoAtuDivs,0)
				                 WHEN 0 THEN 0
				                 Else ContaCapital.ValorSaldoAtuDivs
				                 End   +
				                CASE ISNULL((SELECT ValorLanc=Sum(V.ValorLanc)
				                FROM dbo.Viw_CCA_Extrato as V
				                Where V.NumMatricula = ContaCapital.NumMatricula AND
				                    V.CodGrupoHist = ${COD_GRUPO_HIST_VALORES_DIVERSOS} AND
				                    V.BolAtualizado = 0
				                group by V.NumMatricula), 0)
				                WHEN 0 THEN 0
				                ELSE (SELECT ValorLanc=Sum(V.ValorLanc)
				                        FROM dbo.Viw_CCA_Extrato as V
				                        WHERE V.NumMatricula = ContaCapital.NumMatricula AND
				                                V.CodGrupoHist = ${COD_GRUPO_HIST_VALORES_DIVERSOS}  AND
				                                V.BolAtualizado = 0
				                        GROUP BY V.NumMatricula)
				                END,
				            Situacao = CASE CodSituacao
				                        WHEN ${COD_SITUACAO_COOPERADO_ATIVO} THEN 'Ativo'
				                        WHEN ${COD_SITUACAO_COOPERADO_DEMITIDO} THEN 'Demitido'
				                        WHEN ${COD_SITUACAO_COOPERADO_EXCLUIDO} THEN 'Excluído'
				                        WHEN ${COD_SITUACAO_COOPERADO_ELIMINADO} THEN 'Eliminado'
				                        End, BolRestricaoRateio, ObsRestricao
				From dbo.ContaCapital
				Where NumMatricula = ${numMatricula}
			]]>
		</command>
	</query>
	<query name="PESQUISA_MAX_SEQUENCIAL_LANCAMENTO">
		<use-case name="Conta Capital"></use-case>
		<description></description>
		<command>
			<![CDATA[
				SELECT max(p.id.numSeqLanc)
				FROM br.com.sicoob.contacapital.comum.negocio.entidades.LancamentosCCapital p
				WHERE p.id.dataLote = :dataLote
				AND p.id.numLoteLanc = :numLoteLanc
			]]>
		</command>
	</query>
	<query name="OBTER_PARCELAS_PAGA">
		<use-case name="ParcelametoCCA"></use-case>
		<description>Obter parcelas pagas</description>
		<command>
			<![CDATA[
				SELECT CP.NumMatricula,
			                 CCA.NumParcelamento, CCA.NumParcela, CCA.CodTipoParcelamento, CCA.DataVencParcela,
			                 CCA.DataSituacaoParcela, CCA.ValorParcela, CCA.CodModoLanc,
			                 CCA.CodSituacaoParcela, NumContaCorrente = ISNULL(CCA.NumContaCorrente, CP.NumContaCorrente)
			            FROM dbo.ParcelamentoCCA CCA INNER JOIN dbo.ContaCapital CP
			                  ON CCA.NumMatricula = CP.NumMatricula
			            Where CCA.CodSituacaoParcela = ${iSituacaoParcela}
			            And CP.NumMatricula = ${lNumMatricula}
			            
			    <j:if test="${iNumParcelamento != null}">
			       AND CCA.NumParcelamento = ${iNumParcelamento}
			    </j:if> 
			    
			    <j:if test="${iCodTipoParcelamento != null}">
			       AND CCA.CodTipoParcelamento = ${iCodTipoParcelamento}
			    </j:if> 
			    
			    <j:if test="${iNumParcela != null}">
			       AND CCA.NumParcela = ${iNumParcela}
			    </j:if>
    		]]>
    	</command>
	</query>
	
	<query name="OBTER_ULTIMA_MATRICULA">
		<use-case name="Recupera ultima matricula"></use-case>
		<description>Recupera ultima matricula</description>
		<command>
			<![CDATA[
				SELECT MAX(NumMatricula) As Matricula From  dbo.ContaCapital		
			]]>
		</command>
	</query>	
	
	<query name="OBTER_MATRICULA_DISPONIVEL">
		<use-case name="Recupera uma matricula que não esta no banco de dados"></use-case>
		<description>Recupera a matricula não esta no banco de dados</description>
		<command>
			<![CDATA[
				select TOP 1 SEQ as matricula from (select NumMatricula, ROW_NUMBER() OVER (ORDER BY NumMatricula) AS SEQ
					from ContaCapital) AS TMP where NumMatricula != SEQ	
			]]>
		</command>
	</query>
	
	<query name="OBTER_LISTA_TRABALHA_MATRICULA">
		<use-case name="ObterListaTrabalhaPorMatricula"></use-case>
		<description>ObterListaTrabalhaPorMatricula</description>
		<command>
			<![CDATA[
				SELECT 
				    UIDTrabalha, 
				    DescMatriculaFunc, 
				    IsNull(DiaRodaFolhaOrgao,DiaRodaFolha) as DiaRodaFolha,
				    LF.QtdeDiasGeraInf, 
				    LF.CodOrigemTaxaJuros, 
				    LF.CodTipoEmpresaConvenio, 
				    IsNull(PJur.DescNomePessoa, '') AS NomeEmpresa,
				    DescMatriculaFunc + ' - ' + IsNull(PJur.DescNomePessoa, '') AS MatriculaEmp,
				    LF.BolExigeAverbacao,
				    LF.CodTipoBonificacaoSeguro, 
				    LF.CodTipoSeguro,  LF.IDSeqCorretor, 
				    LF.NumPessoaSeguro, 
				    T.NumPessoaJuridica, 
				    LF.IDIndicadorCalculo, 
				    LF.QtdOperacaoPorCliente, 
				    LF.CodTipoIndisponibilidade, 
				    LF.DataInicioIndisponibilidade, 
				    LF.DataFimIndisponibilidade, 
				    LF.CodTravaInadimplencia, 
				    LF.PercIndiceInadimplencia, 
				    LF.CodCriterioAverbacao 
				 FROM 
				    dbo.Trabalha T 
				        INNER Join dbo.LancFolhaPJ LF On 
				            T.NumPessoaJuridica = LF.NumPessoaJuridica 
				        Left Join OrgaoLancFolha Org on
				            Org.NumPessoaJuridica = T.NumPessoaJuridica And 
				            Org.CodOrgao = T.CodOrgao 
				        LEFT JOIN dbo.Pessoa PJur ON
				            PJur.NumPessoa = T.NumPessoaJuridica
				 WHERE 
				    T.NumPessoaFisica = ${codPessoaFisica}  AND 
				    DescMatriculaFunc IS NOT NULL AND 
				    T.NumPessoaJuridica IS NOT NULL 
			]]>
		</command>
	</query>
	<query name="OBTER_NUM_SEQ">
		<use-case name="Recuperar numero sequencial"></use-case>
		<description>Recupera numero sequencial da tabela LancamentosCCapital</description>
		<command>
			<![CDATA[
				SELECT NumSeqLanc = MAX (NumSeqLanc) From dbo.LancamentosCCapital
			    <j:choose>
					<j:when test="${bBolAtualizado == true}">
						WHERE BolAtualizado = 1
					</j:when>
					<j:otherwise>
						WHERE BolAtualizado = 0
					</j:otherwise>
				</j:choose>                    
			    <j:if test="${dtmDataLote != null}">
			        AND CONVERT(DATETIME, DataLote, 103) = '${dtmDataLote}'
			    </j:if>        
			    <j:if test="${lNumLoteLanc != null}">
			        AND (NumLoteLanc = ${lNumLoteLanc})
			    </j:if>
			    <j:if test="${iIdTipoHistoricoLanc != null}">
			        AND (IDTipoHistoricoLanc = ${iIdTipoHistoricoLanc})
			    </j:if>
			    <j:if test="${lNumMatricula != null}">
			        AND (NumMatricula = ${lNumMatricula})
			    </j:if>
			    <j:if test="${cValorLanc != null}">
			        AND (ValorLanc = ${cValorLanc})
			    </j:if>
			    <j:if test="${sDescNumDocumento != null}">
      				AND (DescNumDocumento = '${sDescNumDocumento}')
    			</j:if>
    			<j:if test="${iNumParcelamento != null}">
      				AND (RIGHT(descNumDocumento, 3) = RIGHT('000' + '${iNumParcelamento}' ,3))
   				</j:if>
		    ]]>
		</command>
	</query>
	<query name="ALTERA_CAPA_LOTE">
		<use-case name="Capa Lote"></use-case>
		<description>Altera a Capa de Lote</description>
		<command>
			<![CDATA[
				UPDATE br.com.sicoob.contacapital.comum.negocio.entidades.CapaLoteCapital SET
					dataLote = :dataLote,
					numLoteLanc = :numLoteLanc,
					qtdLancInf = :qtdLancInf,
					valorTotalLoteInf = :valorTotalLoteInf,
					 <j:if test="${!stAlteracaoCapaLote}">
						qtdLancApu = :qtdLancApu,
						valorTotalLoteApu = :valorTotalLoteApu,
					</j:if>
					bolAtualizado = :bolAtualizado,
					idProduto = :idProduto,
					idTipoHistoricoLanc = :idTipoHistoricoLanc,
					idTipoHistoricoEstorno = :idTipoHistoricoEstorno,
					idProdutoEst = :idProdutoEst
				WHERE dataLote = :dataLoteOld
					AND numLoteLanc = :numLoteLancOld
			]]>
		</command>
	</query>
	
	<query name="OBTER_MATRICULA_DISPONIVEL">
		<use-case name="Recupera uma matricula que não esta no banco de dados"></use-case>
		<description>Recupera a matricula não esta no banco de dados</description>
		<command>
			<![CDATA[
				select TOP 1 SEQ as matricula from (select NumMatricula, ROW_NUMBER() OVER (ORDER BY NumMatricula) AS SEQ
					from ContaCapital) AS TMP where NumMatricula != SEQ	
			]]>
		</command>
	</query>
	
	<query name="OBTER_MAX_DATAOCORRENCIA">
		<use-case name="Historico ContaCapital"></use-case>
		<description>Obtem a maior dataOcorrencia</description>
		<command>
			<![CDATA[		
				SELECT Data = MAX (DataOcorrencia) 
					FROM dbo.HistContaCapital
	           		WHERE NumMatricula = ${NUM_MATRICULA}  
			    <j:if test ="${COD_SITUACAO != null}">
			        AND CodSituacao = ${COD_SITUACAO}
			    </j:if>          
			]]>
		</command>
	</query>
	
	<query name="DELETAR_COM_CODSITUACAO">
		<use-case name="Historico ContaCapital"></use-case>
		<description>Obtem a maior dataOcorrencia</description>
		<command>
			<![CDATA[		
				DELETE FROM dbo.HistContaCapital  WHERE NumMatricula = ${NUM_MATRICULA} AND DataOcorrencia = '${DATA_OCORRENCIA}'
					<j:if test="${COD_SITUACAO != null}">
						AND CodSituacao = ${COD_SITUACAO}
					</j:if>
			]]>
		</command>
	</query>
	<query name="OBTER_ULTIMO">
		<use-case name="Historico ContaCapital"></use-case>
		<description>Obtem última DataOcorrencia antes da reativação</description>
		<command>
			<![CDATA[		
				SELECT MAX(DataOcorrencia) as Data, CodSituacao 
					FROM dbo.HistContaCapital (NOLOCK)  
					WHERE NumMatricula = ${numMatricula} 
					<j:if test ="${iCodSituacao != null}">
				        AND CodSituacao = ${iCodSituacao}
				    </j:if>
				    <j:if test ="${codSituacaoDiff != null}">
				        AND CodSituacao &lt;&gt; ${codSituacaoDiff}
				    </j:if>
				     GROUP BY CodSituacao
			]]>
		</command>
	</query>
	<query name="OBTER_PARCELAMENTOS_CANCELADOS">
		<use-case name="Obter Parcelamentos Cancelados"></use-case>
		<description>Obter as parcelas que foram canceladas no dia</description>
		<command>
			<![CDATA[	
				SELECT DISTINCT NumParcelamento FROM dbo.ParcelamentoCCA 
					WHERE NumMatricula = ${numMatricula}
						AND CodTipoParcelamento = ${codTipoParcelamento}
						AND CodSituacaoParcela = ${codParcelaCancelada}
				<j:if test="${dtmDataAtualProd != null}">
					AND CONVERT(DATETIME, DataSituacaoParcela, 103) = '${dtmDataAtualProd}'
				</j:if>
				ORDER BY NumParcelamento
			]]>
		</command>
	</query>
	<query name="OBTER_RESTRICAO_DE_ALTERACAO">
		<use-case name="Obtem as parcelas que foram canceladas"></use-case>
		<description>Obtem as parcelas que foram canceladas por outro evento (baixa de parcelas de integralização)</description>
		<command>
			<![CDATA[	
				SELECT Parcela = SUBSTRING(DescNumDocumento,6,3)
					From dbo.LancamentosCCapital
				        INNER JOIN dbo.Produto ON Produto.IDProduto = 2
				        AND LancamentosCCapital.DataLote = Produto.DataAtualProd
				    Where LancamentosCCapital.NumMatricula = ${numMatricula}
				        AND IDTipoHistoricoLanc = ${codHistoricoCcaBaixaSubscricao}
				        AND LEFT(DescNumDocumento,4) = '${numParcelamento}'
			]]>
		</command>
	</query>
	<query name="ATUALIZAR_ESTORNO_DESLIG">
		<use-case name="Atualizar estorno tratado"></use-case>
		<description>Atualizar estorno tratado</description>
		<command>
			<![CDATA[	
				UPDATE dbo.ParcelamentoCCA SET CodSituacaoParcela = ${codParcelaGerada}
				    WHERE NumMatricula = ${numMatricula} AND NumParcelamento = ${numParcelamento} 
						AND CodTipoParcelamento = ${codTipoParcelamentoIntegral} AND NumParcela != 0
						AND CodSituacaoParcela = ${codParcelaCancelada} AND DataSituacaoParcela = ${dtmDataSituacao}
						AND NumParcela NOT IN (${iParcela})
			]]>
		</command>
	</query>
	
	<query name="UPDATE_COOPERADO">
		<use-case name="Recuperar numero sequencial"></use-case>
		<description>Recupera numero sequencial da tabela LancamentoCCO</description>
		<command>
			<![CDATA[	
			
				<j:if test="${DATA_SAIDA == null}">
					UPDATE dbo.ContaCapital SET DataSaida = null, CodSituacao = ${COD_SITUACAO}, bolDebIndeterminado = ${DEB_INDETERMINADO} 
						 WHERE NumCliente = ${NUM_CLIENTE} AND NumMatricula = ${NUM_MATRICULA}			
				</j:if>
				<j:if test="${DATA_SAIDA != null}">
					UPDATE dbo.ContaCapital SET DataSaida =  CONVERT(DATETIME, '${DATA_SAIDA}'), CodSituacao = ${COD_SITUACAO}, bolDebIndeterminado = ${DEB_INDETERMINADO} 
						 WHERE NumCliente = ${NUM_CLIENTE} AND NumMatricula = ${NUM_MATRICULA}			
				</j:if>
			
		    ]]>
		</command>
	</query>
		
	<query name="VERIFICAR_CLIENTE_EXISTENTE">
		<use-case name="SQL para verificar se existe o cliente Indicado"></use-case>
		<description>SQL para verificar se existe o cliente Indicado</description>
		<command>
			<![CDATA[
				SELECT NumCliente FROM dbo.ContaCapital WHERE (NumCliente = '${numCliente}')
			]]>
		</command>
	</query>
	<query name="ESTORNAR_EVENTO">
		<use-case name="Estornar Evento"></use-case>
		<description>Estornar Evento</description>
		<command>
			<![CDATA[
				dbo.spu_CCA_EstornarEvento ${cl.numMatricula}, 
												${cl.idTipoHistoricoLanc}, 
												${cl.numLoteLanc}, 
												${cl.numSeqLanc}, 
												'${cl.descNumDocumento}', 
												${cl.valorLanc}, 
												'${cl.evento}'
			]]>
		</command>
	</query>	
	
	<query name="INSERT_HIST_CONTA_CAPITAL">
		<use-case name="Insert"></use-case>
		<description>Recupera numero sequencial da tabela LancamentoCCO</description>
		<command>
			<![CDATA[	
				INSERT INTO dbo.HistContaCapital 
                (NumMatricula, DataOcorrencia, CodSituacao, BolAtualizado) 
                VALUES (${NumMatricula},${DataOcorrencia},${CodSituacao},${BolAtualizado})
		    ]]>
		</command>
	</query>
	
	<query name="UPDATE_HIST_CONTA_CAPITAL">
		<use-case name="Update"></use-case>
		<description>Recupera numero sequencial da tabela LancamentoCCO</description>
		<command>
			<![CDATA[	
				 UPDATE dbo.HistContaCapital 
                SET BolAtualizado = ${BolAtualizado} 
                WHERE NumMatricula = ${NumMatricula} AND DataOcorrencia = ${DataOcorrencia}
		    ]]>
		</command>
	</query>
	
	<query name="PESQUISA_DATA_BAIXA_SUB">
		<use-case name="Conta Capital"></use-case>
		<description>Conta Capital</description>
		<command>
			<![CDATA[
				SELECT l.dataLote
				FROM br.com.sicoob.contacapital.comum.negocio.entidades.LancamentosCCapital l
				WHERE
					l.numMatricula = :numMatricula
					AND (l.descNumDocumento = :descDeligado
						OR l.descNumDocumento = :descAtivo)
			]]>
		</command>
	</query>
	
	<query name="ATUALIZA_SITUACAO_PARCELAMENTO">
		<use-case name="Conta Capital"></use-case>
		<description>Conta Capital</description>
		<command>
			<![CDATA[
				UPDATE br.com.sicoob.contacapital.comum.negocio.entidades.ParcelamentoCCA
				SET
					codSituacaoParcela = ${codSituacaoParcela}
					<j:if test="${dataSituacaoParcela != null}">
						,dataSituacaoParcela = '<bancoob:valorOql valor="${dataSituacaoParcela}" tipo="Date"/>'
					</j:if>
				WHERE id.contaCapital.id = ${id.contaCapital.id}
				<j:if test="${id.numParcelamento != null}">
					AND id.numParcelamento = ${id.numParcelamento}
				</j:if>
				<j:if test="${id.numParcela != null}">
					AND id.numParcela = ${id.numParcela}
				</j:if>
				<j:if test="${id.codTipoParcelamento != null}">
					AND id.codTipoParcelamento = ${id.codTipoParcelamento}
				</j:if>
			]]>
		</command>
	</query>
	
	<query name="DADOS_RELATORIO_FRM_PARCELAMENTO_CCA">
		<use-case name="Conta Capital - Reativar Cooperado"></use-case>
		<description></description>
		<command>
			<![CDATA[
				Select 
					CONVERT(VarChar(8), a.NumMatricula) as Matricula, 
					a.NumMatricula, 
					c.DescNomePessoa, 
					NumCGC_CPF = CASE c.CodPF_PJ  
						WHEN 0 THEN  
							SUBSTRING(c.NumCGC_CPF,1,3) + '.' + SUBSTRING(c.NumCGC_CPF,4,3) + '.' + SUBSTRING(c.NumCGC_CPF,7,3) + '-' + SUBSTRING(c.NumCGC_CPF,10,2) 
						WHEN 1 THEN 
							SUBSTRING(c.NumCGC_CPF,1,2) + '.' + SUBSTRING(c.NumCGC_CPF,3,3) + '.' + SUBSTRING(c.NumCGC_CPF,6,3) + '/' + SUBSTRING(c.NumCGC_CPF,9,4) + '-' + SUBSTRING(c.NumCGC_CPF,13,2) 
					END, 
					a.NumParcelamento, 
					Right('0000' + LTrim(Str(a.NumParcelamento)),4) as Parcelamento, 
					a.NumParcela, 
					Right('000' + LTrim(Str(a.NumParcela)),3) as Parcela, 
					a.DataVencParcela, 
					a.CodSituacaoParcela, 
					a.ValorParcela, 
					a.CodModoLanc, 
					a.CodTipoParcelamento, 
					TipoParcelamento = Case a.CodTipoParcelamento 
						WHEN ${COD_TIPO_PARCELAMENTO_INTEGRAL} THEN 
							'1 - INTEGRALIZAÇÃO' 
						WHEN ${COD_TIPO_PARCELAMENTO_DEVOLUCAO} THEN 
							'2 - DEVOLUÇÃO' 
					END, 
					dbo.fn_FormataContaCorrente(a.NumContaCorrente) AS CCMascarada
				FROM 
					ParcelamentoCCA a 
				INNER JOIN 
					ContaCapital b ON a.NumMatricula = b.NumMatricula 
				INNER JOIN 
					Pessoa c ON b.NumCliente = c.NumPessoa 
				INNER JOIN 
					Cliente d ON b.NumCliente = d.NumCliente 
				WHERE 
					a.NumMatricula Between ${vo.numMatriculaInicial} AND 
					${vo.numMatriculaFinal} AND 
					a.CodModoLanc = ${COD_MODO_LANCAMENTO_VIA_CAIXA} AND 
					<j:if test="${COD_PARCELA_GERADA != null}">
						a.CodSituacaoParcela = ${COD_PARCELA_GERADA} AND 
					</j:if>
					a.CodSituacaoParcela not in (4,6) AND 	
					a.DataVencParcela Between '${vo.dtInicialFmt}' AND '${vo.dtFinalFmt}' 					
					<j:if test="${vo.tpParcelamento == 1 or vo.tpParcelamento == 2}">
						 AND a.CodTipoParcelamento = ${vo.tpParcelamento} 
					</j:if>					
					<j:if test="${vo.numPac != null}">
						<j:if test="${vo.numPac > 0}">
							 And d.NumPac = ${vo.numPac}
						</j:if>	
					</j:if>				
					<j:if test="${vo.numParcela != null and vo.numParcela >= 0}">
						And	a.NumParcela = ${vo.numParcela}
					</j:if>					
				ORDER BY 
					a.NumMatricula
			]]>
		</command>
	</query>
	<query name="DADOS_RELATORIO_RECIBO_DEBITO_CCO">
		<use-case name="Conta Capital"></use-case>
		<description></description>
		<command>
			<![CDATA[
				SELECT 
							
							ParcelamentoCCA.NumMatricula, 
							Pessoa.DescNomePessoa,  
							ContaCapital.DataMatricula,  
							NumPessoa = CASE LEN(convert(char(10),Pessoa.Numpessoa)) 
								WHEN 0 THEN 
									RTRIM(convert(char(10),Pessoa.NumPessoa))
								ELSE 
									RTRIM(left(convert(char(10),Pessoa.NumPessoa), LEN(RTRIM(convert(char(10),pessoa.NumPessoa)))-1) + '-' + RIGHT(RTRIM(convert(char(10),Pessoa.numPessoa)),1))
							END,
							dbo.fn_FormataContaCorrente(ParcelamentoCCA.NumContaCorrente) AS NumConta,
							NumCGC_CPF = CASE CodPF_PJ
								WHEN 0 THEN
									SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2)
								WHEN 1 THEN 
									SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2)
								END, 
								ParcelamentoCCA.NumParcelamento, 
								ParcelamentoCCA.NumParcela, 
								ParcelamentoCCA.DataVencParcela, 
								ParcelamentoCCA.ValorParcela, 
								ParcelamentoCCA.CodSituacaoParcela
							FROM 
								dbo.ParcelamentoCCA 
							INNER JOIN 
								dbo.ContaCapital ON ContaCapital.NumMatricula = ParcelamentoCCA.NumMatricula 
							INNER JOIN 
								dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa 
							INNER JOIN 
								dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente 
							WHERE 
								ParcelamentoCCA.CodModoLanc = ${COD_MODO_LANCAMENTO_VIA_CONTA} 
								AND 
								ParcelamentoCCA.CodTipoParcelamento = ${COD_TIPO_PARCELAMENTO_INTEGRAL}
								AND
								ContaCapital.NumMatricula  = ${numMatricula} 
								AND 
								ParcelamentoCCA.NumParcelamento = ${numParcelamento} 
							<j:if test="${stApenasParcAberto}">
								AND ParcelamentoCCA.CodSituacaoParcela = ${COD_PARCELA_GERADA}
							</j:if>
					ORDER BY 
						NumParcela
			]]>
		</command>
	</query>
	
	<query name="DADOS_RELATORIO_RECIBO_DEBITO_CCO_REATIVACAO">
		<use-case name="Conta Capital"></use-case>
		<description></description>
		<command>
			<![CDATA[
				SELECT 
					Aux,
					NumMatricula, 
					DescNomePessoa, 
					DataMatricula, 
					NumPessoa, 
					NumConta, 
					NumCGC_CPF, 
					NumParcelamento, 
					NumParcela, 
					DataVencParcela, 
					ValorParcela, 
					CodSituacaoParcela,  
					NumParcela1, 
					DataVencParcela1, 
					ValorParcela1, 
					NumConta1 
				FROM 
					(  
						(SELECT 
							Aux = 1, 
							ParcelamentoCCA.NumMatricula, 
							Pessoa.DescNomePessoa,  
							ContaCapital.DataMatricula,  
							NumPessoa = CASE LEN(convert(char(10),Pessoa.Numpessoa)) 
								WHEN 0 THEN 
									RTRIM(convert(char(10),Pessoa.NumPessoa))
								ELSE 
									RTRIM(left(convert(char(10),Pessoa.NumPessoa), LEN(RTRIM(convert(char(10),pessoa.NumPessoa)))-1) + '-' + RIGHT(RTRIM(convert(char(10),Pessoa.numPessoa)),1))
							END,
							dbo.fn_FormataContaCorrente(ParcelamentoCCA.NumContaCorrente) AS NumConta,
							NumCGC_CPF = CASE CodPF_PJ
								WHEN 0 THEN
									SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2)
								WHEN 1 THEN 
									SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2)
								END, 
								ParcelamentoCCA.NumParcelamento, 
								ParcelamentoCCA.NumParcela, 
								ParcelamentoCCA.DataVencParcela, 
								ParcelamentoCCA.ValorParcela, 
								ParcelamentoCCA.CodSituacaoParcela, 
								NumParcela1 = ParcelamentoCCA.NumParcela, 
								DataVencParcela1 = ParcelamentoCCA.DataVencParcela, 
								ValorParcela1 = ParcelamentoCCA.ValorParcela, 
								dbo.fn_FormataContaCorrente(ParcelamentoCCA.NumContaCorrente) AS NumConta1 
							FROM 
								dbo.ParcelamentoCCA 
							INNER JOIN 
								dbo.ContaCapital ON ContaCapital.NumMatricula = ParcelamentoCCA.NumMatricula 
							INNER JOIN 
								dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa 
							INNER JOIN 
								dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente 
							WHERE 
								CodModoLanc = ${COD_MODO_LANCAMENTO_VIA_CONTA} AND 
								CodTipoParcelamento = ${COD_TIPO_PARCELAMENTO_INTEGRAL}
						) UNION ALL (
							SELECT 
								Aux = 2, 
								ParcelamentoCCA.NumMatricula, 
								Pessoa.DescNomePessoa, 
								ContaCapital.DataMatricula, 
								NumPessoa = CASE LEN(convert(char(10),Pessoa.Numpessoa)) 
									WHEN 0 THEN 
										RTRIM(convert(char(10),Pessoa.NumPessoa)) 
									ELSE 
										RTRIM(left(convert(char(10),Pessoa.NumPessoa), LEN(RTRIM(convert(char(10),pessoa.NumPessoa)))-1) + '-' + RIGHT(RTRIM(convert(char(10),Pessoa.numPessoa)),1)) 
								END, 
								dbo.fn_FormataContaCorrente(ParcelamentoCCA.NumContaCorrente) AS NumConta,
								NumCGC_CPF = CASE CodPF_PJ 
									WHEN 0 THEN 
										SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2) 
									WHEN 1 THEN 
										SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) 
								END, 
								ParcelamentoCCA.NumParcelamento, 
								ParcelamentoCCA.NumParcela, 
								ParcelamentoCCA.DataVencParcela, 
								ParcelamentoCCA.ValorParcela, 
								ParcelamentoCCA.CodSituacaoParcela, 
								NumParcela1 = ParcelamentoCCA.NumParcela, 
								DataVencParcela1 = ParcelamentoCCA.DataVencParcela, 
								ValorParcela1 = ParcelamentoCCA.ValorParcela, 
								dbo.fn_FormataContaCorrente(ParcelamentoCCA.NumContaCorrente) AS NumConta1
							FROM 
								dbo.ParcelamentoCCA 
							INNER JOIN 
								dbo.ContaCapital ON ContaCapital.NumMatricula = ParcelamentoCCA.NumMatricula 
							INNER JOIN 
								dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa 
							INNER JOIN 
								dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente 
							WHERE 
								CodModoLanc = ${COD_MODO_LANCAMENTO_VIA_CONTA} AND 
								CodTipoParcelamento = ${COD_TIPO_PARCELAMENTO_INTEGRAL}
						)
					) AS A 
				WHERE 
					NumMatricula = ${numMatricula} 
					AND NumParcelamento = ${numParcelamento} 
					<j:if test="${stApenasParcAberto}">
						AND CodSituacaoParcela = ${COD_PARCELA_GERADA}
					</j:if>
				ORDER BY 
					Aux, 
					NumMatricula, 
					NumParcela
			]]>
		</command>
	</query>	
	
	<query name="OBTER_HIST_CONTA_CAPITAL">
		<use-case name="Historico ContaCapital"></use-case>
		<description>Obter data de matrícula e saída do cooperado da conta capital.</description>
		<command>
			<![CDATA[		
				SELECT NumMatricula, DataOcorrencia, CodSituacao, BolAtualizado 
            		FROM dbo.HistContaCapital WHERE NumMatricula = ${numMatricula}
            		AND DataOcorrencia = (SELECT MAX (DataOcorrencia) AS Data 
            	FROM dbo.HistContaCapital WHERE NumMatricula = ${numMatricula})
				
			]]>
		</command>
	</query>
	
	<query name="TIPOPROC_LANC_ARQUIVO_CCA">
		<use-case name="Tipo Procura Arquivo CCA"></use-case>
		<description>Obter arquivos conta capital.</description>
		<command>
			<![CDATA[		
				select Num = (CONVERT(SMALLINT, LEFT(L.DescNumDocumento,3))), L.NumSeqLanc, 
					L.DescNumDocumento, L.ValorLanc, L.NumMatricula, p.DescNomePessoa, 
					l.IDTipoHistoricoLanc, l.DataHoraInclusao, T.DescHistorico 
				from dbo.LancamentosCCapital L (NOLOCK) 
					INNER JOIN dbo.ContaCapital C (NOLOCK) ON L.NumMatricula = C.NumMatricula 
					INNER JOIN dbo.Pessoa P (NOLOCK) ON C.NumCliente = P.NumPessoa 
					INNER JOIN dbo.TipoHistorico T (NOLOCK) ON L.IDTipoHistoricoLanc = T.IDTipoHistorico And L.IDProduto = T.IDProduto 
					INNER JOIN dbo.Produto Prod (nolock) on Prod.Idproduto = ${produtoContaCapital} 
				where L.numlotelanc = ${codLoteCcaArquivo} 
					AND L.datalote = Prod.dataatualprod 
					AND LEN(DescNumDocumento) = 10 
					AND ISNUMERIC(LEFT(DescNumDocumento,3)) = 1 
					AND dbo.fn_SomenteNumeros(LEFT(DescNumDocumento,3)) = LEFT(DescNumDocumento,3)				
			]]>
		</command>
	</query>
	
	<query name="TIPOPROC_ARQUIVO_IMP_CCA">
		<use-case name="Tipo Procura Arquivo importação CCA"></use-case>
		<description>Obter arquivos de importação conta capital.</description>
		<command>
			<![CDATA[		
				select Num = (CONVERT(SMALLINT, LEFT(DescNumDocumento,3))), Data = min(datahorainclusao), 
					Hora = min(datahorainclusao), Qtd = count (nummatricula), Valor = SUM(VALORLANC), 
					IdHist = MIN(IdtipoHistoricoLanc), Hist = CASE MIN(IdtipoHistoricoLanc) 
																WHEN ${codHistoricoCcaIntegConta} THEN 'Via Conta Corrente' 
																WHEN ${codHistoricoCcaIntegReserva} THEN 'Via Reserva' 
																WHEN ${codHistoricoCcaIntegBanco} THEN 'Via Banco' 
																WHEN ${codHistoricoCcaIntegFolha} THEN 'Via Folha' 
																END 
				From dbo.LancamentosCCapital (nolock) 
					Inner join dbo.Produto (nolock) on Produto.Idproduto = ${produtoContaCapital} 
				where numlotelanc = ${codLoteCcaArquivo} 
					AND datalote = dataatualprod 
					AND IdtipoHistoricoLanc &lt;&gt; ${codHistoricoCcaSubscricao} 
					AND LEN(DescNumDocumento) = 10 
					AND ISNUMERIC(LEFT(DescNumDocumento,3)) = 1 
					AND dbo.fn_SomenteNumeros(LEFT(DescNumDocumento,3)) = LEFT(DescNumDocumento,3) 
				group by (CONVERT(SMALLINT, LEFT(DescNumDocumento,3)))
			]]>
		</command>
	</query>
	<query name="OBTER_VALOR_BASE_CLIENTE">
		<use-case name="Reativar Cooperado"></use-case>
		<description>Obter valor base do saldo do cooperado da conta capital.</description>
		<command>
			<![CDATA[		
				SELECT sum(ISNULL(${VALOR_BASE}, 0)) As Saldo
        		FROM dbo.ContaCapital
        		WHERE dbo.ContaCapital.NumCliente = ${NUM_CLIENTE}
			]]>
		</command>
	</query>

	<query name="OBTER_SALDO_CONTA_CAPITAL_CLIENTE">
		<use-case name="Reativar Cooperado"></use-case>
		<description>Obter saldo do cooperado da conta capital.</description>
		<command>
			<![CDATA[		
				SELECT ISNULL(SUM(dbo.VIW_CTA_SaldoContaCapital.ValorLanc),0) As Saldo
            	FROM dbo.VIW_CTA_SaldoContaCapital
            	INNER JOIN dbo.ContaCapital ON
            		dbo.ContaCapital.NumMatricula = dbo.VIW_CTA_SaldoContaCapital.NumMatricula
            	WHERE dbo.ContaCapital.NumCliente = ${NUM_CLIENTE}
            	AND dbo.VIW_CTA_SaldoContaCapital.CodGrupoHist = ${GRUPO_HIST}
            	
				<j:if test="${DATA_BASE == null}">
					AND dbo.VIW_CTA_SaldoContaCapital.BolAtualizado = 0 
				</j:if>
				<j:if test="${DATA_BASE != null}">
					AND dbo.VIW_CTA_SaldoContaCapital.DataLote &gt; dbo.ContaCapital.DataSaldoAnterior 
					AND dbo.VIW_CTA_SaldoContaCapital.DataLote &lt;= '${DATA_ATUAL_MOV}' 
					AND dbo.VIW_CTA_SaldoContaCapital.BolAtualizado = 1
				</j:if>

            	GROUP BY dbo.ContaCapital.NumCliente			
            ]]>
		</command>
	</query>
	
	<query name="PESQUISA_EXTRATO_LANCAMENTO_CCA_ENTRE_DATAS">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa dados de extrato CCA</description>
		<command>
			<![CDATA[
				Select 
					ContaCapital.DataMatricula, Saldo = Pessoa.DescNomePessoa, 
					sValorCredito = Pessoa.DescNomePessoa, sValorDebito = Pessoa.DescNomePessoa ,
					ValorAtuSubsc = Case IsNull(ContaCapital.ValorSaldoAntSubsc, 0) 
						When 0 Then 0 Else ContaCapital.ValorSaldoAntSubsc End 
							+ Case Isnull((SELECT ValorLanc=Sum(V.ValorLanc)FROM dbo.Viw_CCA_Extrato as V 
						Where V.NumMatricula = ContaCapital.NumMatricula AND V.Data &lt; ContaCapital.DataSaldoAnterior AND 
						V.Data &gt; '${dataInicial}' AND V.CodGrupoHist = ${COD_GRUPO_HIST_SUBSCRICAO} group by V.NumMatricula), 0) When 0 Then 0 
						Else (SELECT ValorLanc=Sum(V.ValorLanc) FROM dbo.Viw_CCA_Extrato as V Where V.NumMatricula = ContaCapital.NumMatricula AND 
						V.Data &lt; ContaCapital.DataSaldoAnterior AND V.Data &gt; '${dataInicial}' AND V.CodGrupoHist = ${COD_GRUPO_HIST_SUBSCRICAO} 
						group by V.NumMatricula) End,
					ValorAtuInteg=Case IsNull(ContaCapital.ValorSaldoAntInteg, 0) 
						When 0 Then 0 Else ContaCapital.ValorSaldoAntInteg End 
							+ Case Isnull((SELECT ValorLanc=Sum(V.ValorLanc) FROM dbo.Viw_CCA_Extrato as V Where V.NumMatricula = ContaCapital.NumMatricula AND 
						V.Data &lt; ContaCapital.DataSaldoAnterior AND V.Data &gt; '${dataInicial}' AND V.CodGrupoHist = ${COD_GRUPO_HIST_INTEGRALIZACAO} group by V.NumMatricula), 0) 
						When 0 Then 0 Else (SELECT ValorLanc=Sum(V.ValorLanc) FROM dbo.Viw_CCA_Extrato as V Where V.NumMatricula = ContaCapital.NumMatricula AND 
						V.Data &lt; ContaCapital.DataSaldoAnterior AND V.Data &gt; '${dataInicial}' AND V.CodGrupoHist = ${COD_GRUPO_HIST_INTEGRALIZACAO} 
						group by V.NumMatricula) End,
					ValorAtuDevolver=Case IsNull(ContaCapital.ValorSaldoAntDevolver, 0) 
						When 0 Then 0 Else ContaCapital.ValorSaldoAntDevolver End 
							+ Case Isnull((SELECT ValorLanc=Sum(V.ValorLanc) FROM dbo.Viw_CCA_Extrato as V 
						Where V.NumMatricula = ContaCapital.NumMatricula AND V.Data &lt; ContaCapital.DataSaldoAnterior AND 
						V.Data &gt; '${dataInicial}' AND V.CodGrupoHist = ${COD_GRUPO_HIST_DEVOLUCAO} group by V.NumMatricula), 0) When 0 Then 0 
						Else (SELECT ValorLanc=Sum(V.ValorLanc) FROM dbo.Viw_CCA_Extrato as V Where V.NumMatricula = ContaCapital.NumMatricula AND 
						V.Data &lt; ContaCapital.DataSaldoAnterior AND V.Data &gt; '${dataInicial}' AND V.CodGrupoHist =  ${COD_GRUPO_HIST_DEVOLUCAO}
						group by V.NumMatricula) End,
					ValorAtuDivs = Case IsNull(ContaCapital.ValorSaldoAntDevolver, 0) 
										When 0 Then 0 
										Else ContaCapital.ValorSaldoAntDevolver End +
									Case Isnull((SELECT ValorLanc=Sum(V.ValorLanc)
												FROM dbo.Viw_CCA_Extrato V 
												Where V.NumMatricula = ContaCapital.NumMatricula AND
														V.Data &lt; ContaCapital.DataSaldoAnterior AND 
																		  V.Data &gt; '${dataInicial}' AND
														V.CodGrupoHist = ${COD_GRUPO_HIST_DEVOLUCAO}
												group by V.NumMatricula), 0)
										When 0 Then 0 
										Else (SELECT ValorLanc=Sum(V.ValorLanc)
												FROM dbo.Viw_CCA_Extrato as V
												Where V.NumMatricula = ContaCapital.NumMatricula AND 
														V.Data &lt; ContaCapital.DataSaldoAnterior AND
														V.Data &gt; '${dataInicial}' AND
														V.CodGrupoHist = ${COD_GRUPO_HIST_DEVOLUCAO}
												group by V.NumMatricula) End,
					viw_cca_extrato.Data, viw_cca_extrato.CodGrupoHist,  
					viw_cca_extrato.DescNumDocumento, DescNomeHistorico = Pessoa.DescNomePessoa ,
					viw_cca_extrato.Historico, viw_cca_extrato.ValorLanc, 
					ValorDebito, ValorCredito , Viw_CCA_Extrato.DataHoraInclusao, Viw_CCA_Extrato.NumSeqLanc
				From dbo.ContaCapital 
				Inner join dbo.Viw_CCA_Extrato on ContaCapital.NumMatricula = Viw_CCA_Extrato.NumMatricula 
				INNER JOIN dbo.pessoa on ContaCapital.NumCliente = Pessoa.NumPessoa 
				Where Viw_CCA_Extrato.Data BETWEEN '${dataInicial}' AND '${dataFinal}' 
					AND Viw_CCA_Extrato.NumMatricula = ${numMatricula}
					AND Viw_CCA_Extrato.CodGrupoHist = ${COD_GRUPO_HIST}
				ORDER BY Viw_CCA_Extrato.CodGrupoHist, Viw_CCA_Extrato.Data , 
					Viw_CCA_Extrato.DataHoraInclusao, Viw_CCA_Extrato.NumSeqLanc
			]]>
		</command>
	</query>
	<query name="PESQUISA_SALDO_ANTERIOR_DATA">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa dados do saldo anterior</description>
		<command>
			<![CDATA[
				SELECT
					cc.NumMatricula, cc.DataMatricula,	
    				ValorAtuSubsc = ISNULL(grupo.valorGrupo1,0),
    				ValorAtuInteg = ISNULL(grupo.valorGrupo2,0),
    				ValorAtuDevolver= ISNULL(grupo.valorGrupo3,0),
    				ValorAtuDivs = ISNULL(grupo.ValorGrupo4, 0)					
				From dbo.ContaCapital cc 
				left join (
						select cci.NumMatricula, 
				                  sum (case when CodGrupoHist = 1 then ValorLanc else 0 end) as  ValorGrupo1, 
				                  sum (case when CodGrupoHist = 2 then ValorLanc else 0 end) as  ValorGrupo2, 
				                  sum (case when CodGrupoHist = 3 then ValorLanc else 0 end) as  ValorGrupo3, 
				                  sum (case when CodGrupoHist = 4 then ValorLanc else 0 end) as  ValorGrupo4 
						From dbo.ContaCapital cci 
				          inner join dbo.Viw_CCA_Extrato V on 
				        v.NumMatricula = Cci.NumMatricula and 
				        V.Data &lt; '${data}'
				        <j:if test="${numMatriculaFinal != null}">
							Where Cci.NumMatricula BETWEEN ${numMatricula} AND ${numMatriculaFinal}
						</j:if>
						<j:if test="${numMatriculaFinal == null}">
							Where Cci.NumMatricula = ${numMatricula}
						</j:if>
				        group by cci.Nummatricula 
					) as grupo on grupo.NumMatricula = Cc.NumMatricula 
				<j:if test="${numMatriculaFinal != null}">
					Where Cc.NumMatricula BETWEEN ${numMatricula} AND ${numMatriculaFinal}
				</j:if>
				<j:if test="${numMatriculaFinal == null}">
					Where Cc.NumMatricula = ${numMatricula}				
				</j:if>
			]]>
		</command>
	</query>
	<query name="PESQUISA_TIPOPROC_PARCELAMENTO_CCA">
		<use-case name="Parcelamento"></use-case>
		<description>Pequisa procura Parcelamento</description>
		<command>
			<![CDATA[
				SELECT 
							TipoParcelamento = CASE CodTipoParcelamento 
								WHEN ${COD_TIPO_PARCELAMENTO_INTEGRAL} THEN 'Integralização' 
								WHEN ${COD_TIPO_PARCELAMENTO_DEVOLUCAO} THEN 'Devolução' END , 
							NumParcelamento ,
							NumParcela AS Parcela, 
							ValorParcela AS Valor, 
							dbo.fn_FormataContaCorrente(NumContaCorrente) AS Conta,
							Situacao = CASE CodSituacaoParcela 
									   WHEN ${COD_PARCELA_GERADA} THEN 'Em Aberto' 
									   WHEN ${COD_PARCELA_PAGA_VIA_CAIXA} THEN 'Paga Via Caixa' 
									   WHEN ${COD_PARCELA_PAGA_VIA_CONTA} THEN 'Paga Via Conta' 
									   WHEN ${COD_PARCELA_CANCELADA} THEN 'Cancelada' 
									   WHEN ${COD_PARCELA_PAGA_VIA_CHADMIN} THEN 'Paga Via Banco/Chq. Adm.'
									   WHEN ${COD_PARCELA_EXCLUIDA} THEN 'Excluída' 
									   WHEN ${COD_PARCELA_PAGA_VIA_FOLHA} THEN 'Paga Via Folha' 
									   WHEN ${COD_PARCELA_PAGA_ANTES_MIGRACAO} THEN 'Paga Antes da Migração' 
									   WHEN ${COD_PARCELA_PAGA_VIA_COBRANCA} THEN 'Paga Via Cobrança' 
									   WHEN ${COD_PARCELA_PAGA_VIA_RATEIO} THEN 'Paga Via Rateio' 
									   WHEN ${COD_PARCELA_PAGA_VIA_RESERVA} THEN 'Paga Via Reserva' 
									   ELSE 'Situação INVÁLIDA' END,
							DataVencParcela,
							FormaPagamento = CASE CodModoLanc 
										WHEN ${COD_MODO_LANCAMENTO_VIA_CAIXA} THEN 'Via Caixa' 
										WHEN ${COD_MODO_LANCAMENTO_VIA_CONTA} THEN 'Via Conta Corrente: ' 
													+ dbo.fn_FormataContaCorrente(NumContaCorrente)
										WHEN ${COD_MODO_LANCAMENTO_VIA_FOLHA} THEN 'Via Folha'  + 
													CASE WHEN ParcelamentoCCA.UIDTrabalha IS NULL THEN '' 
													Else ': ' + DescMatriculaFunc 
													END 
										WHEN ${COD_MODO_LANCAMENTO_VIA_COBRANCA} THEN 'Via Cobrança' 
										WHEN ${COD_MODO_LANCAMENTO_VIA_MIGRACAO} THEN 'Via Migração' 
										WHEN ${COD_MODO_LANCAMENTO_VIA_BANCO_CHADMIN} THEN 'Via Banco/Chq. Adm.' 
										WHEN ${COD_MODO_LANCAMENTO_VIA_RATEIO} THEN 'Via Rateio' 
										WHEN ${COD_MODO_LANCAMENTO_VIA_RESERVA} THEN 'Via Reserva' 
										END, 
							DataSituacaoParcela, 
							NumMatricula, 
							CodSituacaoParcela, 
							NumContaCorrente 
				From dbo.ParcelamentoCCA 
				left join dbo.Trabalha on Trabalha.UIDTrabalha = ParcelamentoCCA.UIDTrabalha 
				<j:if test="${proxy != null}">
					Where 1=1 
					<j:if test="${proxy.numMatricula != null}">
						And NumMatricula = ${proxy.numMatricula}
					</j:if>
					<j:if test="${proxy.codSituacaoParcela != null}">
						And CodSituacaoParcela = ${proxy.codSituacaoParcela}
					</j:if>
				</j:if>
				ORDER BY CodTipoParcelamento, NumParcelamento, NumParcela 
			]]>
		</command>
	</query>
	<query name="PESQUISA_TIPOPROC_PROVISAO_JUROS_CCA">
		<use-case name="Consulta de Provisão de Juros"></use-case>
		<description>Consulta de Provisão de Juros</description>
		<command>
			<![CDATA[
				Select 
					J.NumMatricula, 
					P.DescNomePessoa, 
					J.DataInicial, 
					J.DataFinalProv, 
					J.ValorSaldoPeriodo, 
					J.ValorProvisao, 
					J.BolExterno, 
					J.BolDestinado 
				From dbo.ProvisaoJurosCCapital J 
				INNER JOIN dbo.ContaCapital C 
					ON J.NumMatricula = C.NumMatricula 
				INNER JOIN dbo.Pessoa P 
					ON C.NumCliente = P.NumPessoa 
				<j:if test="${criterios.filtro != null}">
				Where 0 = 0 
					<j:if test="${criterios.filtro.mes != null and criterios.filtro.mes > 0}">
						And month(DataFinalProv) = ${criterios.filtro.mes}
					</j:if>
					<j:if test="${criterios.filtro.ano != null and criterios.filtro.ano > 0}">
						And year(DataFinalProv) = ${criterios.filtro.ano}
					</j:if>
					<j:if test="${criterios.filtro.numMatricula != null and criterios.filtro.numMatricula > 0}">
						And J.NumMatricula = ${criterios.filtro.numMatricula}
					</j:if>
					<j:if test="${criterios.filtro.idOrigem != null and criterios.filtro.idOrigem &gt;= 0 and criterios.filtro.idOrigem &lt; 2}">
						And J.bolExterno = ${criterios.filtro.idOrigem}
					</j:if>
					<j:if test="${criterios.filtro.idSituacao != null and criterios.filtro.idSituacao &gt;= 0 and criterios.filtro.idSituacao &lt; 2}">
						And J.bolDestinado = ${criterios.filtro.idSituacao}
					</j:if>
				</j:if>
			]]>
		</command>
	</query>
	<query name="CONTAR_PESQUISA_TIPOPROC_PROVISAO_JUROS_CCA">
		<use-case name="Consulta de Provisão de Juros"></use-case>
		<description>Consulta de Provisão de Juros</description>
		<command>
			<![CDATA[
				Select 
					count(*) as qtd
				From dbo.ProvisaoJurosCCapital J 
				INNER JOIN dbo.ContaCapital C 
					ON J.NumMatricula = C.NumMatricula 
				INNER JOIN dbo.Pessoa P 
					ON C.NumCliente = P.NumPessoa 
				<j:if test="${criterios.filtro != null}">
				Where 0 = 0 
					<j:if test="${criterios.filtro.mes != null and criterios.filtro.mes > 0}">
						And month(DataFinalProv) = ${criterios.filtro.mes}
					</j:if>
					<j:if test="${criterios.filtro.ano != null and criterios.filtro.ano > 0}">
						And year(DataFinalProv) = ${criterios.filtro.ano}
					</j:if>
					<j:if test="${criterios.filtro.numMatricula != null and criterios.filtro.numMatricula > 0}">
						And J.NumMatricula = ${criterios.filtro.numMatricula}
					</j:if>
					<j:if test="${criterios.filtro.idOrigem != null and criterios.filtro.idOrigem &gt;= 0 and criterios.filtro.idOrigem &lt; 2}">
						And J.bolExterno = ${criterios.filtro.idOrigem}
					</j:if>
					<j:if test="${criterios.filtro.idSituacao != null and criterios.filtro.idSituacao &gt;= 0 and criterios.filtro.idSituacao &lt; 2}">
						And J.bolDestinado = ${criterios.filtro.idSituacao}
					</j:if>
				</j:if>
			]]>
		</command>
	</query>

	<query name="RECIBO_TRANSFERENCIA">
		<use-case name="Conta Capital"></use-case>
		<description>Obtem dados recibo transferencia</description>
		<command>
			<![CDATA[		
			SELECT
				*
				FROM
				(
				   SELECT
				   LANC.DataLote,
				   LANC.NumSeqLanc,
				   LANC.ValorLanc,
				   MatriculaDeb = LANC.NumMatricula,
				   NomeDeb = Pessoa.DescNomePessoa,
				   DataMatDeb = ContaCapital.DataMatricula,
				   NumPessoaDeb = CASE LEN(convert(char(10),Pessoa.Numpessoa)) WHEN 0 THEN RTRIM(convert(char(10),Pessoa.NumPessoa)) ELSE RTRIM(left(convert(char(10),Pessoa.NumPessoa), LEN(RTRIM(convert(char(10),pessoa.NumPessoa)))-1) + '-' + RIGHT(RTRIM(convert(char(10),Pessoa.numPessoa)),1)) END,
				   CcoDeb = CASE WHEN
				   (
				      ContaCapital.NumContaCorrente = 0
				   )
				   or
				   (
				      ContaCapital.NumContaCorrente = Null
				   )
				   THEN Null WHEN LEN(LTRIM(STR(ContaCapital.NumContaCorrente))) &gt; 0
				   AND LEN
				   (
				      LTRIM(STR(ContaCapital.NumContaCorrente))
				   )
				   &lt; 5 THEN SUBSTRING
				   (
				      STR(ContaCapital.NumContaCorrente), 7, 3
				   )
				   + '-' + SUBSTRING
				   (
				      STR(ContaCapital.NumContaCorrente), 10, 1
				   )
				   WHEN LEN(LTRIM(STR(ContaCapital.NumContaCorrente))) &gt; 4
				   AND LEN(LTRIM(STR(ContaCapital.NumContaCorrente))) &lt; 8 THEN SUBSTRING(STR(ContaCapital.NumContaCorrente), 4, 3) + '.' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 10, 1) ELSE SUBSTRING(STR(ContaCapital.NumContaCorrente), 1, 3) + '.' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 4, 3) + '.' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 10, 1) END,
				   NumCGC_CPFDeb = CASE CodPF_PJ WHEN 0 THEN SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2) WHEN 1 THEN SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END,
				   MatriculaCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc ), -1) WHEN -1 THEN CONVERT(INT, NULL) Else LANC.DescNumDocumento END,
				   NomeCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc), -1) WHEN -1 THEN CONVERT(VARCHAR(50),'(Associado Excluído)') ELSE (SELECT TOP 1 Pessoa.DescNomePessoa FROM dbo.ContaCapital INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa WHERE NumMatricula = LANC.DescNumDocumento) END,
				   DataMatCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc ), -1) WHEN -1 THEN CONVERT(DATETIME, NULL) ELSE (SELECT TOP 1 DataMatricula FROM dbo.ContaCapital WHERE NumMatricula = LANC.DescNumDocumento) END,
				   NumPessoaCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc ), -1) WHEN -1 THEN CONVERT(VARCHAR, NULL) ELSE (SELECT TOP 1 CASE LEN(convert(char(10),Pessoa.Numpessoa)) WHEN 0 THEN RTRIM(convert(char(10),Pessoa.NumPessoa)) ELSE RTRIM(left(convert(char(10),Pessoa.NumPessoa), LEN(RTRIM(convert(char(10),pessoa.NumPessoa)))-1) + '-' + RIGHT(RTRIM(convert(char(10),Pessoa.numPessoa)),1)) END FROM dbo.ContaCapital INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa WHERE NumMatricula = LANC.DescNumDocumento) END,
				   CcoCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc ), -1) WHEN -1 THEN CONVERT(VARCHAR, NULL) ELSE (SELECT TOP 1 CASE WHEN (ContaCapital .NumContaCorrente = 0) or (ContaCapital.NumContaCorrente = Null) THEN Null WHEN LEN(LTRIM(STR(ContaCapital.NumContaCorrente))) &gt; 0 AND LEN(LTRIM(STR(ContaCapital.NumContaCorrente))) &lt; 5 THEN SUBSTRING(STR(ContaCapital.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 10, 1) WHEN LEN(LTRIM(STR(ContaCapital.NumContaCorrente))) &gt; 4 AND LEN(LTRIM(STR(ContaCapital.NumContaCorrente))) &lt; 8 THEN SUBSTRING(STR(ContaCapital.NumContaCorrente), 4, 3) + '.' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 10, 1) ELSE SUBSTRING(STR(ContaCapital.NumContaCorrente), 1, 3) + '.' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 4, 3) + '.' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(ContaCapital.NumContaCorrente), 10, 1) END FROM dbo.ContaCapital WHERE NumMatricula = LANC.DescNumDocumento) END,
				   NumCGC_CPFCred = CASE ISNULL
				   (
				      (SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc ),
				      -1
				   )
				   WHEN -1 THEN CONVERT
				   (
				      VARCHAR, NULL
				   )
				   ELSE
				   (
				      SELECT
				      TOP 1
				      (
				         CASE CodPF_PJ WHEN 0 THEN SUBSTRING
				         (
				            NumCGC_CPF,1,3
				         )
				         + '.' + SUBSTRING
				         (
				            NumCGC_CPF,4,3
				         )
				         + '.' + SUBSTRING
				         (
				            NumCGC_CPF,7,3
				         )
				         + '-' + SUBSTRING
				         (
				            NumCGC_CPF,10,2
				         )
				         WHEN 1 THEN SUBSTRING
				         (
				            NumCGC_CPF,1,2
				         )
				         + '.' + SUBSTRING
				         (
				            NumCGC_CPF,3,3
				         )
				         + '.' + SUBSTRING
				         (
				            NumCGC_CPF,6,3
				         )
				         + '/' + SUBSTRING
				         (
				            NumCGC_CPF,9,4
				         )
				         + '-' + SUBSTRING(NumCGC_CPF,13,2) END
				      )
				      FROM dbo.ContaCapital
				      INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa
				      WHERE NumMatricula = LANC.DescNumDocumento
				   )
				   End
				   FROM dbo.LancamentosCCapital AS LANC
				   INNER JOIN dbo.ContaCapital ON LANC.NumMatricula = ContaCapital.NumMatricula
				   INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa
				   INNER JOIN dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente
				   WHERE LANC.IDTipoHistoricoLanc IN (105)
				   AND LANC.NumMatricula BETWEEN ${matriculaInicial}
				   AND ${matriculaFinal}
				   AND LANC.DataLote BETWEEN '${dataInicial}'
				   AND '${dataFinal}'
				   <j:if test="${pac != -1}">
				   		And Cliente.NumPac = pac
				   </j:if>
				)
				AS A
				WHERE MatriculaCred = ${matriculaCredito}
				AND ValorLanc = ${valorTransferencia}
				ORDER BY MatriculaDeb				
			]]>
		</command>
	</query>
	
	<query name="PESQUISA_CAPA_LOTE_CAPITAL">
		<use-case name="Pesquisar todas capas de lote"></use-case>
		<description>Pesquisar todas capas de lote</description>
		<command>
			<![CDATA[
				FROM br.com.sicoob.contacapital.comum.negocio.entidades.CapaLoteCapital oCapaLoteCapital
				WHERE oCapaLoteCapital.id.dataLote = <bancoob:valorOql valor="${criterios.filtro.id.dataLote}"/> 
				
				<j:if test="${criterios.filtro.situacao != 'Todos'}">
					<j:if test="${criterios.filtro.situacao == 'Abertos'}">
						AND (oCapaLoteCapital.bolAtualizado = false) 
					</j:if>
					<j:if test="${criterios.filtro.situacao == 'OK'}">
						AND (oCapaLoteCapital.bolAtualizado = true) 
					</j:if>
				</j:if>
				
				<j:if test="${criterios.filtro.id.numLoteLanc != null}">
					AND oCapaLoteCapital.id.numLoteLanc = ${criterios.filtro.id.numLoteLanc}
				</j:if>
				
				<j:if test="${criterios.filtro.idTipoHistoricoLanc != null}">
					AND oCapaLoteCapital.idTipoHistoricoLanc = ${criterios.filtro.idTipoHistoricoLanc}
				</j:if>
				
				<j:if test="${criterios.filtro.qtdLancInf != null}">
					AND oCapaLoteCapital.qtdLancInf = ${criterios.filtro.qtdLancInf}
				</j:if>
				
				<j:if test="${criterios.filtro.qtdLancApu != null}">
					AND oCapaLoteCapital.qtdLancApu = ${criterios.filtro.qtdLancApu}
				</j:if>
				
				<j:if test="${criterios.filtro.valorTotalLoteInf != null}">
					AND oCapaLoteCapital.valorTotalLoteInf = ${criterios.filtro.valorTotalLoteInf}
				</j:if>
				
				<j:if test="${criterios.filtro.valorTotalLoteApu != null}">
					AND oCapaLoteCapital.valorTotalLoteApu = ${criterios.filtro.valorTotalLoteApu}
				</j:if>
				
			]]>
		</command>
	</query>
	
	<query name="TIPOPROC_LANCAMENTO_CCA">
		<use-case name="Pesquisar Lançamentos"></use-case>
		<description>Pesquisar Lançamentos de Cap Rem por data e numero de capa de lote</description>
		<command>
			<![CDATA[
SELECT 
	A.DataLote, 
	A.NumLoteLanc, 
	A.NumSeqLanc, 
	A.DescNumDocumento, 
	A.ValorLanc, 
	A.NumMatricula ,  
	D.DescNomePessoa, 
	A.IDTipoHistoricoLanc, 
	A.IDTipoHistoricoEstorno, 
	A.IDProduto, 
	A.BolAtualizado,  
	A.IDProdutoEst, 
	A.DataHoraInclusao,  
	DescHistorico = CASE WHEN A.IDTipoHistoricoEstorno IS NULL THEN 
			E.DescHistorico 
		ELSE 
			X.DescEstornoHist 
	END 
FROM 
	dbo.LancamentosCCapital A INNER JOIN 
	dbo.ContaCapital B ON A.NumMatricula = B.NumMatricula INNER JOIN 
	dbo.Pessoa D ON B.NumCliente = D.NumPessoa INNER JOIN 
	dbo.TipoHistorico E ON A.IDTipoHistoricoLanc = E.IDTipoHistorico And 
	A.IDProduto = E.IDProduto LEFT JOIN 
	dbo.TipoHistorico X ON A.IDProdutoEst = X.IDProduto AND 
	A.IDTipoHistoricoEstorno = X.IDTipoHistorico 
Where 
	0 = 0 And 
	
	DataLote = CONVERT(DATETIME, '${dataLoteFormatada}',102) AND 
	NumLoteLanc = ${filtro.numLoteLanc} 
	
	<j:if test="${filtro.numSeqLanc != null}">
		And (A.NumSeqLanc LIKE '${filtro.numSeqLanc}%')
	</j:if>
	
	<j:if test="${filtro.idTipoHistoricoLanc != null}">
		And (A.IDTipoHistoricoLanc LIKE '${filtro.idTipoHistoricoLanc}%' )
	</j:if>
	
	<j:if test="${filtro.idTipoHistoricoEstorno != null}">
		And (A.IDTipoHistoricoEstorno LIKE '${filtro.idTipoHistoricoEstorno}%' ) 
	</j:if>
	
	<j:if test="${filtro.descHistorico != null}">
		And (E.DescHistorico Like '${filtro.descHistorico}%')
	</j:if>
	
	<j:if test="${filtro.numMatricula != null}">
		And (A.NumMatricula Like '${filtro.numMatricula}%')
	</j:if>
	
	<j:if test="${filtro.descNomePessoa != null}">
		And (D.DescNomePessoa Like '${filtro.descNomePessoa}%')
	</j:if>
	
	<j:if test="${filtro.descNumDocumento != null}">
		And (A.DescNumDocumento LIKE '${filtro.descNumDocumento}%')
	</j:if>
	
	<j:if test="${filtro.valorLanc != null}">
		And (A.ValorLanc Like '${filtro.valorLanc}%')
	</j:if>
				
			]]>
		</command>
	</query>
	
	<query name="TIPOPROC_LANCAMENTO_CCA_TOTAL">
		<use-case name="Pesquisar Lançamentos"></use-case>
		<description>Pesquisar Lançamentos de Cap Rem por data e numero de capa de lote</description>
		<command>
			<![CDATA[
SELECT 
	COUNT(A.NumLoteLanc) AS total 
FROM 
	dbo.LancamentosCCapital A INNER JOIN 
	dbo.ContaCapital B ON A.NumMatricula = B.NumMatricula INNER JOIN 
	dbo.Pessoa D ON B.NumCliente = D.NumPessoa INNER JOIN 
	dbo.TipoHistorico E ON A.IDTipoHistoricoLanc = E.IDTipoHistorico And 
	A.IDProduto = E.IDProduto LEFT JOIN 
	dbo.TipoHistorico X ON A.IDProdutoEst = X.IDProduto AND 
	A.IDTipoHistoricoEstorno = X.IDTipoHistorico 
WHERE 
	0 = 0 And 
	
	DataLote = CONVERT(DATETIME, '${dataLoteFormatada}',102) AND 
	NumLoteLanc = ${filtro.numLoteLanc} 
	
	<j:if test="${filtro.numSeqLanc != null}">
		And (A.NumSeqLanc LIKE '${filtro.numSeqLanc}%')
	</j:if>
	
	<j:if test="${filtro.idTipoHistoricoLanc != null}">
		And (A.IDTipoHistoricoLanc LIKE '${filtro.idTipoHistoricoLanc}%' )
	</j:if>
	
	<j:if test="${filtro.idTipoHistoricoEstorno != null}">
		And (A.IDTipoHistoricoEstorno LIKE '${filtro.idTipoHistoricoEstorno}%' ) 
	</j:if>
	
	<j:if test="${filtro.descHistorico != null}">
		And (E.DescHistorico Like '${filtro.descHistorico}%')
	</j:if>
	
	<j:if test="${filtro.numMatricula != null}">
		And (A.NumMatricula Like '${filtro.numMatricula}%')
	</j:if>
	
	<j:if test="${filtro.descNomePessoa != null}">
		And (D.DescNomePessoa Like '${filtro.descNomePessoa}%')
	</j:if>
	
	<j:if test="${filtro.descNumDocumento != null}">
		And (A.DescNumDocumento LIKE '${filtro.descNumDocumento}%')
	</j:if>
	
	<j:if test="${filtro.valorLanc != null}">
		And (A.ValorLanc Like '${filtro.valorLanc}%')
	</j:if>
			]]>
		</command>
	</query>
	
	<query name="PROCEDURE_IMPORTAR_SALDO_PROVISAO_JUROS">
		<use-case name="Importação de Saldos"></use-case>
		<description>Importação de Saldos</description>
		<command>
			<![CDATA[
				spu_RET_Importar_SaldosCCA_ProvisaoJuros '${caminho}', '${nome}', ${stProcessar}
			]]>
		</command>
	</query>

	<query name="OBTER_QUANTIDADE">
		<use-case name="Cancelar importação"></use-case>
		<description>Cancelar importação</description>
		<command>
			<![CDATA[
				SELECT 
					Qtd = count(NumMatricula) 
				from 
					dbo.ProvisaoJurosCCapital 
				where 
					bolexterno = 1 
				and 
					BolDestinado = 0 
				and 
					year(datafinalprov) = ${ano}
			]]>
		</command>
	</query>

	<query name="EXCLUIR_POR_ANO">
		<use-case name="Cancelar importação"></use-case>
		<description>Cancelar importação</description>
		<command>
			<![CDATA[
				delete from 
					dbo.ProvisaoJurosCCapital 
				where 
					bolexterno = 1 
				and 
					BolDestinado = 0 
				and 
					year(datafinalprov) = ${ano}
			]]>
		</command>
	</query>
	
	<query name="OBTER_MATRIC_MINIMA_MAXIMA">
		<use-case name="Obter MinMax Matricula"></use-case>
		<description>Obter valor minimo e máximo matricula</description>
		<command>
			<![CDATA[
				select min(c.id), max(c.id) from 
				br.com.sicoob.contacapital.comum.negocio.entidades.ContaCapital c
			]]>
		</command>
	</query>
	<query name="OBTER_MATRIC_MINIMA_MAXIMA_ATIVOS">
		<use-case name="Obter MinMax Matricula Ativos"></use-case>
		<description>Obter valor minimo e máximo matricula</description>
		<command>
			<![CDATA[
				select min(c.id), max(c.id) from 
				br.com.sicoob.contacapital.comum.negocio.entidades.ContaCapital c
				where codSituacao = 1
			]]>
		</command>
	</query>	
	<query name="GERAR_REL_INTEG_PENDENTE">
		<use-case name="Gerar Dados Relatorio Associados"></use-case>
		<description>Obter dados relatorio associados</description>
		<command>
			<![CDATA[
			select * from 
				fn_CCA_Integralizacao ('${dtIni}', '${dtFin}', 
					${vo.lMatriculaInicial} , 
					${vo.lMatriculaFinal} , 
					<j:choose>
						<j:when test="${vo.bIntegPendente == true}">
							1
						</j:when>
						<j:otherwise>
							0
						</j:otherwise>	
					</j:choose>)
					<j:choose>
						<j:when test="${vo.iOrdenacao == 1}">
							Order By NumCliente
						</j:when>
						<j:when test="${vo.iOrdenacao == 2}">
							Order By NumMatricula
						</j:when>
						<j:when test="${vo.iOrdenacao == 3}">
							Order By DescNomePessoa
						</j:when>
						<j:otherwise>
							Order by DataVencParcela
						</j:otherwise>
					</j:choose>					
			]]>
		</command>
	</query>
	<query name="RECUPERAR_NRO_LOTE_MAXIMO_MINIMO">
		<use-case name="Capa Lote CCA"></use-case>
		<description>Recupera o valor do primeiro e do último lote de CCA</description>
		<command>
			<![CDATA[
				select min(clc.id.numLoteLanc), max(clc.id.numLoteLanc) from 
				br.com.sicoob.contacapital.comum.negocio.entidades.CapaLoteCapital clc
			]]>
		</command>
	</query>
	
	<query name="TIPOPROC_MOVIMENTO_CCA_CONS">
		<use-case name="Pesquisar Lançamentos"></use-case>
		<description>Pesquisar Lançamentos de conta capital por data e numero de capa de lote</description>
		<command>
			<![CDATA[
SELECT 
	A.DataLote, 
	A.NumLoteLanc, 
	A.NumSeqLanc,   
	A.IDTipoHistoricoLanc, 
	A.IDTipoHistoricoEstorno, 
	E.DescHistorico, 
	A.NumMatricula, 
	D.DescNomePessoa, 
	A.DescNumDocumento, 
	A.ValorLanc, 
	A.IDProduto, 
	A.BolAtualizado, 
	A.IDProdutoEst, 
	A.DataHoraInclusao 
FROM 
	dbo.LancamentosCCapital A, 
	dbo.ContaCapital B, 
	dbo.Cliente C, 
	dbo.Pessoa D, 
	dbo.TipoHistorico E 
WHERE
	A.NumMatricula = B.NumMatricula  And 
	B.NumCliente = C.NumCliente And 
	C.NumCliente = D.NumPessoa And 
	A.IDTipoHistoricoLanc = E.IDTipoHistorico And 
	A.IDProduto = E.IDProduto 
	
	<j:if test="${dataLoteInicialFormatada != null and dataLoteFinalFormatada != null}">
		AND DataLote BETWEEN '${dataLoteInicialFormatada}' AND '${dataLoteFinalFormatada}'
	</j:if>

	<j:if test="${dataLoteInicialFormatada == null or dataLoteFinalFormatada == null}">
		<j:if test="${dataLoteInicialFormatada != null}">
			AND DataLote &gt;= '${dataLoteInicialFormatada}'
		</j:if>
		
		<j:if test="${dataLoteFinalFormatada != null}">
			AND DataLote &lt;= '${dataLoteFinalFormatada}'
		</j:if>
		
	</j:if>
	
	<j:if test="${dataLoteFormatada != null}">
		AND A.DataLote = '${dataLoteFormatada}' 
	</j:if>
	
	<j:if test="${filtro.numLoteLanc != null}">
		AND A.NumLoteLanc = ${filtro.numLoteLanc}
	</j:if>
	
	<j:if test="${filtro.numSeqLanc != null}">
		AND A.NumSeqLanc = ${filtro.numSeqLanc}
	</j:if>
	
	<j:if test="${filtro.idTipoHistoricoLanc != null}">
		And A.IDTipoHistoricoLanc = ${filtro.idTipoHistoricoLanc}
	</j:if>
	
	<j:if test="${filtro.idTipoHistoricoEstorno != null}">
		AND A.IDTipoHistoricoEstorno = ${filtro.idTipoHistoricoEstorno} 
	</j:if>
	
	<j:if test="${filtro.descHistorico != null}">
		AND (E.DescHistorico Like '${filtro.descHistorico}%')
	</j:if>
	
	<j:if test="${filtro.numMatricula != null}">
		And (A.NumMatricula = ${filtro.numMatricula})
	</j:if>
	
	<j:if test="${filtro.descNomePessoa != null}">
		And (D.DescNomePessoa LIKE '${filtro.descNomePessoa}%')
	</j:if>
	
	<j:if test="${filtro.descNumDocumento != null}">
		And (A.DescNumDocumento LIKE '${filtro.descNumDocumento}%')
	</j:if>
	
	<j:if test="${filtro.valorLanc != null}">
		AND A.ValorLanc = ${filtro.valorLanc}
	</j:if>

ORDER BY 
	A.Datalote, A.NumMatricula 
			]]>
		</command>
	</query>
	
	<query name="TIPOPROC_MOVIMENTO_CCA_CONS_TOTAL">
		<use-case name="Pesquisar Lançamentos"></use-case>
		<description>Pesquisar Lançamentos de conta capital por data e numero de capa de lote</description>
		<command>
			<![CDATA[
SELECT 
	COUNT(A.NumLoteLanc) AS total 
FROM 
	dbo.LancamentosCCapital A, 
	dbo.ContaCapital B, 
	dbo.Cliente C, 
	dbo.Pessoa D, 
	dbo.TipoHistorico E 
WHERE
	A.NumMatricula = B.NumMatricula  And 
	B.NumCliente = C.NumCliente And 
	C.NumCliente = D.NumPessoa And 
	A.IDTipoHistoricoLanc = E.IDTipoHistorico And 
	A.IDProduto = E.IDProduto 
	
	<j:if test="${dataLoteInicialFormatada != null and dataLoteFinalFormatada != null}">
		AND DataLote BETWEEN '${dataLoteInicialFormatada}' AND '${dataLoteFinalFormatada}'
	</j:if>

	<j:if test="${dataLoteInicialFormatada == null or dataLoteFinalFormatada == null}">
		<j:if test="${dataLoteInicialFormatada != null}">
			AND DataLote &gt;= '${dataLoteInicialFormatada}'
		</j:if>
		
		<j:if test="${dataLoteFinalFormatada != null}">
			AND DataLote &lt;= '${dataLoteFinalFormatada}'
		</j:if>
		
	</j:if>
	
	<j:if test="${dataLoteFormatada != null}">
		AND A.DataLote = '${dataLoteFormatada}' 
	</j:if>
	
	<j:if test="${filtro.numLoteLanc != null}">
		AND A.NumLoteLanc = ${filtro.numLoteLanc}
	</j:if>
	
	<j:if test="${filtro.numSeqLanc != null}">
		AND A.NumSeqLanc = ${filtro.numSeqLanc}
	</j:if>
	
	<j:if test="${filtro.idTipoHistoricoLanc != null}">
		And A.IDTipoHistoricoLanc = ${filtro.idTipoHistoricoLanc}
	</j:if>
	
	<j:if test="${filtro.idTipoHistoricoEstorno != null}">
		AND A.IDTipoHistoricoEstorno = ${filtro.idTipoHistoricoEstorno} 
	</j:if>
	
	<j:if test="${filtro.descHistorico != null}">
		AND (E.DescHistorico Like '${filtro.descHistorico}%')
	</j:if>
	
	<j:if test="${filtro.numMatricula != null}">
		And (A.NumMatricula = ${filtro.numMatricula})
	</j:if>
	
	<j:if test="${filtro.descNomePessoa != null}">
		And (D.DescNomePessoa LIKE '${filtro.descNomePessoa}%')
	</j:if>
	
	<j:if test="${filtro.descNumDocumento != null}">
		And (A.DescNumDocumento LIKE '${filtro.descNumDocumento}%')
	</j:if>
	
	<j:if test="${filtro.valorLanc != null}">
		AND A.ValorLanc = ${filtro.valorLanc}
	</j:if>
			]]>
		</command>
	</query>
	
	<query name="OBTER_PROCURA_DEP">
		<use-case name="Obter Procura departamento"></use-case>
		<description>Obter Procura departamento</description>
		<command>
			<![CDATA[
				select min(SubOrgaoLancFolha.CodSubOrgao) as CodMin, max(SubOrgaoLancFolha.CodSubOrgao) as CodMax
					from dbo.SubOrgaoLancFolha 
						Inner join dbo.LancFolhaPJ on LancFolhaPJ.NumPessoaJuridica = SubOrgaoLancFolha.NumPessoaJuridica 
						Inner join dbo.Pessoa on Pessoa.NumPessoa = LancFolhaPJ.NumPessoaJuridica and Pessoa.NumPessoa = SubOrgaoLancFolha.NumPessoaJuridica
					where SubOrgaoLancFolha.NumPessoaJuridica = ${numPessoaJuridica}
			]]>
		</command>
	</query>
	
	<query name="GERAR_CCA_EXTRATO">
		<use-case name="Obter Extrato"></use-case>
		<description>executar spCcaExtrato</description>
		<command>
			<![CDATA[
				spu_CCA_Extrato ${vo.lMatriculaInicial}, 
					${vo.lMatriculaFinal}, 
					'${dtIni}', 
					'${dtFin}', 
					${vo.iNumPac}, 
					${vo.lEmpresa}, 
					${vo.lSubOrgao}, 
					${vo.lSubOrgaoFinal}, 
					<j:choose>
						<j:when test="${vo.bMatrFunc == true}">
							1
						</j:when>
						<j:otherwise>
							0
						</j:otherwise>	
					</j:choose>,
					
					<j:choose>
						<j:when test="${vo.iOrdenacao == true}">
							1
						</j:when>
						<j:otherwise>
							0
						</j:otherwise>	
					</j:choose>,
					<j:choose>
						<j:when test="${vo.bDevolucao == true}">
							1
						</j:when>
						<j:otherwise>
							0
						</j:otherwise>	
					</j:choose>,
					<j:choose>
						<j:when test="${vo.bIntegralizacao == true}">
							1
						</j:when>
						<j:otherwise>
							0
						</j:otherwise>	
					</j:choose>,
					<j:choose>
						<j:when test="${vo.bSubscricao == true}">
							1
						</j:when>
						<j:otherwise>
							0
						</j:otherwise>	
					</j:choose>,
					<j:choose>
						<j:when test="${vo.bValoresDiversos == true}">
							1
						</j:when>
						<j:otherwise>
							0
						</j:otherwise>	
					</j:choose>
			]]>
		</command>
	</query>
	
	
	<query name="PESQUISA_RELATORIO_LANCAMENTOS_POR_LOTE">
		<use-case name="Relatório de Lançamentos"></use-case>
		<description>Recupera os dados para o relatório de lançamentos por lote</description>
		<command>
			<![CDATA[
				SELECT Right('0000' + LTrim(Str(dbo.LancamentosCCapital.NumSeqLanc)),4) As Seq, 
				    dbo.fn_FormataContaCorrente(ContaCapital.NumCliente) AS NumCliente, 
				    LancamentosCCapital.NumMatricula, 
				    Pessoa.DescNomePessoa , 
				    LancamentosCCapital.IDTipoHistoricoLanc , 
				    LancamentosCCapital.IDTipoHistoricoEstorno , 
					DescHistorico = Case dbo.TipoHistorico.CodNaturezaOp 
						WHEN '${COD_LANC_OPERACAO_ESTORNO}' THEN TipoHistEst.DescEstornoHist 
						Else dbo.TipoHistorico.DescHistorico END,
				    Grupo = CASE TipoHistorico.CodGrupoHist 
				         WHEN ${COD_GRUPO_HIST_SUBSCRICAO} THEN 'SUBSCRIÇÃO'
				         WHEN ${COD_GRUPO_HIST_INTEGRALIZACAO} THEN 'INTEGRALIZAÇÃO' 
				         WHEN ${COD_GRUPO_HIST_DEVOLUCAO} THEN 'DEVOLUÇÃO' 
				         WHEN ${COD_GRUPO_HIST_VALORES_DIVERSOS} THEN 'OUTROS VALORES' 
				         WHEN ${COD_GRUPO_HIST_NAO_SENSIBILIZA} THEN 'NÃO SENS. SALDO' 
				         END, 
				    LancamentosCCapital.DescNumDocumento , 
				    LancamentosCCapital.ValorLanc , 
				    Right('0000' + LTrim(Str(dbo.LancamentosCCapital.NumLoteLanc)),4) As Lote, 
				    LancamentosCCapital.DataLote,
					LancamentosCCapital.IDUsuarioResp					
				From dbo.LancamentosCCapital 
				INNER JOIN dbo.ContaCapital ON ContaCapital.NumMatricula = LancamentosCCapital.NumMatricula 
				INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa 
				LEFT JOIN dbo.TipoHistorico ON LancamentosCCapital.IDProduto = TipoHistorico.IDProduto AND 
					LancamentosCCapital.IDTipoHistoricoLanc = TipoHistorico.IDTipoHistorico 
				LEFT JOIN dbo.TipoHistorico AS TipoHistEst ON LancamentosCCapital.IDProduto = TipoHistEst.IDProduto AND
					LancamentosCCapital.IDTipoHistoricoEstorno = TipoHistEst.IDTipoHistorico 
				WHERE
					LancamentosCCapital.DataLote BETWEEN '${vo.dataInicialFmt}' AND '${vo.dataFinalFmt}'
					AND LancamentosCCapital.NumLoteLanc BETWEEN ${vo.loteInicial} AND ${vo.loteFinal}
				<j:if test="${vo.grupo != 'TODOS'}">
					<j:choose>
						<j:when test="${vo.grupo == 'SUBSCRIÇÃO'}">
							AND TipoHistorico.CodGrupoHist = ${COD_GRUPO_HIST_SUBSCRICAO}
						</j:when>
						<j:when test="${vo.grupo == 'INTEGRALIZAÇÃO'}">
							AND TipoHistorico.CodGrupoHist = ${COD_GRUPO_HIST_INTEGRALIZACAO}
						</j:when>
						<j:when test="${vo.grupo == 'DEVOLUÇÃO'}">
							AND TipoHistorico.CodGrupoHist = ${COD_GRUPO_HIST_DEVOLUCAO}
						</j:when>
						<j:when test="${vo.grupo == 'OUTROS VALORES COOPERADO'}">
							AND TipoHistorico.CodGrupoHist = ${COD_GRUPO_HIST_VALORES_DIVERSOS}
						</j:when>
						<j:when test="${vo.grupo == 'NÃO SENSIBILIZA SALDO'}">
							AND TipoHistorico.CodGrupoHist = ${COD_GRUPO_HIST_NAO_SENSIBILIZA}
						</j:when>
					</j:choose> 
				</j:if>
				ORDER BY 
					LancamentosCCapital.DataLote, 
					LancamentosCCapital.NumLoteLanc, 
					LancamentosCCapital.NumMatricula, 
					LancamentosCCapital.NumSeqLanc
			]]>
		</command>		
	</query>
		
	<query name="PESQUISA_RELATORIO_LANCAMENTOS_POR_MATRICULA">
		<use-case name="Relatório de Lançamentos"></use-case>
		<description>Recupera os dados para o relatório de lançamentos por matrícula</description>
		<command>
			<![CDATA[
				SELECT 
					dbo.fn_FormataContaCorrente(ContaCapital.NumCliente) AS NumCliente, 
					LancamentosCCapital.NumMatricula, 
					Pessoa.DescNomePessoa , 
					LancamentosCCapital.IDTipoHistoricoLanc , 
					LancamentosCCapital.IDTipoHistoricoEstorno , 
					DescHistorico = Case dbo.TipoHistorico.CodNaturezaOp 
							WHEN '${COD_LANC_OPERACAO_ESTORNO}' THEN TipoHistEst.DescEstornoHist 
							Else dbo.TipoHistorico.DescHistorico END,
					Grupo = CASE TipoHistorico.CodGrupoHist 
							 WHEN ${COD_GRUPO_HIST_SUBSCRICAO} THEN 'SUBSCRIÇÃO'
							 WHEN ${COD_GRUPO_HIST_INTEGRALIZACAO} THEN 'INTEGRALIZAÇÃO' 
							 WHEN ${COD_GRUPO_HIST_DEVOLUCAO} THEN 'DEVOLUÇÃO' 
							 WHEN ${COD_GRUPO_HIST_VALORES_DIVERSOS} THEN 'OUTROS VALORES' 
							 WHEN ${COD_GRUPO_HIST_NAO_SENSIBILIZA} THEN 'NÃO SENS. SALDO' 
							 END,
					LancamentosCCapital.DataLote , 
					Right('0000' + LTrim(Str(dbo.LancamentosCCapital.NumLoteLanc)),4) As Lote, 
					Right('0000' + LTrim(Str(dbo.LancamentosCCapital.NumSeqLanc)),4) As Seq, 
					LancamentosCCapital.DescNumDocumento , 
					LancamentosCCapital.ValorLanc , 
					TipoHistorico.CodNaturezaOp, 
					TipoHistorico.QtdDiasBloqueio,
					LancamentosCCapital.IDUsuarioResp					
				From dbo.LancamentosCCapital 
				INNER JOIN dbo.ContaCapital ON ContaCapital.NumMatricula = LancamentosCCapital.NumMatricula 
				INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa 
				LEFT JOIN dbo.TipoHistorico ON LancamentosCCapital.IDProduto = TipoHistorico.IDProduto AND 
				            LancamentosCCapital.IDTipoHistoricoLanc = TipoHistorico.IDTipoHistorico 
				LEFT JOIN dbo.TipoHistorico AS TipoHistEst ON LancamentosCCapital.IDProduto = TipoHistEst.IDProduto AND 
				            LancamentosCCapital.IDTipoHistoricoEstorno = TipoHistEst.IDTipoHistorico 
				WHERE ContaCapital.NumMatricula BETWEEN ${vo.matriculaInicial} AND ${vo.matriculaFinal}
				      AND LancamentosCCapital.DataLote BETWEEN '${vo.dataInicialFmt}' AND '${vo.dataFinalFmt}'
				      AND LancamentosCCapital.ValorLanc BETWEEN ${vo.valorMinimo} AND ${vo.valorMaximo}
				<j:if test="${vo.historico != ''}">
					AND LancamentosCCapital.IDTipoHistoricoLanc in(${vo.historico})
				</j:if>
				<j:if test="${vo.grupo != 'TODOS'}">
					<j:choose>
						<j:when test="${vo.grupo == 'SUBSCRIÇÃO'}">
							AND TipoHistorico.CodGrupoHist = ${COD_GRUPO_HIST_SUBSCRICAO}
						</j:when>
						<j:when test="${vo.grupo == 'INTEGRALIZAÇÃO'}">
							AND TipoHistorico.CodGrupoHist = ${COD_GRUPO_HIST_INTEGRALIZACAO}
						</j:when>
						<j:when test="${vo.grupo == 'DEVOLUÇÃO'}">
							AND TipoHistorico.CodGrupoHist = ${COD_GRUPO_HIST_DEVOLUCAO}
						</j:when>
						<j:when test="${vo.grupo == 'OUTROS VALORES COOPERADO'}">
							AND TipoHistorico.CodGrupoHist = ${COD_GRUPO_HIST_VALORES_DIVERSOS}
						</j:when>
						<j:when test="${vo.grupo == 'NÃO SENSIBILIZA SALDO'}">
							AND TipoHistorico.CodGrupoHist = ${COD_GRUPO_HIST_NAO_SENSIBILIZA}
						</j:when>
					</j:choose> 
				</j:if>
				ORDER BY 
					ContaCapital.NumMatricula, 
					LancamentosCCapital.IDTipoHistoricoLanc, 
					LancamentosCCapital.IDTipoHistoricoEstorno, 
					LancamentosCCapital.DataLote
			]]>
		</command>
	</query>
	
	<query name="DADOS_RELATORIO_NAO_COOPERADO">
		<use-case name="Relatorio Nao cooperado"></use-case>
		<description>Relatorio Nao cooperado</description>
		<command>
			<![CDATA[
		SELECT NumPessoa, sNumPessoa, DescNomePessoa, NumCGCCPFNum, NumCGC_CPF, NumMatricula,  
            DataSaida, CodSituacao, sCodSituacao, NumPac, DDD, NumTelefone FROM (
            SELECT DISTINCT  NumPessoa, 
            sNumPessoa = CASE  LEN(convert(char(10),numpessoa)) WHEN 0 THEN RTRIM(convert(char(10),numpessoa)) ELSE   
			RTRIM(left(convert(char(10),numpessoa),LEN(RTRIM(convert(char(10),numpessoa)))-1) + '-' +   RIGHT(RTRIM(convert(char(10),numpessoa)),1)) END, 
            DescNomePessoa, NumCGC_CPF as NumCGCCPFNum, 
            NumCGC_CPF = CASE CodPF_PJ      WHEN ${COD_TIPO_PES_FISICA} THEN SUBSTRING(NumCGC_CPF,1,3) + '.' 
			+ SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2) 
			WHEN ${COD_TIPO_PES_JURIDICA}  THEN SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + 
			SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END , 
            NumMatricula = Null, DataSaida = Null, CodSituacao = Null, 
            sCodSituacao = 'Não-Cooperado', NumPac, 
            DDD =(SELECT TOP 1 NumDDD FROM dbo.EnderecoPessoa WHERE NumPessoa = Pessoa.NumPessoa order by BolEnvioCorrespondencia desc), 
            NumTelefone = (SELECT TOP 1 NumTelefone FROM dbo.EnderecoPessoa WHERE NumPessoa = Pessoa.NumPessoa order by BolEnvioCorrespondencia desc) 
            From dbo.Pessoa 
            INNER JOIN dbo.Cliente ON   dbo.Pessoa.NumPessoa = dbo.Cliente.NumCliente 
            WHERE (dbo.Cliente.NumCliente NOT IN 
                (SELECT dbo.ContaCapital.NumCliente  From dbo.ContaCapital 
                 WHERE dbo.ContaCapital.NumCliente = dbo.Cliente.NumCliente)) 
            Union 			

 		SELECT DISTINCT  NumPessoa,
            sNumPessoa = CASE LEN(convert(char(10),numpessoa)) WHEN 0 THEN RTRIM(convert(char(10),numpessoa)) ELSE  
			RTRIM(left(convert(char(10),numpessoa),LEN(RTRIM(convert(char(10),numpessoa)))-1) + '-' +   RIGHT(RTRIM(convert(char(10),numpessoa)),1)) END, 
            DescNomePessoa, NumCGC_CPF as NumCGCCPFNum, 
            NumCGC_CPF = CASE CodPF_PJ WHEN ${COD_TIPO_PES_FISICA} THEN SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + 
			SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2) WHEN ${COD_TIPO_PES_JURIDICA} THEN SUBSTRING(NumCGC_CPF,1,2) + '.' + 
			SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END , 
            CC.NumMatricula, CC.DataSaida, CC.CodSituacao, 
            sCodSituacao = Case CC.CodSituacao WHEN ${COD_SITUACAO_COOPERADO_ATIVO} THEN 'Ativo' WHEN ${COD_SITUACAO_COOPERADO_DEMITIDO} 
			THEN 'Desligado' WHEN ${COD_SITUACAO_COOPERADO_EXCLUIDO} THEN 'Desligado' WHEN ${COD_SITUACAO_COOPERADO_ELIMINADO} THEN 'Desligado' ELSE 'Não-Cooperado' END  ,
            NumPac, DDD =(SELECT TOP 1 NumDDD FROM dbo.EnderecoPessoa WHERE NumPessoa = Pessoa.NumPessoa order by BolEnvioCorrespondencia desc), 
            NumTelefone = (SELECT TOP 1 NumTelefone FROM dbo.EnderecoPessoa WHERE NumPessoa = Pessoa.NumPessoa order by BolEnvioCorrespondencia desc) 
            From dbo.Pessoa 
            INNER JOIN dbo.Cliente ON   dbo.Pessoa.NumPessoa = dbo.Cliente.NumCliente 
            INNER JOIN dbo.ContaCapital CC ON  dbo.Cliente.NumCliente = CC.NumCliente 
            WHERE CC.CodSituacao IN (${COD_SITUACAO_COOPERADO_DEMITIDO},${COD_SITUACAO_COOPERADO_ELIMINADO},${COD_SITUACAO_COOPERADO_EXCLUIDO}) AND 
            CC.DataSaida = (SELECT MAX(DataSaida) FROM ContaCapital WHERE CodSituacao = CC.CodSituacao AND NumCliente = CC.NumCliente)) AS A 
            WHERE NumPessoa BETWEEN ${CODIGO_INICIAL} AND ${CODIGO_FINAL}
			
		<j:if test="${NUMPAC != null}">
			<j:if test="${NUMPAC != -1}">
				AND NumPac = ${NUMPAC}
			</j:if>
		</j:if>
		<j:if test="${ORDENACAO == 2}">
			Order By DescNomePessoa
		</j:if>
		<j:if test="${ORDENACAO != 2}">
			Order By NumPessoa
		</j:if>
	
   
			]]>
		</command>
	</query>
	
	<query name="OBTER_COOP_INATIVO_MIN_MAX">
		<use-case name="obterCoopInativoMinMax"></use-case>
		<description>Obter primeiro e ultimo cooperado inativo</description>
		<command>
			<![CDATA[
				 SELECT ClienteMinimo = MIN(NumCliente), ClienteMaximo = MAX(NumCliente) 
            		From dbo.Cliente
            		WHERE (dbo.Cliente.NumCliente NOT IN (SELECT dbo.ContaCapital.NumCliente 
           			FROM dbo.ContaCapital  WHERE ContaCapital.NumCliente = dbo.Cliente.NumCliente 
           			AND ContaCapital.CodSituacao =${COD_SITUACAO_COOPERADO_ATIVO}))
			]]>
		</command>
	</query>	
	
	<query name="DADOS_RELATORIO_SITUACAO_CCA">
		<use-case name="obterCoopInativoMinMax"></use-case>
		<description>Relatorio de situações de conta capital por matricula</description>
		<command>
			<![CDATA[
				<j:if test="${ULTIMA_SITUACAO == false}">
					SELECT ContaCapital.NumMatricula, Pessoa.DescNomePessoa,
		                ContaCapital.DataMatricula, ContaCapital.DataSaida,
		                HistContaCapital.CodSituacao, HistContaCapital.DataOcorrencia 
		                FROM dbo.HistContaCapital INNER JOIN dbo.ContaCapital ON 
		                HistContaCapital.NumMatricula = ContaCapital.NumMatricula INNER 
		                Join dbo.Cliente ON 
		                ContaCapital.NumCliente = Cliente.NumCliente INNER JOIN 
		                dbo.Pessoa ON Cliente.NumCliente = Pessoa.NumPessoa
		                Where ContaCapital.NumMatricula  &gt;= ${MATRICULA_INICIAL}  And ContaCapital.NumMatricula &lt;=  ${MATRICULA_FINAL}
	                
	                <j:if test="${ATIVOS == true}">
	                	And ContaCapital.CodSituacao= ${COD_SITUACAO_COOPERADO_ATIVO}
	                </j:if>
	                
	                <j:if test="${NUMPAC != null}">
						<j:if test="${NUMPAC != -1}">
							AND NumPac = ${NUMPAC}
						</j:if>
					</j:if>
				</j:if>
				<j:if test="${ULTIMA_SITUACAO == true}">
					 SELECT HistContaCapital.NumMatricula, Pessoa.DescNomePessoa,
		                ContaCapital.DataMatricula, ContaCapital.DataSaida, 
		                HistContaCapital.CodSituacao, max(HistContaCapital.DataOcorrencia) as DataOcorrencia
		                FROM dbo.HistContaCapital INNER JOIN 
		                dbo.ContaCapital ON
		                HistContaCapital.NumMatricula = ContaCapital.NumMatricula AND HistContaCapital.CodSituacao = ContaCapital.CodSituacao 
		                INNER Join dbo.Cliente ON 
		                ContaCapital.NumCliente = Cliente.NumCliente INNER JOIN 
		                dbo.Pessoa ON Cliente.NumCliente = Pessoa.NumPessoa
		                WHERE (ContaCapital.NumMatricula &gt;= ${MATRICULA_INICIAL}) AND 
		                (ContaCapital.NumMatricula  &lt;=  ${MATRICULA_FINAL}) 
	                
	                 <j:if test="${ATIVOS == true}">
	                	And ContaCapital.CodSituacao= ${COD_SITUACAO_COOPERADO_ATIVO}
	                </j:if>
	                
	                <j:if test="${NUMPAC != null}">
						<j:if test="${NUMPAC != -1}">
							AND NumPac = ${NUMPAC}
						</j:if>
					</j:if>					
					GROUP BY HistContaCapital.NumMatricula,
                	Pessoa.DescNomePessoa, ContaCapital.DataMatricula,
                	ContaCapital.DataSaida, HistContaCapital.CodSituacao                
				</j:if>              
                <j:if test="${ORDENACAO != 0}">
					Order By Pessoa.DescNomePessoa
				</j:if>
				<j:if test="${ORDENACAO == 0}">
					 Order By HistContaCapital.NumMatricula
				</j:if>
			]]>
		</command>
	</query>
	
	<query name="OBTER_EMPRESA_MIN_MAX">
		<use-case name="Obter Empresa Min Max"></use-case>
		<description>Obter primeiro e ultimo matricula de empresa</description>
		<command>
			<![CDATA[
				 SELECT EmpresaMinima = ISNULL(Min(NumPessoaJuridica),0), 
				 	EmpresaMaxima = ISNULL(Max(NumPessoaJuridica),0) FROM dbo.LancFolhaPJ			
			]]>
		</command>
	</query>
	
	<query name="GERAR_REL_DEB_INDETERMINADO">
		<use-case name="Obter Dados debitos prazo"></use-case>
		<description>Obter Dados debitos prazo Indeterminado</description>
		<command>
			<![CDATA[				
				<j:choose>
					<j:when test="${vo.bEmpresa == false}">			
						SELECT NumPessoaJuridica = 0, PessoaJuridica = '0', CCA.NumMatricula, NumCliente = dbo.Fn_FormataContaCorrente(CCA.NumCliente), PES.DescNomePessoa, 
							Forma = LF.DescListaItem, CCA.CodFormaDeb, 
							Tipo = REPLACE(REPLACE(LT.DescListaItem, 'PERCENTUAL', '%'), 'SALÁRIO', 'SAL.') , 
							Valor = CCA.ValorDeb, 
							ReceitaBrutaMensal = ISNULL((select sum(isnull(R.ReceitaBrutaMensal,0)) FROM dbo.FonteRenda R 
															Where R.NumPessoa = CCA.NumCliente 
															and R.CodFonteRenda = 0 and R.BolConjuge = 0)
															,0) 
							, NumContaCorrente = dbo.Fn_FormataContaCorrente(CCA.NumContaCorrente) 
							FROM dbo.ContaCapital CCA 
							INNER JOIN dbo.Cliente CLI ON CCA.NumCliente = CLI.NumCliente 
							INNER JOIN dbo.Pessoa PES ON CLI.NumCliente = PES.NumPessoa 
							Inner Join dbo.listaitem LF on LF.idlista =  ${lstFormaDebitoIntegralizacao}  and LF.CodListaItem = CCA.CodFormaDeb 
							Inner Join dbo.listaitem LT on LT.idlista =  ${lstTipoValorDebitoCca}
							and LT.CodListaItem = CCA.CodTipoValorDebito 
							Where CCA.CodSituacao =  ${codSituacaoCooperadoAtivo}
							And CCA.BolDebIndeterminado = 1 
							<j:set var="sSqlGroup" value="false" />
					</j:when>			   
					<j:otherwise>
						SELECT PJ.NumPessoaJuridica, PessoaJuridica = dbo.Fn_FormataContaCorrente(PJ.NumPessoaJuridica) + ' - ' + PESJUR.DescNomePessoa, 
							CCA.NumMatricula, NumCliente = dbo.Fn_FormataContaCorrente(CCA.NumCliente), P.DescNomePessoa, 
							Forma = LF.DescListaItem, CCA.CodFormaDeb, 
							Tipo = REPLACE(REPLACE(LT.DescListaItem, 'PERCENTUAL', '%'), 'SALÁRIO', 'SAL.') , 
							Valor = CCA.ValorDeb, 
							ReceitaBrutaMensal = Sum(IsNull(R.ReceitaBrutaMensal, 0)) 
							, NumContaCorrente = dbo.Fn_FormataContaCorrente(CCA.NumContaCorrente) 
							From dbo.ContaCapital CCA 
							INNER JOIN dbo.Cliente CLI ON CCA.NumCliente = CLI.NumCliente 
							Inner Join dbo.Pessoa P On P.NumPessoa = CCA.NumCliente 
							left Join dbo.Trabalha T On CCA.NumCliente = T.NumPessoaFisica and T.CodSitFuncionario = 0 
							inner Join dbo.LancFolhaPJ PJ On T.NumPessoaJuridica = PJ.NumPessoaJuridica 
							Inner Join dbo.Pessoa PESJUR On PESJUR.NumPessoa = PJ.NumPessoaJuridica 
							left JOIN dbo.FonteRenda R ON R.NumPessoaJuridica = T.NumPessoaJuridica and R.NumPessoa = T.NumPessoaFisica 
							   and R.CodFonteRenda = 0 and R.BolConjuge = 0 
							Inner Join dbo.listaitem LF on LF.idlista =  ${lstFormaDebitoIntegralizacao}  and LF.CodListaItem = CCA.CodFormaDeb 
							Inner Join dbo.listaitem LT on LT.idlista =  ${lstTipoValorDebitoCca}
							and LT.CodListaItem = CCA.CodTipoValorDebito 
							Where CCA.CodSituacao =  ${codSituacaoCooperadoAtivo}
							And CCA.bolDebIndeterminado = 1
							AND PJ.NumPessoaJuridica &gt;= ${vo.lEmpresa}
							AND PJ.NumPessoaJuridica &lt;= ${vo.lEmpresaFin}
						<j:set var="sSqlGroup" value="true" />
					</j:otherwise>
				</j:choose>
					AND CCA.NumMatricula &gt;=  ${vo.lMatriculaInicial}  AND CCA.NumMatricula &lt;=  ${vo.lMatriculaFinal}
				<j:if test="${vo.iNumPac != -1 and vo.iNumPac != null}">
				    And CLI.NumPac = ${vo.iNumPac}
				</j:if>
				<j:if test="${vo.iForma != -1 and vo.iForma != null}">
				    And CCA.CodFormaDeb =  ${vo.iForma}
				</j:if>
				<j:if test="${sSqlGroup == true}">        
					group by PJ.NumPessoaJuridica, CCA.NumMatricula, CCA.NumCliente, P.DescNomePessoa, 
						LF.DescListaItem , CCA.CodFormaDeb, LT.DescListaItem, CCA.ValorDeb, CCA.NumContaCorrente, PESJUR.DescNomePessoa				
				</j:if>
				
				<j:choose>
					<j:when test="${vo.iOrdenacao == 1}">
						Order By 
						<j:if test="${sSqlGroup == true}">
							PJ.NumPessoaJuridica,
						</j:if>
						CCA.NumCliente
					</j:when>
					<j:when test="${vo.iOrdenacao == 2}">
						Order By 
						<j:if test="${sSqlGroup == true}">
							PJ.NumPessoaJuridica,
						</j:if>					
						CCA.NumMatricula 
					</j:when>
					<j:when test="${vo.iOrdenacao == 3}">
						Order By 
						<j:if test="${sSqlGroup == true}">
							PJ.NumPessoaJuridica,
						</j:if>					
						PES.DescNomePessoa
					</j:when>
					<j:otherwise>
					</j:otherwise>
				</j:choose>				 
			]]>
		</command>
	</query>
	<query name="PESQUISA_RELATORIO_RESUMO_LANCAMENTOS">
		<use-case name="Relatório de Resumo de Lançamentos"></use-case>
		<description>Relatório de Resumo de Lançamentos</description>
		<command>
			<![CDATA[
				SELECT  
					Produto = 'ContaCapital',
					LancamentosCCapital.NumMatricula, 
					LancamentosCCapital.IDTipoHistoricoLanc,
					LancamentosCCapital.IDTipoHistoricoEstorno, 
					TipoHistorico.CodGrupoHist, 
					Grupo = CASE TipoHistorico.CodGrupoHist
						WHEN ${COD_GRUPO_HIST_SUBSCRICAO} THEN 'SUBSCRIÇÃO'
						WHEN ${COD_GRUPO_HIST_INTEGRALIZACAO} THEN 'INTEGRALIZAÇÃO'
						WHEN ${COD_GRUPO_HIST_DEVOLUCAO} THEN 'DEVOLUÇÃO'
						WHEN ${COD_GRUPO_HIST_VALORES_DIVERSOS} THEN 'OUTROS VALORES'
					END,
					LancamentosCCapital.DataLote,
					LancamentosCCapital.ValorLanc,
					TipoHistorico.CodNaturezaOp,
					TipoHistorico.QtdDiasBloqueio
				From dbo.LancamentosCCapital
				INNER JOIN dbo.ContaCapital 
					ON ContaCapital.NumMatricula = LancamentosCCapital.NumMatricula
				INNER JOIN dbo.Pessoa 
					ON ContaCapital.NumCliente = Pessoa.NumPessoa
				LEFT JOIN dbo.TipoHistorico 
					ON LancamentosCCapital.IDProduto = TipoHistorico.IDProduto AND
					LancamentosCCapital.IDTipoHistoricoLanc = TipoHistorico.IDTipoHistorico
				LEFT JOIN dbo.TipoHistorico AS TipoHistEst 
					ON LancamentosCCapital.IDProduto = TipoHistEst.IDProduto AND
					LancamentosCCapital.IDTipoHistoricoEstorno = TipoHistEst.IDTipoHistorico
				WHERE  LancamentosCCapital.DataLote BETWEEN '${dataInicial}' AND '${dataFinal}'
				AND TipoHistorico.CodGrupoHist IN (
					${COD_GRUPO_HIST_SUBSCRICAO}, 
					${COD_GRUPO_HIST_INTEGRALIZACAO}, 
					${COD_GRUPO_HIST_DEVOLUCAO}, 
					${COD_GRUPO_HIST_VALORES_DIVERSOS})
				ORDER BY 
					ContaCapital.NumMatricula, 
					LancamentosCCapital.IDTipoHistoricoLanc,
					LancamentosCCapital.IDTipoHistoricoEstorno, 
					LancamentosCCapital.DataLote
			]]>
		</command>
	</query>
	<query name="PESQUISA_RELATORIO_LANC_NAO_CONTABILIZADOS_ANALITICO">
		<use-case name="Relatório Lançamentos Não Contabilizados"></use-case>
		<description>Relatório Lançamentos Não Contabilizados</description>
		<command>
			<![CDATA[
				SELECT 
				LancamentosCCapital.DataLote, 
				dbo.fn_FormataContaCorrente(ContaCapital.NumCliente) AS NumCliente,
				LancamentosCCapital.NumMatricula,
				Pessoa.DescNomePessoa,  
				LancamentosCCapital.IDTipoHistoricoLanc,  
				LancamentosCCapital.IDTipoHistoricoEstorno ,
				DescHistorico = Case dbo.TipoHistorico.CodNaturezaOp WHEN '${COD_LANC_OPERACAO_ESTORNO}' 
					THEN TipoHistEst.DescEstornoHist 
					Else dbo.TipoHistorico.DescHistorico END,
				LancamentosCCapital.DescNumDocumento ,
				Right('0000' + LTrim(Str(dbo.LancamentosCCapital.NumLoteLanc)),4) As Lote,
				Right('0000' + LTrim(Str(dbo.LancamentosCCapital.NumSeqLanc)),4) As Seq,
				LancamentosCCapital.ValorLanc ,
				TipoHistorico.CodNaturezaOp,
				Debito = CASE 
					WHEN TipoHistorico.CodNaturezaOp = '${COD_LANC_OPERACAO_DEBITO}' 
						THEN (LancamentosCCapital.ValorLanc)
					WHEN TipoHistorico.CodNaturezaOp = '${COD_LANC_OPERACAO_ESTORNO}' AND TipoHistEst.CodNaturezaOp = '${COD_LANC_OPERACAO_CREDITO}' 
						THEN (LancamentosCCapital.ValorLanc) 
					ELSE 0 END,
				Credito = CASE 
					WHEN TipoHistorico.CodNaturezaOp = '${COD_LANC_OPERACAO_CREDITO}' 
						THEN (LancamentosCCapital.ValorLanc)
					WHEN TipoHistorico.CodNaturezaOp = '${COD_LANC_OPERACAO_ESTORNO}' AND TipoHistEst.CodNaturezaOp = '${COD_LANC_OPERACAO_DEBITO}' 
						THEN (LancamentosCCapital.ValorLanc) 
					ELSE 0 END,
				TipoD = CASE 
					WHEN TipoHistorico.CodNaturezaOp = '${COD_LANC_OPERACAO_DEBITO}' THEN 'D' 
					WHEN TipoHistorico.CodNaturezaOp = '${COD_LANC_OPERACAO_ESTORNO}' AND TipoHistEst.CodNaturezaOp = '${COD_LANC_OPERACAO_CREDITO}' 
						THEN '${COD_LANC_OPERACAO_DEBITO}' END,
				TipoC = CASE
					WHEN TipoHistorico.CodNaturezaOp = '${COD_LANC_OPERACAO_CREDITO}' THEN '${COD_LANC_OPERACAO_CREDITO}'
					WHEN TipoHistorico.CodNaturezaOp = '${COD_LANC_OPERACAO_ESTORNO}' AND TipoHistEst.CodNaturezaOp = '${COD_LANC_OPERACAO_DEBITO}'
						THEN '${COD_LANC_OPERACAO_CREDITO}' END
				From dbo.LancamentosCCapital
				INNER JOIN dbo.ContaCapital ON ContaCapital.NumMatricula = LancamentosCCapital.NumMatricula
				INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa
				LEFT JOIN dbo.TipoHistorico ON LancamentosCCapital.IDProduto = TipoHistorico.IDProduto AND
					LancamentosCCapital.IDTipoHistoricoLanc = TipoHistorico.IDTipoHistorico
				LEFT JOIN dbo.TipoHistorico AS TipoHistEst ON LancamentosCCapital.IDProduto = TipoHistEst.IDProduto
					AND LancamentosCCapital.IDTipoHistoricoEstorno = TipoHistEst.IDTipoHistorico
				WHERE LancamentosCCapital.DataLote BETWEEN '${dataInicial}' AND '${dataFinal}'
					AND ((TipoHistorico.CodNaturezaOp &lt;&gt; '${COD_LANC_OPERACAO_ESTORNO}' AND TipoHistorico.IDOperacao IS NULL)
					OR (TipoHistorico.CodNaturezaOp = '${COD_LANC_OPERACAO_ESTORNO}' 
					AND LancamentosCCapital.IDTipoHistoricoEstorno IS NOT NULL 
					AND TipoHistEst.IDOperacaoEstorno IS NULL))
				ORDER BY LancamentosCCapital.NumMatricula
			]]>
		</command>
	</query>
	<query name="PESQUISA_RELATORIO_LANC_NAO_CONTABILIZADOS_SINTETICO">
		<use-case name="Relatório Lançamentos Não Contabilizados"></use-case>
		<description>Relatório Lançamentos Não Contabilizados</description>
		<command>
			<![CDATA[
				SELECT 
				LancamentosCCapital.DataLote, 
				LancamentosCCapital.IDTipoHistoricoLanc,  
				LancamentosCCapital.IDTipoHistoricoEstorno,
				DescHistorico = Case dbo.TipoHistorico.CodNaturezaOp 
					WHEN '${COD_LANC_OPERACAO_ESTORNO}' THEN TipoHistEst.DescEstornoHist 
					Else dbo.TipoHistorico.DescHistorico END,
				COUNT(LancamentosCCapital.IDTipoHistoricoLanc) AS Quant,
				sum (
					CASE 
					WHEN TipoHistorico.CodNaturezaOp = 'D' 
						THEN (LancamentosCCapital.ValorLanc)
					WHEN TipoHistorico.CodNaturezaOp = 'E' AND TipoHistEst.CodNaturezaOp = 'C' 
						THEN (LancamentosCCapital.ValorLanc) 
					ELSE 0 END) AS Debito,
				sum (CASE 
					WHEN TipoHistorico.CodNaturezaOp = 'C' 
						THEN (LancamentosCCapital.ValorLanc)
					WHEN TipoHistorico.CodNaturezaOp = 'E' AND TipoHistEst.CodNaturezaOp = 'D'
						THEN (LancamentosCCapital.ValorLanc) 
					ELSE 0 END) AS Credito
				From dbo.LancamentosCCapital
				LEFT JOIN dbo.TipoHistorico ON LancamentosCCapital.IDProduto = TipoHistorico.IDProduto
					AND LancamentosCCapital.IDTipoHistoricoLanc = TipoHistorico.IDTipoHistorico
				LEFT JOIN dbo.TipoHistorico AS TipoHistEst ON LancamentosCCapital.IDProduto = TipoHistEst.IDProduto
					AND LancamentosCCapital.IDTipoHistoricoEstorno = TipoHistEst.IDTipoHistorico
				WHERE LancamentosCCapital.DataLote BETWEEN '${dataInicial}' AND '${dataFinal}'
					AND ((TipoHistorico.CodNaturezaOp &lt;&gt; '${COD_LANC_OPERACAO_ESTORNO}' AND TipoHistorico.IDOperacao IS NULL)
					OR (TipoHistorico.CodNaturezaOp = '${COD_LANC_OPERACAO_ESTORNO}' 
					AND LancamentosCCapital.IDTipoHistoricoEstorno IS NOT NULL 
					AND TipoHistEst.IDOperacaoEstorno IS NULL))
				GROUP BY 
				LancamentosCCapital.DataLote, 
				LancamentosCCapital.IDTipoHistoricoLanc,
				LancamentosCCapital.IDTipoHistoricoEstorno , 
				TipoHistorico.DescHistorico, 
				TipoHistorico.CodNaturezaOp, 
				TipoHistEst.DescEstornoHist
			]]>
		</command>
	</query>
	
	<query name="GERAR_REL_CAP_REAL_DEV">
		<use-case name="Gerar Relatório Capital Realizar/Devolver/Devolvido"></use-case>
		<description>Relatório Capital Realizar/Devolver/Devolvido</description>
		<command>
			<![CDATA[
				dbo.Spu_CCA_RelCapRealDev ${vo.lMatriculaInicial},
											${vo.lMatriculaFinal}, 
											${vo.iTipo}, 
											${vo.iOrdenacao},
											${vo.iNumPac}, 
											${vo.iForma}, 
											'${dtIni}', 
											'${dtFin}'
			]]>
		</command>
	</query>
	
	<query name="PESQUISA_PERIODO_POR_TIPO_INFORMACAO">
		<use-case name="Inf Acumulada"></use-case>
		<description>Inf Acumulada</description>
		<command>
			<![CDATA[
				Select MesAno = Convert(Varchar(2), NumMesRef) + '/' + 
					Convert(Varchar(4),NumAnoRef), NumAnoRef, NumMesRef 
				from 
					(Select Distinct NumAnoRef, NumMesRef from InfAcumulada 
						where IdProduto = ${idProduto} and IdTipoInfoAcumulo = ${idTipoInfoAcumulo} 
					) 
				as A order by NumAnoRef desc, NumMesRef desc
			]]>
		</command>
	</query>
	
	<query name="PESQUISA_DADOS_RELATORIO_SALDOS_MEDIOS">
		<use-case name="Relatório de Saldos Médios"></use-case>
		<description>Relatório de Saldos Médios</description>
		<command>
			<![CDATA[
				Select 
					dbo.fn_FormataContaCorrente(NumCliente) as NumClienteFormatado, 
					NumCliente, 
					NumMatricula, 
					DescNomepessoa, 
					SaldoAnt2, 
					SaldoAnt1, 
					SaldoBase, 
					MesBase, 
					AnoBase, 
					NumPac, 
					Media 
				from fn_CCA_RelSaldoMedio 
					(${vo.anoBase}, ${vo.mesBase}, ${vo.matriculaInicial}, ${vo.matriculaFinal}) 
				<j:if test="${vo.numPac >= 0}">
					Where NumPac = ${vo.numPac}
				</j:if>
				<j:choose>
					<j:when test="${vo.ordem == 'C'}">
						order by NumCliente						
					</j:when>
					<j:when test="${vo.ordem == 'M'}">
						order By NumMatricula						
					</j:when>
					<j:otherwise>
						order By Media
					</j:otherwise>
				</j:choose>
			]]>
		</command>
	</query>
	<query name="PESQUISA_RELATORIO_CONCILIACAO_CONTABIL">
		<use-case name="Relatório Conciliação Contabil"></use-case>
		<description>Relatório Conciliação Contabil</description>
		<command>
			<![CDATA[
				SELECT
					Right('0000' + LTrim(Str(dbo.LancamentosCCapital.NumSeqLanc)),4) As Seq,
					NumCliente = CASE WHEN
					(
					   ContaCapital.NumCliente = 0
					)
					or
					(
					   ContaCapital.NumCliente = Null
					)
					THEN Null WHEN LEN(LTRIM(STR(ContaCapital.NumCliente))) &gt; 0
					AND LEN
					(
					   LTRIM(STR(ContaCapital.NumCliente))
					)
					&lt; 5 THEN SUBSTRING
					(
					   STR(ContaCapital.NumCliente), 7, 3
					)
					+ '-' + SUBSTRING
					(
					   STR(ContaCapital.NumCliente), 10, 1
					)
					WHEN LEN(LTRIM(STR(ContaCapital.NumCliente))) &gt; 4
					AND LEN(LTRIM(STR(ContaCapital.NumCliente))) &lt; 8 THEN SUBSTRING(STR(ContaCapital.NumCliente), 4, 3) + '.' + SUBSTRING(STR(ContaCapital.NumCliente), 7, 3) + '-' + SUBSTRING(STR(ContaCapital.NumCliente), 10, 1) Else SUBSTRING(STR(ContaCapital.NumCliente), 1, 3) + '.' + SUBSTRING(STR(ContaCapital.NumCliente), 4, 3) + '.' + SUBSTRING(STR(ContaCapital.NumCliente), 7, 3) + '-' + SUBSTRING(STR(ContaCapital.NumCliente), 10, 1) END,
					LancamentosCCapital.NumMatricula,
					Pessoa.DescNomePessoa,
					LancamentosCCapital.IDTipoHistoricoLanc,
					LancamentosCCapital.IDTipoHistoricoEstorno,
					DescHistorico = Case dbo.TipoHistorico.CodNaturezaOp WHEN 'E' THEN TipoHistEst.DescEstornoHist Else dbo.TipoHistorico.DescHistorico END,
					Grupo = CASE TipoHistorico.CodGrupoHist WHEN 1 THEN 'SUBSCRIÇÃO' WHEN 2 THEN 'INTEGRALIZAÇÃO' WHEN 3 THEN 'DEVOLUÇÃO' WHEN 4 THEN 'OUTROS VALORES' WHEN 9 THEN 'NÃO SENS. SALDO' END,
					LancamentosCCapital.DescNumDocumento,
					LancamentosCCapital.ValorLanc,
					Right('0000' + LTrim(Str(dbo.LancamentosCCapital.NumLoteLanc)),4) As Lote,
					LancamentosCCapital.DataLote
					From dbo.LancamentosCCapital
					INNER JOIN dbo.ContaCapital ON ContaCapital.NumMatricula = LancamentosCCapital.NumMatricula
					INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa
					LEFT JOIN dbo.TipoHistorico ON LancamentosCCapital.IDProduto = TipoHistorico.IDProduto
					AND LancamentosCCapital.IDTipoHistoricoLanc = TipoHistorico.IDTipoHistorico
					LEFT JOIN dbo.TipoHistorico AS TipoHistEst ON LancamentosCCapital.IDProduto = TipoHistEst.IDProduto
					AND LancamentosCCapital.IDTipoHistoricoEstorno = TipoHistEst.IDTipoHistorico
					WHERE LancamentosCCapital.DataLote BETWEEN '${dataInicial}'
					AND '${dataFinal}'
					
					<j:if test="${grupo != 'TODOS'}">
						<j:if test="${grupo == 'SUBSCRIÇÃO'}">
							AND TipoHistorico.CodGrupoHist = 1
						</j:if>

						<j:if test="${grupo == 'INTEGRALIZAÇÃO'}">
							AND TipoHistorico.CodGrupoHist = 2
						</j:if>

						<j:if test="${grupo == 'DEVOLUÇÃO'}">
							AND TipoHistorico.CodGrupoHist = 3
						</j:if>

						<j:if test="${grupo == 'OUTROS VALORES COOPERADO'}">
							AND TipoHistorico.CodGrupoHist = 4
						</j:if>

						<j:if test="${grupo == 'NÃO SENSIBILIZA SALDO'}">
							AND TipoHistorico.CodGrupoHist = 9
						</j:if>
					</j:if>
					AND
					(
					   (
					      TipoHistorico.CodNaturezaOp = 'E'
					      AND TipoHistEst.IDOperacaoEstorno IN
					      (
					         SELECT
					         IDOperacao
					         FROM dbo.PerfilContabilOperacao
					         WHERE IDProduto = 2
					      )
					   )
					   OR
					   (
					      TipoHistorico.CodNaturezaOp &lt;&gt; 'E'
					      AND TipoHistorico.IDOperacao IN
					      (
					         SELECT
					         IDOperacao
					         FROM dbo.PerfilContabilOperacao
					         WHERE IDProduto = 2
					      )
					   )
					)
					ORDER BY LancamentosCCapital.DataLote,
					LancamentosCCapital.IDTipoHistoricoLanc,
					LancamentosCCapital.NumMatricula,
					LancamentosCCapital.NumLoteLanc,
					LancamentosCCapital.NumSeqLanc
			]]>
		</command>
	</query>
	
	<query name="DADOS_RELATORIO_SITUACAO_PERIODO_CCA">
		<use-case name=""></use-case>
		<description>Relatorio de situações de conta capital por período</description>
		<command>
			<![CDATA[
			
				SELECT DISTINCT HistContaCapital.NumMatricula, Pessoa.DescNomePessoa,
		            ContaCapital.DataMatricula, ContaCapital.DataSaida, 
		            HistContaCapital.CodSituacao, CONVERT(VARCHAR(10), HistContaCapital.DataOcorrencia , 121) AS DataOcorrencia,
		            Situacao = CASE WHEN HistContaCapital.CodSituacao = 1 THEN 1 ELSE 0 END
		            From dbo.HistContaCapital
		            INNER JOIN dbo.ContaCapital ON HistContaCapital.NumMatricula = ContaCapital.NumMatricula 
		            INNER Join dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente 
		            INNER JOIN dbo.Pessoa ON Cliente.NumCliente = Pessoa.NumPessoa
		            WHERE CAST(HistContaCapital.DataOcorrencia AS DATE) BETWEEN '${dataInicial}' AND '${dataFinal}'
	                
	                <j:if test="${NUMPAC != null}">
						<j:if test="${NUMPAC != -1}">
							AND NumPac = ${NUMPAC}
						</j:if>
					</j:if>				
					         
					
					<j:if test="${situacao == 1}">
						And HistContaCapital.CodSituacao IN (2,3,4)
					</j:if>
					<j:if test="${situacao == 0}">
						And HistContaCapital.CodSituacao = 1 
					</j:if>					    
				       
                <j:if test="${ORDENACAO != 0}">
					Order By Pessoa.DescNomePessoa
				</j:if>
				<j:if test="${ORDENACAO == 0}">
					 Order By HistContaCapital.NumMatricula
				</j:if>
				

			]]>
		</command>
	</query>
	<query name="PESQUISA_DADOS_RELATORIO_RESUMO_SALDOS_ATUAIS">
		<use-case name="Relatório Resumo Saldos Atuais"></use-case>
		<description>Relatório Resumo Saldos Atuais</description>
		<command>
			<![CDATA[
				spu_CCA_RelSaldos ${vo.matriculaInicial}, ${vo.matriculaFinal}, '${vo.empresa}'			
			]]>
		</command>
	</query>
	<query name="GERAR_REL_RECIBO_INTEG">
		<use-case name="Gerar Recibo de movimentacao"></use-case>
		<description>Relatório recibo de movimentacao</description>
		<command>
			<![CDATA[
				SELECT ParcelamentoCCA.NumMatricula, 
			            NumParcelamento = RIGHT('0000' + CONVERT(VARCHAR, ParcelamentoCCA.NumParcelamento), 4), 
			            NumParcela = RIGHT('000' + CONVERT(VARCHAR, ParcelamentoCCA.NumParcela), 3), 
			            ParcelamentoCCA.CodTipoParcelamento, ParcelamentoCCA.DataVencParcela, ParcelamentoCCA.DataSituacaoParcela, 
			            ParcelamentoCCA.ValorParcela, ParcelamentoCCA.CodModoLanc, ParcelamentoCCA.CodSituacaoParcela, ParcelamentoCCA.NumContaCorrente, 
			
			      CCMascarada = CASE WHEN (ParcelamentoCCA.NumContaCorrente = 0) or (ParcelamentoCCA.NumContaCorrente = Null) THEN Null 
			            WHEN LEN(LTRIM(STR(ParcelamentoCCA.NumContaCorrente))) &gt; 0 AND 
			            LEN(LTRIM(STR(ParcelamentoCCA.NumContaCorrente))) &lt; 5 THEN 
			            SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 7, 3)  + '-' + 
			            SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 10, 1) 
			            WHEN LEN(LTRIM(STR(ParcelamentoCCA.NumContaCorrente))) &gt; 4 AND 
			            LEN(LTRIM(STR(ParcelamentoCCA.NumContaCorrente))) &lt; 8 THEN 
			            SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 4, 3)  + '.' + 
			            SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 7, 3)  + '-' + 
			            SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 10, 1)  ELSE 
			            SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 1, 3)  + '.' + 
			            SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 4, 3)  + '.' + 
			            SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 7, 3)  + '-' + 
			            SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 10, 1) 
			            END, 
			    
			      Pessoa.DescNomePessoa, sMatricula = CONVERT(VARCHAR(10),ParcelamentoCCA.NumMatricula), 
			            NumCGC_CPF = CASE CodPF_PJ 
			                             WHEN ${codTipoPesFisica} THEN 
			                                 SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2) 
			                             WHEN ${codTipoPesJuridica} THEN 
			                                 SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END, 
			            sDescricao = 'PARCELA QUITADA EM ' + CONVERT(VARCHAR(10), ParcelamentoCCA.DataSituacaoParcela,103) + ' - ' + 
			            CASE  ParcelamentoCCA.CodSituacaoParcela WHEN ${codParcelaPagaViaCaixa} THEN ' PARCELA PAGA VIA CAIXA' 
			                                                     WHEN ${codParcelaPagaViaConta} THEN ' PARCELA PAGA VIA CONTA CORRENTE' 
			                                                     WHEN ${codParcelaPagaViaChadmin} THEN ' PARCELA PAGA VIA BANCO' 
			                                                     WHEN ${codParcelaPagaViaFolha} THEN ' PARCELA PAGA VIA FOLHA' 
			                                                     WHEN ${codParcelaPagaViaCobranca} THEN ' PARCELA PAGA VIA COBRANÇA' 
			                                                     WHEN ${codParcelaPagaViaRateio} THEN ' PARCELA PAGA VIA RATEIO' 
			                                                     WHEN ${codParcelaPagaViaReserva} THEN ' PARCELA PAGA VIA RESERVA' 
			            END FROM dbo.ParcelamentoCCA 
			            INNER JOIN dbo.ContaCapital ON ParcelamentoCCA.NumMatricula = ContaCapital.NumMatricula 
			            INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa  
			            INNER JOIN dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente 
			            WHERE ParcelamentoCCA.CodSituacaoParcela IN (${codParcelaPagaViaCaixa} , ${codParcelaPagaViaConta},${codParcelaPagaViaChadmin}
			                                                       ,${codParcelaPagaViaFolha} , ${codParcelaPagaViaCobranca},${codParcelaPagaViaRateio},${codParcelaPagaViaReserva}
			            ) AND ParcelamentoCCA.NumMatricula BETWEEN ${vo.numMatriculaInicial}
			            AND ${vo.numMatriculaFinal} AND ParcelamentoCCA.DataSituacaoParcela BETWEEN '${vo.dtInicialFmt}'
			            AND '${vo.dtFinalFmt}'
			           
			    <j:if test="${vo.tpParcelamento == codTipoParcelamentoIntegral or vo.tpParcelamento == codTipoParcelamentoDevolucao}">
					AND ParcelamentoCCA.CodTipoParcelamento = ${vo.tpParcelamento}
			    </j:if>
			    
			    <j:if test="${vo.iParcelamento != null}">
			        And ParcelamentoCCA.NumParcelamento = ${vo.iParcelamento}
			    </j:if>
			        
			    <j:if test="${vo.numPac != -1}">
					And Cliente.NumPac = ${vo.numPac}
			    </j:if>    
				ORDER BY ParcelamentoCCA.NumMatricula 
			]]>
		</command>
	</query>
	<query name="GERAR_REL_RECIBO_TRANSF">
		<use-case name="Gerar Recibo de Transferencia"></use-case>
		<description>Relatório Recibo de Transferencia</description>
		<command>
			<![CDATA[
				SELECT * FROM (
			    	SELECT LANC.DataLote, LANC.NumSeqLanc, 
			            LANC.ValorLanc, 
			            MatriculaDeb = LANC.NumMatricula, 
			            NomeDeb = Pessoa.DescNomePessoa, 
			            DataMatDeb = ContaCapital.DataMatricula, 
			            NumPessoaDeb = CASE LEN(convert(char(10),Pessoa.Numpessoa)) 
			                           WHEN 0 THEN RTRIM(convert(char(10),Pessoa.NumPessoa)) 
			                           ELSE RTRIM(left(convert(char(10),Pessoa.NumPessoa), LEN(RTRIM(convert(char(10),pessoa.NumPessoa)))-1) + '-' + RIGHT(RTRIM(convert(char(10),Pessoa.numPessoa)),1)) END, 
			            dbo.fn_FormataContaCorrente(ContaCapital.NumContaCorrente) AS CcoDeb, 
			            NumCGC_CPFDeb = CASE CodPF_PJ  
			                           WHEN 0 THEN  SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2)  
			                           WHEN 1 THEN  SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END, 
			           
					    MatriculaCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc), -1) 
			                    WHEN -1 THEN CONVERT(INT, NULL) 
			                    Else LANC.DescNumDocumento 
			                    END, 
			            NomeCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc), -1) 
			                    WHEN -1 THEN CONVERT(VARCHAR(50),'(Associado Excluído)') 
			                    ELSE (SELECT TOP 1 Pessoa.DescNomePessoa FROM dbo.ContaCapital INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa WHERE NumMatricula = LANC.DescNumDocumento) 
			                    END, 
			            DataMatCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc), -1) 
			                    WHEN -1 THEN CONVERT(DATETIME, NULL) 
			                    ELSE (SELECT TOP 1 DataMatricula FROM dbo.ContaCapital WHERE NumMatricula = LANC.DescNumDocumento) 
			                    END, 
			            NumPessoaCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc), -1) 
			                    WHEN -1 THEN CONVERT(VARCHAR, NULL) 
			                    ELSE (SELECT TOP 1 CASE LEN(convert(char(10),Pessoa.Numpessoa)) WHEN 0 THEN RTRIM(convert(char(10),Pessoa.NumPessoa)) ELSE RTRIM(left(convert(char(10),Pessoa.NumPessoa), LEN(RTRIM(convert(char(10),pessoa.NumPessoa)))-1) + '-' + RIGHT(RTRIM(convert(char(10),Pessoa.numPessoa)),1)) END FROM dbo.ContaCapital INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa WHERE NumMatricula = LANC.DescNumDocumento) 
			                    END, 
					    CcoCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc), -1) 
			                   WHEN -1 THEN CONVERT(VARCHAR, NULL) 
			                   ELSE (SELECT TOP 1 dbo.fn_FormataContaCorrente(ContaCapital.NumContaCorrente) 
			                   FROM dbo.ContaCapital WHERE NumMatricula = LANC.DescNumDocumento) END,  
			            NumCGC_CPFCred = CASE ISNULL ((SELECT TOP 1 NumMatricula FROM dbo.LancamentosCCapital WHERE NumMatricula = LANC.DescNumDocumento AND DataLote = LANC.DataLote AND NumLoteLanc = LANC.NumLoteLanc), -1) 
			                   WHEN -1 THEN CONVERT(VARCHAR, NULL) 
			                   ELSE (SELECT TOP 1 (CASE CodPF_PJ  WHEN 0 THEN  SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2)  WHEN 1 THEN  SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END) FROM dbo.ContaCapital INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa WHERE NumMatricula = LANC.DescNumDocumento) 
			                   End 
			           
					    FROM dbo.LancamentosCCapital AS LANC 
				            INNER JOIN dbo.ContaCapital ON LANC.NumMatricula = ContaCapital.NumMatricula 
				            INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa 
				            INNER JOIN dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente 
			            WHERE LANC.IDTipoHistoricoLanc IN (${codHistoricoCcaTransfBaixaInteg}) 
				            AND LANC.NumMatricula BETWEEN  ${numMatriculaInicial} AND ${numMatriculaFinal}
				            AND LANC.DataLote BETWEEN  '${dtInicial}'
				            AND '${dtFinal}'
			    <j:if test="${numPac != -1}">
			        And Cliente.NumPac = ${numPac}
			    </j:if>    
			    ) AS A    
			    <j:set var="where" value="WHERE" />    
			    <j:if test="${matricCred != null}">
			        <j:out value="${where}" /> MatriculaCred = ${matricCred}
			        <j:set var="where" value="AND" />
			    </j:if>
			    <j:if test="${cValor != null}">
			        <j:out value="${where}" /> ValorLanc = ${cValor}
			    </j:if>    
			    ORDER BY MatriculaDeb
			]]>
		</command>
	</query>
	
	<query name="DADOS_RELATORIO_LISTA_PRESENCA">
		<use-case name="obterListaPresenca"></use-case>
		<description>Relatorio Lista de presença	</description>
		<command>
			<![CDATA[				
			SELECT ContaCapital.NumMatricula, Pessoa.DescNomePessoa 
	            FROM dbo.ContaCapital
	            INNER JOIN dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente 
	            INNER JOIN dbo.Pessoa ON Cliente.NumCliente = Pessoa.NumPessoa
	            WHERE ContaCapital.BolDireitoVoto = 1 
	                
	                <j:if test="${ATIVOS == true}">
	                	And ContaCapital.CodSituacao= ${COD_SITUACAO_COOPERADO_ATIVO}
	                </j:if>
	                
	                <j:if test="${NUMPAC != null}">
						<j:if test="${NUMPAC != -1}">
							AND Cliente.NumPac = ${NUMPAC}
						</j:if>
					</j:if>				
             
                <j:if test="${ORDENACAO != 0}">
					Order By Pessoa.DescNomePessoa
				</j:if>
				<j:if test="${ORDENACAO == 0}">
					 Order By ContaCapital.NumMatricula
				</j:if>
			]]>
		</command>
	</query>	
	<query name="GERAR_REL_RECIBO_DESLIG">
		<use-case name="Gerar relatório Recibo Desligamento"></use-case>
		<description>Gerar relatório Recibo Desligamento</description>
		<command>
			<![CDATA[				
				 SELECT 
				     ContaCapital.NumMatricula, 
				     Pessoa.DescNomePessoa, 
				     ContaCapital.DataMatricula, ContaCapital.DataSaida, 
				     NumPessoa = CASE LEN(convert(char(10),Pessoa.Numpessoa))  
				                    WHEN 0 THEN RTRIM(convert(char(10),Pessoa.NumPessoa))  
				                    ELSE RTRIM(left(convert(char(10),Pessoa.NumPessoa), LEN(RTRIM(convert(char(10),pessoa.NumPessoa)))-1) + '-' + RIGHT(RTRIM(convert(char(10),Pessoa.numPessoa)),1))  
				                 END, 
				     NumConta = dbo.fn_FormataContaCorrente(ContaCapital.NumContaCorrente), 
				     NumCGC_CPF = CASE CodPF_PJ   
				                    WHEN 0 THEN  SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2)   
				                    WHEN 1 THEN  SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END, 
				     Situacao = CASE CodSituacao 
				             WHEN  ${codSituacaoCooperadoAtivo} THEN 'Ativo' 
				             WHEN  ${codSituacaoCooperadoDemitido} THEN 'Demitido' 
				             WHEN  ${codSituacaoCooperadoExcluido} THEN 'Excluído' 
				             WHEN  ${codSituacaoCooperadoEliminado} THEN 'Eliminado' 
				            End 
				    
					 From dbo.ContaCapital 
				     INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa 
				     INNER JOIN dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente 
				     WHERE CodSituacao IN (${codSituacaoCooperadoDemitido}  , ${codSituacaoCooperadoExcluido}  , ${codSituacaoCooperadoEliminado}  ) 
				     AND ContaCapital.NumMatricula =  ${matricula}
			]]>
		</command>
	</query>
	<query name="PESQUISA_DADOS_RELATORIO_MOVIMENTO_DIARIO_AUXILIAR">
		<use-case name="Relatorio Movimento Diário Auxiliar"></use-case>
		<description>Relatorio Movimento Diário Auxiliar</description>
		<command>
			<![CDATA[
				SELECT  
						dbo.fn_FormataContaCorrente(ContaCapital.NumCliente) AS NumCliente,
						LancamentosCCapital.NumMatricula, 
						Pessoa.DescNomePessoa,
						LancamentosCCapital.IDTipoHistoricoLanc,
						LancamentosCCapital.IDTipoHistoricoEstorno,
						TipoHistorico.DescHistorico,
						DescHistorico = Case dbo.TipoHistorico.CodNaturezaOp WHEN '${COD_LANC_OPERACAO_ESTORNO}' 
							THEN TipoHistEst.DescEstornoHist 
							Else dbo.TipoHistorico.DescHistorico END,
						Grupo = CASE TipoHistorico.CodGrupoHist
								   WHEN 1 THEN 'SUBSCRIÇÃO'
								   WHEN 2 THEN 'INTEGRALIZAÇÃO'
								   WHEN 3 THEN 'DEVOLUÇÃO'
							   END,
						LancamentosCCapital.DescNumDocumento ,
						LancamentosCCapital.ValorLanc,
						Right('0000' + LTrim(Str(dbo.LancamentosCCapital.NumLoteLanc)),4) As Lote,
						Right('0000' + LTrim(Str(dbo.LancamentosCCapital.NumSeqLanc)),4) As Seq,
						LancamentosCCapital.DataLote,
						CapaLoteCapital.QtdLancInf,
						CapaLoteCapital.QtdLancApu,
						CapaLoteCapital.ValorTotalLoteInf,
						CapaLoteCapital.ValorTotalLoteApu,
						TipoHistorico.CodNaturezaOp,
						TipoHistorico.QtdDiasBloqueio
				From dbo.LancamentosCCapital
				INNER JOIN dbo.ContaCapital ON ContaCapital.NumMatricula = LancamentosCCapital.NumMatricula
				INNER JOIN dbo.Pessoa ON ContaCapital.NumCliente = Pessoa.NumPessoa
				LEFT JOIN dbo.TipoHistorico ON LancamentosCCapital.IDProduto = TipoHistorico.IDProduto AND
						LancamentosCCapital.IDTipoHistoricoLanc = TipoHistorico.IDTipoHistorico
				LEFT JOIN dbo.TipoHistorico AS TipoHistEst ON LancamentosCCapital.IDProduto = TipoHistEst.IDProduto AND
						LancamentosCCapital.IDTipoHistoricoEstorno = TipoHistEst.IDTipoHistorico
				INNER JOIN dbo.CapaLoteCapital ON CapaLoteCapital.DataLote = LancamentosCCapital.DataLote AND
						CapaLoteCapital.NumLoteLanc = LancamentosCCapital.NumLoteLanc
				WHERE LancamentosCCapital.DataLote BETWEEN '${vo.dtInicialFmt}' AND '${vo.dtFinalFmt}'
				ORDER BY LancamentosCCapital.DataLote,
					   LancamentosCCapital.NumMatricula,
					   LancamentosCCapital.IDTipoHistoricoLanc ,
					   LancamentosCCapital.IDTipoHistoricoEstorno
			]]>
		</command>
	</query>
	
	<query name="PESQUISA_DADOS_RELATORIO_PROVISAO_JUROS">
		<use-case name="Relatório de Provisão de Juros"></use-case>
		<description>Relatório de Provisão de Juros</description>
		<command>
			<![CDATA[
				SELECT 
					a.NumMatricula, 
					c.DescNomePessoa, 
					a.DataInicial,
					a.DataFinalProv, 
					a.ValorSaldoPeriodo, 
					a.ValorProvAberto, 
					a.PercTaxaProv, 
					a.ValorProvisao, 
					Destinado = CASE WHEN a.BolDestinado = 1 then 'X' else '' end, 
					Externo = CASE WHEN a.BolExterno = 1 then 'X' else '' end, 
					d.NumPac, 
					DescPac = cast(d.NumPac as varchar(4)) + ' - ' + e.DescNomeCoop 
				From dbo.ProvisaoJurosCCapital a 
				INNER JOIN dbo.ContaCapital b ON a.NumMatricula = b.NumMatricula 
				INNER JOIN dbo.Pessoa c ON b.NumCliente = c.NumPessoa 
				INNER JOIN dbo.Cliente d ON b.NumCliente = d.NumCliente 
				INNER JOIN dbo.Cooperativa e ON d.NumCooperativa = e.NumCooperativa AND d.NumPac = e.NumPac 
				WHERE 
					a.NumMatricula Between ${vo.matriculaInicial} AND ${vo.matriculaFinal}
					AND a.DataFinalProv BETWEEN '${vo.dataInicialFmt}' AND '${vo.dataFinalFmt}'
					
					<j:choose>
						<j:when test="${vo.situacao == 2}">
							AND a.BolDestinado = 0
						</j:when>
						<j:when test="${vo.situacao == 3}">
							AND a.BolDestinado = 1
						</j:when>
					</j:choose>
					
					<j:choose>
						<j:when test="${vo.origem == 2}">
							AND a.BolExterno = 0
						</j:when>
						<j:when test="${vo.origem == 3}">
							AND a.BolExterno = 1
						</j:when>
					</j:choose>
					
					<j:if test="${vo.numPac >= 0}">
						AND d.NumPac = ${vo.numPac}	
			    	</j:if>			    	
			    					
					<j:choose>
						<j:when test="${vo.ordem == 1}">
							Order By 
							<j:if test="${vo.stPac}">
								d.NumPac,	
					    	</j:if>
							a.NumMatricula, a.DataInicial
						</j:when>
						<j:when test="${vo.ordem == 2}">
							Order By 
							<j:if test="${vo.stPac}">
								d.NumPac,	
					    	</j:if>
							c.DescNomePessoa, a.DataInicial
						</j:when>
					</j:choose>
			]]>
		</command>
	</query>
	<query name="OBTER_DATA_DESTINACAO">
		<use-case name="Obter data destinação"></use-case>
		<description>Obter data destinação</description>
		<command>
			<![CDATA[
				SELECT
					DISTINCT(destinoProvisao.dataDestinacao)
				FROM
					br.com.sicoob.contacapital.comum.negocio.entidades.DestinoProvisao as destinoProvisao
				ORDER BY
					destinoProvisao.dataDestinacao
			]]>
		</command>
	</query>
	<query name="GERAR_REL_FICHA_MATRIC">
		<use-case name="Gerar relatorio ficha Matricula"></use-case>
		<description>Obter dados ficha Matricula</description>
		<command>
			<![CDATA[
				<j:choose>
					<j:when test="${iTipoDocumento == 0}">               
						SELECT ContaCapital.ValorSaldoAtuInteg, ValorLancInteg = (SELECT ValorLanc = SUM(V.ValorLanc) FROM dbo.Viw_CCA_Extrato AS V WHERE V.NumMatricula = ContaCapital.NumMatricula AND  V.CodGrupoHist = ${COD_GRUPO_HIST_INTEGRALIZACAO} And V.BolAtualizado = 0 GROUP BY V.NumMatricula),  
							ContaCapital.ValorSaldoAtuSubsc, ValorLancSubsc = (SELECT ValorLanc = SUM(V.ValorLanc) FROM dbo.Viw_CCA_Extrato AS V WHERE V.NumMatricula = ContaCapital.NumMatricula AND  V.CodGrupoHist = ${COD_GRUPO_HIST_SUBSCRICAO} And V.BolAtualizado = 0 GROUP BY V.NumMatricula),  
							Pessoa.DescNomePessoa,   PessoaFisica.DataNascimento, PessoaFisica.DescNacionalidade,  
							PessoaFisica.DescNaturalidade, PessoaFisica.NumRG, PessoaFisica.DescOrgaoExpRG,  
							PessoaFisica.DescUfOrgExpRG, PessoaFisica.DataEmissaoRG, PessoaFisica.CodEstadoCivil,  
							PessoaFisica.CodTipoSexo, PessoaFisica.codprofissao, ListaItem.desclistaitem, EnderecoPessoa.CodTipoEndereco,  
							EnderecoResidencial = (ISNULL(tl.DescLogradouro, '') +' '+ (SELECT TOP 1 DescEndereco + CASE ISNULL(DescNumero, '') WHEN '' THEN '' ELSE ' ' + DescNumero END + CASE ISNULL(DescComplemento, '') WHEN '' THEN '' ELSE ' ' + DescComplemento END FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa ))  ,  
							BairroResidencial=(SELECT TOP 1 NomeBairro FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa ),  
							CidadeResidencial= (SELECT TOP 1 NomeCidade FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa ),  
							UFResidencial=(SELECT TOP 1 DescUF FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa ),  
							CepResidencial=(SELECT TOP 1 SUBSTRING(RIGHT('00000000' + LTRIM(Str(NumCep)),8),1,2)  + '.' + SUBSTRING(RIGHT('00000000' + LTRIM(Str(NumCEP)),8),3,3)  + '-' + SUBSTRING(RIGHT('00000000' + LTRIM(Str(NumCEP)),8),6,8) FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa ),  
							DDDResidencial =(SELECT TOP 1 NumDDD FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa ),  
							NumTelefoneResidencial = (SELECT TOP 1 NumTelefone FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa ),  
							RamalResidencial = (SELECT TOP 1 NumRamal FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa ),  
							EnderecoComercial = (SELECT TOP 1 DescEndereco + CASE ISNULL(DescNumero, '') WHEN '' THEN '' ELSE ' ' + DescNumero END + CASE ISNULL(DescComplemento, '') WHEN '' THEN '' ELSE ' ' + DescComplemento END FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa ),  
							BairroComercial=(SELECT TOP 1 NomeBairro FROM dbo.EnderecoPessoa WHERE CodtipoEndereco=1 and NumPessoa = Pessoa.NumPessoa ),  
							CidadeComercial= (SELECT TOP 1 NomeCidade FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=1 and numpessoa = Pessoa.NumPessoa ),  
							UFComercial=(SELECT TOP 1 DescUF FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=1 and numpessoa = Pessoa.NumPessoa ),  
							CepComercial=(SELECT TOP 1 SUBSTRING(RIGHT('00000000' + LTrim(STR(NumCep)),8),1,2)  + '.' + SUBSTRING(RIGHT('00000000' + LTRIM(Str(NumCEP)),8),3,3)  + '-' + SUBSTRING(RIGHT('00000000' + LTRIM(Str(NumCEP)),8),6,8) FROM dbo.EnderecoPessoa WHERE CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa),  
							DDDComercial =(SELECT TOP 1 NumDDD FROM dbo.EnderecoPessoa WHERE CodTipoEndereco = 1 and NumPessoa = Pessoa.NumPessoa),  
							NumTelefoneComercial = (SELECT TOP 1 NumTelefone FROM dbo.EnderecoPessoa WHERE CodTipoEndereco = 1 and NumPessoa = Pessoa.NumPessoa),  
							Ramalcomercial = (SELECT TOP 1 NumRamal FROM dbo.EnderecoPessoa WHERE CodTipoEndereco = 1 and NumPessoa = Pessoa.NumPessoa), 
							EnderecoPessoa.BolEnvioCorrespondencia, Pessoa.DescApelidoPessoa,  
							NumCGC_CPF = CASE CodPF_PJ  WHEN ${COD_TIPO_PES_FISICA} THEN  SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2)  WHEN  ${COD_TIPO_PES_JURIDICA} THEN  SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END,  
							Pessoa.NumPessoa,  sNumPessoa = CASE LEN(CONVERT(CHAR(10),Pessoa.Numpessoa)) WHEN 0 THEN  RTRIM(CONVERT(CHAR(10),Pessoa.NumPessoa)) ELSE  RTRIM(left(CONVERT(CHAR(10),Pessoa.NumPessoa), LEN(RTRIM(CONVERT(CHAR(10),pessoa.NumPessoa)))-1) + '-' +  RIGHT(RTRIM(CONVERT(CHAR(10),Pessoa.numPessoa)),1)) END,  
							PessoaJuridica.NumInscEstadual, PessoaJuridica.DataConstituicao, Pessoa.CodPF_PJ,  
							ParcelamentoCCA.NumParcelamento, ParcelamentoCCA.NumParcela, ParcelamentoCCA.DataVencParcela, ParcelamentoCCA.ValorParcela,  
							ModoLanc = CASE ParcelamentoCCA.CodModoLanc  
								WHEN ${COD_MODO_LANCAMENTO_VIA_CAIXA} THEN CONVERT(VARCHAR(40), 'Via Caixa')  
								WHEN ${COD_MODO_LANCAMENTO_VIA_FOLHA} THEN CONVERT(VARCHAR(40), 'Via Folha' +  
											CASE WHEN ParcelamentoCCA.UIDTrabalha IS NULL THEN '' 
											Else ': ' + (SELECT DescMatriculaFunc FROM dbo.Trabalha WHERE Trabalha.UIDTrabalha = ParcelamentoCCA.UIDTrabalha) 
											END)  
								WHEN ${COD_MODO_LANCAMENTO_VIA_COBRANCA} THEN CONVERT(VARCHAR(40), 'Via Cobrança')  
								WHEN ${COD_MODO_LANCAMENTO_VIA_MIGRACAO} THEN CONVERT(VARCHAR(40), 'Via Migração')  
								WHEN ${COD_MODO_LANCAMENTO_VIA_BANCO_CHADMIN} THEN CONVERT(VARCHAR(40), 'Via Banco/Chq. Adm.')  
								WHEN ${COD_MODO_LANCAMENTO_VIA_RATEIO} THEN CONVERT(VARCHAR(40), 'Via Rateio')  
								WHEN ${COD_MODO_LANCAMENTO_VIA_RESERVA} THEN CONVERT(VARCHAR(40), 'Via Reserva')  
								WHEN ${COD_MODO_LANCAMENTO_VIA_CONTA} THEN  
								   CASE WHEN LEN(LTRIM(STR(ParcelamentoCCA.NumContaCorrente))) &lt; 5 THEN  CONVERT(VARCHAR(40), 'Via Conta Corrente: ' + SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 10, 1) )  
										WHEN LEN(LTRIM(STR(ParcelamentoCCA.NumContaCorrente))) &gt; 4 AND LEN(LTRIM(STR(ParcelamentoCCA.NumContaCorrente))) &lt; 8 THEN CONVERT(VARCHAR(40), 'Via Conta Corrente: ' + SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 4, 3) + '.' + SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 10, 1) )  
								ELSE CONVERT(VARCHAR(40), 'Via Conta Corrente: ' + SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 1, 3) + '.' + SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 4, 3) + '.' + SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 7, 3) + '-' + SUBSTRING(STR(ParcelamentoCCA.NumContaCorrente), 10, 1) ) END END,
							Situacao = CASE ParcelamentoCCA.CodSituacaoParcela  
								WHEN ${COD_PARCELA_GERADA} THEN CONVERT(VARCHAR(30), 'Em Aberto')  
								WHEN ${COD_PARCELA_PAGA_VIA_CAIXA} THEN CONVERT(VARCHAR(30), 'Paga Via Caixa')  
								WHEN ${COD_PARCELA_PAGA_VIA_CONTA} THEN CONVERT(VARCHAR(30), 'Paga Via Conta')  
								WHEN ${COD_PARCELA_CANCELADA} THEN CONVERT(VARCHAR(30), 'Cancelada')  
								WHEN ${COD_PARCELA_PAGA_VIA_CHADMIN} THEN CONVERT(VARCHAR(30), 'Paga Via Ch. Admin.')  
								WHEN ${COD_PARCELA_EXCLUIDA} THEN CONVERT(VARCHAR(30), 'Excluída')  
								WHEN ${COD_PARCELA_PAGA_VIA_FOLHA} THEN CONVERT(VARCHAR(30), 'Paga Via Folha')  
								WHEN ${COD_PARCELA_PAGA_VIA_COBRANCA} THEN CONVERT(VARCHAR(30), 'Paga Via Cobrança') 
								WHEN ${COD_PARCELA_PAGA_VIA_RATEIO} THEN CONVERT(VARCHAR(30), 'Paga Via Rateio') 
								WHEN ${COD_PARCELA_PAGA_VIA_RESERVA} THEN CONVERT(VARCHAR(30), 'Paga Via Reserva') 
								WHEN ${COD_PARCELA_PAGA_ANTES_MIGRACAO} THEN CONVERT(VARCHAR(30), 'Paga Antes da Migração') END  
							,CondicaoAssociacao.DescCondicaoAssociacao,
							ISNULL(EC.DESCLISTAITEM, '') AS descEstadoCivil
				
						FROM dbo.ContaCapital  
							LEFT JOIN dbo.ParcelamentoCCA ON ContaCapital.NumMatricula = ParcelamentoCCA.NumMatricula AND CodTipoParcelamento = 1  
							INNER JOIN dbo.Pessoa ON Pessoa.NumPessoa = ContaCapital.NumCliente  
							INNER JOIN dbo.Cliente ON ContaCapital.NumCliente = Cliente.NumCliente  
							lEFT JOIN dbo.PessoaFisica ON Pessoa.NumPessoa = PessoaFisica.NumPessoa  
							INNER JOIN  dbo.EnderecoPessoa ON Pessoa.NumPessoa = EnderecoPessoa.NumPessoa 
							LEFT JOIN dbo.TipoLogradouro AS tl ON EnderecoPessoa.IdTipoLogradouro = tl.IdTipoLogradouro 
							LEFT Join dbo.PessoaJuridica ON dbo.pessoa.NumPessoa = PessoaJuridica.NumPessoa  
							LEFT JOIN  dbo.CondicaoAssociacao ON ContaCapital.IDCondicaoAssociacao = CondicaoAssociacao.IDCondicaoAssociacao  
							LEFT JOIN dbo.listaitem on listaitem.idlista = ${LST_TIPO_PROFISSAO} and listaitem.codlistaitem = PessoaFisica.codprofissao
							LEFT JOIN dbo.ListaItem AS ec ON ec.IdLista = ${LST_TIPO_ESTADO_CIVIL} and ec.codlistaitem = PessoaFisica.CodEstadoCivil  
						WHERE dbo.ContaCapital.NumMatricula = ${matricula}
												  
						ORDER BY EnderecoPessoa.BolEnvioCorrespondencia, ParcelamentoCCA.NumParcelamento, ParcelamentoCCA.NumParcela
					 </j:when>
					 <j:when test="${iTipoDocumento == 1}">
						SELECT Pessoa.DescNomePessoa, PessoaFisica.DataNascimento, PessoaFisica.DescNacionalidade, 
							PessoaFisica.DescNaturalidade, PessoaFisica.NumRG, PessoaFisica.DescOrgaoExpRG, 
							PessoaFisica.DescUfOrgExpRG, PessoaFisica.DataEmissaoRG, PessoaFisica.CodEstadoCivil, 
							PessoaFisica.CodTipoSexo, PessoaFisica.codprofissao, ListaItem.desclistaitem, EnderecoPessoa.CodTipoEndereco, 
							EnderecoResidencial = (ISNULL(tl.DescLogradouro, '') +' '+ (Select top 1 DescEndereco + CASE ISNULL(DescNumero, '') WHEN '' THEN '' ELSE ' ' + DescNumero END + CASE ISNULL(DescComplemento, '') WHEN '' THEN '' ELSE ' ' + DescComplemento END From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa =Pessoa.NumPessoa )) , 
							BairroResidencial=(Select top 1 NomeBairro From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							CidadeResidencial= (Select top 1 NomeCidade From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							UFResidencial=(Select top 1 DescUF From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							CepResidencial=(Select top 1 SubString(Right('00000000' + LTrim(Str(NumCep)),8),1,2) + '.' + SubString(Right('00000000' + LTrim(Str(NumCEP)),8),3,3) + '-' + SubString(Right('00000000' + LTrim(Str(NumCEP)),8),6,8) From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							DDDResidencial =(Select top 1 NumDDD From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							NumTelefoneResidencial = (Select top 1 NumTelefone From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							RamalResidencial = (Select top 1 NumRamal From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							EnderecoComercial = (Select top 1 DescEndereco + CASE ISNULL(DescNumero, '') WHEN '' THEN '' ELSE ' ' + DescNumero END + CASE ISNULL(DescComplemento, '') WHEN '' THEN '' ELSE ' ' + DescComplemento END From dbo.EnderecoPessoa Where CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa) , 
							BairroComercial=(Select top 1 NomeBairro From dbo.EnderecoPessoa Where CodtipoEndereco=1 and NumPessoa = Pessoa.NumPessoa), 
							CidadeComercial= (Select top 1 NomeCidade From dbo.EnderecoPessoa Where CodTipoEndereco=1 and numpessoa = Pessoa.NumPessoa), 
							UFComercial=(Select top 1 DescUF From dbo.EnderecoPessoa Where CodTipoEndereco=1 and numpessoa = Pessoa.NumPessoa), 
							CepComercial=(Select top 1 SubString(Right('00000000' + LTrim(Str(NumCep)),8),1,2) + '.' + SubString(Right('00000000' + LTrim(Str(NumCEP)),8),3,3) + '-' + SubString(Right('00000000' + LTrim(Str(NumCEP)),8),6,8) From dbo.EnderecoPessoa Where CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa), 
							DDDComercial =(Select top 1 NumDDD From dbo.EnderecoPessoa Where CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa), 
							NumTelefoneComercial = (Select top 1 NumTelefone From dbo.EnderecoPessoa Where CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa), 
							Ramalcomercial = (Select top 1 NumRamal From dbo.EnderecoPessoa Where CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa), 
							EnderecoPessoa.BolEnvioCorrespondencia, Pessoa.DescApelidoPessoa, Pessoa.NumPessoa, 
							
							NumCGC_CPF = CASE CodPF_PJ 
											WHEN ${COD_TIPO_PES_FISICA} THEN SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2) 
											WHEN ${COD_TIPO_PES_JURIDICA} THEN SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END, 
							sNumPessoa = CASE LEN(convert(char(10),Pessoa.Numpessoa)) 
												WHEN 0 THEN RTRIM(convert(char(10),Pessoa.NumPessoa)) 
												ELSE RTRIM(left(convert(char(10),Pessoa.NumPessoa), LEN(RTRIM(convert(char(10),pessoa.NumPessoa)))-1) + '-' + RIGHT(RTRIM(convert(char(10),Pessoa.numPessoa)),1)) END, 
							PessoaJuridica.NumInscEstadual, PessoaJuridica.DataConstituicao, Pessoa.CodPF_PJ 
							, CondicaoAssociacao.DescCondicaoAssociacao,
							ISNULL(EC.DESCLISTAITEM, '') AS descEstadoCivil
						FROM dbo.Pessoa 
							INNER JOIN dbo.Cliente ON Pessoa.NumPessoa = Cliente.NumCliente 
							LEFT JOIN dbo.PessoaFisica ON Pessoa.NumPessoa = PessoaFisica.NumPessoa 
							LEFT JOIN dbo.EnderecoPessoa ON Pessoa.NumPessoa = EnderecoPessoa.NumPessoa 
							LEFT JOIN dbo.TipoLogradouro AS tl ON EnderecoPessoa.IdTipoLogradouro = tl.IdTipoLogradouro
							LEFT JOIN dbo.PessoaJuridica on dbo.pessoa.NumPessoa =PessoaJuridica.NumPessoa 
							LEFT JOIN dbo.CondicaoAssociacao ON CodAplicacaoPessoa = Pessoa.CodPF_PJ OR CodAplicacaoPessoa = ${COD_TIPO_AMBAS}
							LEFT JOIN dbo.listaitem on listaitem.idlista = ${LST_TIPO_PROFISSAO} and listaitem.codlistaitem = PessoaFisica.codprofissao 
							LEFT JOIN dbo.ListaItem AS ec ON ec.IdLista = ${LST_TIPO_ESTADO_CIVIL} and ec.codlistaitem = PessoaFisica.CodEstadoCivil  
						WHERE Pessoa.NumPessoa = ${numPessoa}
						 AND CondicaoAssociacao.CodAplicacaoCooperativa &gt; ${iAplicCoopDif}
						ORDER BY EnderecoPessoa.BolEnvioCorrespondencia 
					 </j:when>
					 <j:otherwise>
						SELECT Pessoa.DescNomePessoa, PessoaFisica.DataNascimento, PessoaFisica.DescNacionalidade, 
							PessoaFisica.DescNaturalidade, PessoaFisica.NumRG, PessoaFisica.DescOrgaoExpRG, 
							PessoaFisica.DescUfOrgExpRG, PessoaFisica.DataEmissaoRG, PessoaFisica.CodEstadoCivil, 
							PessoaFisica.CodTipoSexo, PessoaFisica.codprofissao, ListaItem.desclistaitem, EnderecoPessoa.CodTipoEndereco, 
							EnderecoResidencial = (Select top 1 DescEndereco + CASE ISNULL(DescNumero, '') WHEN '' THEN '' ELSE ' ' + DescNumero END + CASE ISNULL(DescComplemento, '') WHEN '' THEN '' ELSE ' ' + DescComplemento END From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa =Pessoa.NumPessoa ) , 
							BairroResidencial=(Select top 1 NomeBairro From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							CidadeResidencial= (Select top 1 NomeCidade From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							UFResidencial=(Select top 1 DescUF From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							CepResidencial=(Select top 1 SubString(Right('00000000' + LTrim(Str(NumCep)),8),1,2) + '.' + SubString(Right('00000000' + LTrim(Str(NumCEP)),8),3,3) + '-' + SubString(Right('00000000' + LTrim(Str(NumCEP)),8),6,8) From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							DDDResidencial =(Select top 1 NumDDD From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							NumTelefoneResidencial = (Select top 1 NumTelefone From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							RamalResidencial = (Select top 1 NumRamal From dbo.EnderecoPessoa Where CodTipoEndereco=0 and NumPessoa = Pessoa.NumPessoa), 
							EnderecoComercial = (Select top 1 DescEndereco + CASE ISNULL(DescNumero, '') WHEN '' THEN '' ELSE ' ' + DescNumero END + CASE ISNULL(DescComplemento, '') WHEN '' THEN '' ELSE ' ' + DescComplemento END From dbo.EnderecoPessoa Where CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa) , 
							BairroComercial=(Select top 1 NomeBairro From dbo.EnderecoPessoa Where CodtipoEndereco=1 and NumPessoa = Pessoa.NumPessoa), 
							CidadeComercial= (Select top 1 NomeCidade From dbo.EnderecoPessoa Where CodTipoEndereco=1 and numpessoa = Pessoa.NumPessoa), 
							UFComercial=(Select top 1 DescUF From dbo.EnderecoPessoa Where CodTipoEndereco=1 and numpessoa = Pessoa.NumPessoa), 
							CepComercial=(Select top 1 SubString(Right('00000000' + LTrim(Str(NumCep)),8),1,2) + '.' + SubString(Right('00000000' + LTrim(Str(NumCEP)),8),3,3) + '-' + SubString(Right('00000000' + LTrim(Str(NumCEP)),8),6,8) From dbo.EnderecoPessoa Where CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa), 
							DDDComercial =(Select top 1 NumDDD From dbo.EnderecoPessoa Where CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa), 
							NumTelefoneComercial = (Select top 1 NumTelefone From dbo.EnderecoPessoa Where CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa), 
							Ramalcomercial = (Select top 1 NumRamal From dbo.EnderecoPessoa Where CodTipoEndereco=1 and NumPessoa = Pessoa.NumPessoa), 
							EnderecoPessoa.BolEnvioCorrespondencia, Pessoa.DescApelidoPessoa, Pessoa.NumPessoa, 
							
							NumCGC_CPF = CASE CodPF_PJ 
								WHEN ${COD_TIPO_PES_FISICA} THEN SUBSTRING(NumCGC_CPF,1,3) + '.' + SUBSTRING(NumCGC_CPF,4,3) + '.' + SUBSTRING(NumCGC_CPF,7,3) + '-' + SUBSTRING(NumCGC_CPF,10,2) 
								WHEN ${COD_TIPO_PES_JURIDICA} THEN SUBSTRING(NumCGC_CPF,1,2) + '.' + SUBSTRING(NumCGC_CPF,3,3) + '.' + SUBSTRING(NumCGC_CPF,6,3) + '/' + SUBSTRING(NumCGC_CPF,9,4) + '-' + SUBSTRING(NumCGC_CPF,13,2) END, 
							sNumPessoa = CASE LEN(convert(char(10),Pessoa.Numpessoa)) 
								WHEN 0 THEN RTRIM(convert(char(10),Pessoa.NumPessoa)) 
								ELSE RTRIM(left(convert(char(10),Pessoa.NumPessoa), LEN(RTRIM(convert(char(10),pessoa.NumPessoa)))-1) + '-' + RIGHT(RTRIM(convert(char(10),Pessoa.numPessoa)),1)) END, 
							PessoaJuridica.NumInscEstadual, PessoaJuridica.DataConstituicao, Pessoa.CodPF_PJ 
							, DescCondicaoAssociacao = '' 
						FROM dbo.Pessoa 
						INNER JOIN dbo.Cliente ON Pessoa.NumPessoa = Cliente.NumCliente 
						LEFT JOIN dbo.PessoaFisica ON Pessoa.NumPessoa = PessoaFisica.NumPessoa 
						INNER JOIN dbo.EnderecoPessoa ON Pessoa.NumPessoa = EnderecoPessoa.NumPessoa 
						LEFT JOIN dbo.PessoaJuridica on dbo.pessoa.NumPessoa =PessoaJuridica.NumPessoa 
						LEFT JOIN dbo.listaitem on listaitem.idlista = ${LST_TIPO_PROFISSAO} and listaitem.codlistaitem = PessoaFisica.codprofissao 
						WHERE Pessoa.NumPessoa = ${numPessoa}
						ORDER BY EnderecoPessoa.BolEnvioCorrespondencia 
					 </j:otherwise>
				</j:choose>
			]]>
		</command>
	</query>
	
	<query name="OBTER_DADOS_RELATORIO_DESTINACAO_JUROS">
		<use-case name="Obter dados relatório de destinaçao de juros"></use-case>
		<description>Obter dados relatório de destinaçao de juros</description>
		<command>
			<![CDATA[
SELECT 
	a.NumMatricula, 
	c.DescNomePessoa, 
	DataInicial = 
		SUBSTRING(convert(varchar, a.NumAnoMesInicial), 5, 2) + '/' + 
		SUBSTRING(convert(varchar, a.NumAnoMesInicial), 1, 4),  
	DataFinal = CASE 
		WHEN (a.NumAnoMesFinal = 0) or (a.NumAnoMesFinal = Null) THEN 
			Null                   
		ELSE 
			SUBSTRING(convert(varchar, a.NumAnoMesFinal), 5, 2) + '/' + 
			SUBSTRING(convert(varchar, a.NumAnoMesFinal), 1, 4) 
		END,  
	a.DataDestinacao, 
	a.ValorDestIR, 
	a.ValorDestCCA, 
	a.ValorDestCCO, 
	NumContaCorrente = dbo.fn_FormataContaCorrente(a.NumContaCorrente), 
	d.NumPac, 
	DescPac = 
		cast(d.NumPac as varchar(4)) + ' - ' + e.DescNomeCoop  
From 
	dbo.DestinoProvisao a INNER JOIN 
	dbo.ContaCapital b ON a.NumMatricula = b.NumMatricula INNER JOIN 
	dbo.Pessoa c ON b.NumCliente = c.NumPessoa INNER JOIN 
	dbo.Cliente d ON b.NumCliente = d.NumCliente INNER JOIN 
	dbo.Cooperativa e ON d.NumCooperativa = e.NumCooperativa AND 
	d.NumPac = e.NumPac 
WHERE 
	a.NumMatricula Between ${numMatriculaInicial} AND ${numMatriculaFinal} AND 
	a.NumAnoMesInicial &gt;= ${numAnoMesInicial} AND  a.NumAnoMesFinal &lt;= ${numAnoMesFinal} 
	
<j:if test="${dataDestinacaoFormatada != null}">
	AND a.DataDestinacao = '${dataDestinacaoFormatada}'
</j:if>

<j:if test="${numPac != null}">
	And d.NumPac = ${numPac}
</j:if>
	
<j:choose>
	<j:when test="${ordenacao == 1}">
		Order By a.NumMatricula, a.DataDestinacao
	</j:when>
	<j:when test="${ordenacao == 2}">
		Order By c.DescNomePessoa, a.DataDestinacao
	</j:when>
	<j:when test="${ordenacao == 3}">
		Order By a.DataDestinacao, a.NumMatricula
	</j:when>
</j:choose>
			]]>
		</command>
	</query>
	<query name="PESQUISA_DADOS_REL_REMESSA_CAP_CONSIGNADO_PREPARADAS">
		<use-case name="Relatório Remessa de Capital Consignado"></use-case>
		<description>Remessas Preparadas</description>
		<command>
			<![CDATA[
				SELECT 
					FRD.NumPessoaJuridica, 
					PessoaJuridica = dbo.Fn_FormataContaCorrente(FRD.NumPessoaJuridica) + ' - ' + PESJUR.DescNomePessoa, 
					CCA.NumMatricula, 
					NumCliente = dbo.Fn_FormataContaCorrente(CCA.NumCliente), 
					P.DescNomePessoa, 
					T.DescMatriculaFunc,
					Descricao = CASE WHEN NumParcelamento = 0 then 'Déb. Indet.' + 
								CASE CCA.CodFormaDeb 
									WHEN ${COD_MODO_LANCAMENTO_VIA_FOLHA} THEN '-FOLHA' 
									WHEN ${COD_MODO_LANCAMENTO_VIA_BANCO_CHADMIN} THEN '-BANCO' END 
								Else 'Parcela: ' + ltrim(str(NumParcelamento)) + '-' + ltrim(str(NumParcela)) end, 
					ValorDesconto, 
					ValorRetornoArq, 
					CodSituacaoRetorno, 
					SituacaoRetorno = replace(LF.DescListaItem, 'BAIXADO VALOR', 'B. VLR') 
				From dbo.COR_FolhaRemessadetalhe FRD 
				Inner Join dbo.ContaCapital CCA ON FRD.IdentNegocio = convert(varchar(50), CCA.NumMatricula) 
				INNER JOIN dbo.Cliente CLI ON FRD.NumCliente = CLI.NumCliente 
				Inner Join dbo.Pessoa P On P.NumPessoa = FRD.NumCliente 
				Inner Join dbo.Trabalha T On FRD.NumCliente = T.NumPessoaFisica AND FRD.UIDTrabalha = T.UIDTrabalha
				Inner Join dbo.Pessoa PESJUR On PESJUR.NumPessoa = FRD.NumPessoaJuridica 
				Inner Join dbo.listaitem LF on LF.idlista = ${LST_SIT_RETORNO_FOLHA} and LF.CodListaItem = FRD.CodSituacaoRetorno 
				Inner Join dbo.COR_FolhaRemessa CFR On FRD.NumPessoaJuridica = CFR.NumPessoaJuridica AND FRD.IdRemessa = CFR.IdRemessa 
				Where FRD.IdProduto = ${PRODUTO_CONTA_CAPITAL} 
				AND FRD.IdModalidadeProduto = 1 
				AND FRD.CodTipoDetalhe = ${COD_LST_TIPO_DETALHE_REMESSA_CCA}
				AND FRD.NumPessoaJuridica between ${vo.empresaInicial} and ${vo.empresaFinal}
				AND CFR.AnoRef = ${vo.numAno} 
				AND CFR.MesRef = ${vo.numMes}        
				AND CCA.NumMatricula between ${vo.matriculaInicial} AND ${vo.matriculaFinal}				
				<j:if test="${vo.numPac >= 0}">
					AND CLI.NumPac = ${vo.numPac}	
		    	</j:if>	
				<j:if test="${vo.situacao != null and vo.situacao >= 0}">
					AND FRD.CodSituacaoRetorno = ${vo.situacao}
		    	</j:if>		
		    	Order By FRD.NumPessoaJuridica			
				<j:choose>
					<j:when test="${vo.ordem == 1}">
						,CCA.NumMatricula										
					</j:when>
					<j:when test="${vo.ordem == 2}">
						,P.DescNomePessoa											
					</j:when>
					<j:when test="${vo.ordem == 3}">
						,CCA.NumCliente											
					</j:when>
					<j:when test="${vo.ordem == 4}">
						,T.DescMatriculaFunc											
					</j:when>
				</j:choose>
			]]>
		</command>
	</query>
	<query name="PESQUISA_DADOS_REL_REMESSA_CAP_CONSIGNADO_A_PREPERAR">
		<use-case name="Relatório Remessa de Capital Consignado"></use-case>
		<description>Remessas a Preparar</description>
		<command>
			<![CDATA[
				Select 
					NumPessoaJuridica, 
					NumMatricula, 
					DescNomePessoa, 
					DescMatriculaFunc, 
					Descricao = replace(Descricao, 'PERCENTUAL DE SALÁRIO', '% SAL.'), 
					Valor, 
					ValorRemessa, 
					PessoaJuridica, 
					NumCliente, 
					NumPac 
				FROM (
				SELECT 
					LF.NumPessoaJuridica, CCA.NumMatricula, P.DescNomePessoa, T.DescMatriculaFunc, 
					Descricao = CASE CCA.CodFormaDeb 
								WHEN ${COD_MODO_LANCAMENTO_VIA_FOLHA} THEN 'FOLHA - ' 
								WHEN ${COD_MODO_LANCAMENTO_VIA_BANCO_CHADMIN} THEN 'BANCO - ' END 
				             + LI.DescListaItem, 
					Valor = CCA.ValorDeb, 
					ValorRemessa = ROUND( Case when isnull(CCA.ValorDeb,0) = 0 then 0 
				             When VC.BolLimIntegralCapConsignado = 1 
				             then 
				             Case CCA.CodTipoValorDebito 
				             When ${COD_LST_TIPO_DEB_VALOR} then 
					             	Case when CCA.ValorDeb &lt; VC.ValorLimiteIntegralMinimo then VC.ValorLimiteIntegralMinimo 
					             	when CCA.ValorDeb &gt; VC.ValorLimiteIntegralMaximo then VC.ValorLimiteIntegralMaximo 
				              	else CCA.ValorDeb end 
				             When ${COD_LST_TIPO_DEB_PERC_SALARIO_RENDA} then Case when R.ReceitaBrutaMensal is null then 0 
				               when CCA.ValorDeb * R.ReceitaBrutaMensal /100 &lt; VC.ValorLimiteIntegralMinimo then VC.ValorLimiteIntegralMinimo 
				               when CCA.ValorDeb * R.ReceitaBrutaMensal /100 &gt; VC.ValorLimiteIntegralMaximo then VC.ValorLimiteIntegralMaximo 
				              else CCA.ValorDeb * R.ReceitaBrutaMensal /100 end 
				             When ${COD_LST_TIPO_DEB_PERC_SALARIO_BASE} then Case when VC.ValorSalarioBase is null then 0 
				               when CCA.ValorDeb * VC.ValorSalarioBase /100 &lt; VC.ValorLimiteIntegralMinimo then VC.ValorLimiteIntegralMinimo 
				               when CCA.ValorDeb * VC.ValorSalarioBase /100 &gt; VC.ValorLimiteIntegralMaximo then VC.ValorLimiteIntegralMaximo 
				              else CCA.ValorDeb * VC.ValorSalarioBase /100 end 
				             When ${COD_LST_TIPO_DEB_QTD_COTAS} then Case when VC.ValorCota is null then 0 
				               when CCA.ValorDeb * VC.ValorCota &lt; VC.ValorLimiteIntegralMinimo then VC.ValorLimiteIntegralMinimo 
				               when CCA.ValorDeb * VC.ValorCota &gt; VC.ValorLimiteIntegralMaximo then VC.ValorLimiteIntegralMaximo 
				              else CCA.ValorDeb * VC.ValorCota end 
				             Else 0 end 
				             Else 
				             Case CCA.CodTipoValorDebito 
				             When ${COD_LST_TIPO_DEB_VALOR} then CCA.ValorDeb 
				             When ${COD_LST_TIPO_DEB_PERC_SALARIO_RENDA} then CCA.ValorDeb * isnull(R.ReceitaBrutaMensal,0) /100 
				             When ${COD_LST_TIPO_DEB_PERC_SALARIO_BASE} then CCA.ValorDeb * isnull(VC.ValorSalarioBase,0) /100 
				             When ${COD_LST_TIPO_DEB_QTD_COTAS} then CCA.ValorDeb * isnull(VC.ValorCota,0) 
				             Else 0 end 
				             End ,2), 
					PessoaJuridica = dbo.Fn_FormataContaCorrente(LF.NumPessoaJuridica) + ' - ' + PESJUR.DescNomePessoa, 
					NumCliente = dbo.Fn_FormataContaCorrente(CCA.NumCliente), 
					CLI.NumPac 
				From dbo.ContaCapital CCA 
				Inner Join dbo.Pessoa P On P.NumPessoa = CCA.NumCliente 
				INNER JOIN dbo.Cliente CLI ON CCA.NumCliente = CLI.NumCliente 
				left Join dbo.Trabalha T On CCA.NumCliente = T.NumPessoaFisica and T.CodSitFuncionario = 0
				Inner Join dbo.LancFolhaPJ LF On T.NumPessoaJuridica = LF.NumPessoaJuridica 
				Inner Join dbo.Pessoa PESJUR On PESJUR.NumPessoa = LF.NumPessoaJuridica 
				left JOIN dbo.FonteRenda R ON R.NumPessoaJuridica = T.NumPessoaJuridica and R.NumPessoa = T.NumPessoaFisica 
				   and R.CodFonteRenda = 0 and R.BolConjuge = 0 and CCA.CodTipoValorDebito = ${COD_LST_TIPO_DEB_PERC_SALARIO_RENDA} 
				left JOIN dbo.ValorCotas VC on 
				   DataInicialCota in (SELECT TOP 1 DataInicialCota From dbo.ValorCotas 
				               Where (DataInicialCota &lt;= '${dataAtual}') 
				               ORDER BY DataInicialCota DESC) 
				Inner Join dbo.listaitem LI on LI.idlista = ${LST_TIPO_VALOR_DEBITO_CCA} and LI.CodListaItem = CCA.CodTipoValorDebito 
				Where CCA.CodSituacao =  ${COD_SITUACAO_COOPERADO_ATIVO}  
					And bolDebIndeterminado = 1 
					And CCA.CodFormaDeb in (${COD_MODO_LANCAMENTO_VIA_FOLHA} , ${COD_MODO_LANCAMENTO_VIA_BANCO_CHADMIN}) 
					and CCA.DataVencimentoDeb &lt;=  '${dataAux}' 
					AND LF.NumPessoaJuridica between ${vo.empresaInicial} and ${vo.empresaFinal}  
				UNION ALL 
				SELECT T.NumPessoaJuridica, PAR.NumMatricula, 
				    P.DescNomePessoa, T.DescMatriculaFunc, 
				    Descricao = right(replicate ('0',4) + cast(PAR.NumParcelamento as varchar),4) 
							+ '-' + right(replicate ('0',4) + cast(PAR.NumParcela as varchar),4), 
				    Valor = PAR.ValorParcela, ValorRemessa = ROUND( PAR.ValorParcela ,2), 
					PessoaJuridica = dbo.Fn_FormataContaCorrente(LF.NumPessoaJuridica) + ' - ' + PESJUR.DescNomePessoa, 
				NumCliente = dbo.Fn_FormataContaCorrente(CCA.NumCliente), 
				CLI.NumPac 
				FROM dbo.ParcelamentoCCA PAR 
				Inner Join dbo.ContaCapital CCA On PAR.NumMatricula = CCA.NumMatricula 
				Inner Join dbo.Pessoa P On P.NumPessoa = CCA.NumCliente 
				INNER JOIN dbo.Cliente CLI ON CCA.NumCliente = CLI.NumCliente 
				Inner Join dbo.Trabalha T On CCA.NumCliente = T.NumPessoaFisica And T.UIDTrabalha = PAR.UIDTrabalha and T.CodSitFuncionario = 0
				Inner Join dbo.LancFolhaPJ LF On T.NumPessoaJuridica = LF.NumPessoaJuridica 
				Inner Join dbo.Pessoa PESJUR On PESJUR.NumPessoa = LF.NumPessoaJuridica 
				Where PAR.CodModoLanc = ${COD_MODO_LANCAMENTO_VIA_FOLHA} 
					And PAR.CodSituacaoParcela = ${COD_PARCELA_GERADA} 
					And PAR.CodTipoParcelamento = ${COD_TIPO_PARCELAMENTO_INTEGRAL} 
					and year(PAR.DataVencParcela) = ${vo.numAno} 
					and month(PAR.DataVencParcela) = ${vo.numMes} 
					and CCA.CodSituacao = ${COD_SITUACAO_COOPERADO_ATIVO} 
					AND T.NumPessoaJuridica between ${vo.empresaInicial} and ${vo.empresaFinal}
				Union All 
				SELECT D.NumPessoaJuridica, CCA.NumMatricula, 
				    P.DescNomePessoa, T.DescMatriculaFunc, 
				    Descricao = 'Diferença ' + cast(R.MesRef as varchar) + '/' + cast(R.AnoRef as varchar), 
				    Valor = isnull(D.ValorDesconto,0) - isnull(D.ValorRetornoArq,0), 
					ValorRemessa = ROUND( isnull(D.ValorDesconto,0) - isnull(D.ValorRetornoArq,0) ,2), 
					PessoaJuridica = dbo.Fn_FormataContaCorrente(LF.NumPessoaJuridica) + ' - ' + PESJUR.DescNomePessoa, 
					NumCliente = dbo.Fn_FormataContaCorrente(CCA.NumCliente), 
					CLI.NumPac 
				FROM dbo.COR_FolhaRemessaDetalhe D 
				INNER JOIN dbo.COR_FolhaRemessa R ON D.IdRemessa = R.IdRemessa and D.NumPessoaJuridica = R.NumPessoaJuridica 
				Inner Join dbo.ContaCapital CCA On cast(D.IdentNegocio as int) = CCA.NumMatricula 
				Inner Join dbo.Pessoa P On P.NumPessoa = CCA.NumCliente 
				INNER JOIN dbo.Cliente CLI ON CCA.NumCliente = CLI.NumCliente 
				Inner Join dbo.Trabalha T On CCA.NumCliente = T.NumPessoaFisica  And T.NumPessoaJuridica = D.NumPessoaJuridica and T.CodSitFuncionario = 0
				Inner Join dbo.LancFolhaPJ LF On T.NumPessoaJuridica = LF.NumPessoaJuridica and LF.bolIgnoraResiduoCapital = 0 
				Inner Join dbo.Pessoa PESJUR On PESJUR.NumPessoa = LF.NumPessoaJuridica 
				WHERE D.IdProduto = ${PRODUTO_CONTA_CAPITAL} 
					and D.CodSituacaoRetorno = ${COD_LST_SIT_RETORNO_FOLHA_BAIXADO_MENOR} 
					and D.NumParcelamento = 0 
					and R.AnoRef = ${anoAux} 
					and R.MesRef = ${mesAux}
					and CCA.CodSituacao = ${COD_SITUACAO_COOPERADO_ATIVO} 
					AND D.NumPessoaJuridica between ${vo.empresaInicial} and ${vo.empresaFinal} 
				) AS TUDO WHERE ValorRemessa &lt;&gt; 0 
					AND NumMatricula between ${vo.matriculaInicial} AND ${vo.matriculaFinal}
				<j:if test="${vo.numPac >= 0}">
					AND NumPac = ${vo.numPac}	
		    	</j:if>		
		    	Order By NumPessoaJuridica				
				<j:choose>
					<j:when test="${vo.ordem == 1}">
						,NumMatricula										
					</j:when>
					<j:when test="${vo.ordem == 2}">
						,DescNomePessoa											
					</j:when>
					<j:when test="${vo.ordem == 3}">
						,NumCliente											
					</j:when>
					<j:when test="${vo.ordem == 4}">
						,DescMatriculaFunc											
					</j:when>
				</j:choose>
			]]>
		</command>
	</query>
	
	<query name="DADOS_RELATORIO_INTEGRALIZACAO_VOLUNTARIA">
		<use-case name="GerarRelFrmIntegrVoluntaria"></use-case>
		<description>GerarRelFrmIntegrVoluntaria</description>
		<command>
			<![CDATA[
				Select Top 1 Matricula=LTRIM(STR(${vo.numMatriculaInicial})),
                NumMatricula=${vo.numMatriculaInicial}, c.DescNomePessoa, NumParcelamento = 98,
                Parcelamento='98', NumParcela=0, Parcela='00', 
                NumCGC_CPF = CASE c.CodPF_PJ  
						WHEN 0 THEN  
							SUBSTRING(c.NumCGC_CPF,1,3) + '.' + SUBSTRING(c.NumCGC_CPF,4,3) + '.' + SUBSTRING(c.NumCGC_CPF,7,3) + '-' + SUBSTRING(c.NumCGC_CPF,10,2) 
						WHEN 1 THEN 
							SUBSTRING(c.NumCGC_CPF,1,2) + '.' + SUBSTRING(c.NumCGC_CPF,3,3) + '.' + SUBSTRING(c.NumCGC_CPF,6,3) + '/' + SUBSTRING(c.NumCGC_CPF,9,4) + '-' + SUBSTRING(c.NumCGC_CPF,13,2) 
					END, 
                DataVencParcela= '${vo.dtFinal}',
                CodSituacaoParcela=${COD_PARCELA_GERADA},
                ValorParcela=${vo.valorParcela},
                CodModoLanc= ${COD_MODO_LANCAMENTO_VIA_CAIXA},
                CodTipoParcelamento= ${COD_TIPO_PARCELAMENTO_INTEGRAL}, 
                TipoParcelamento = '1 - INTEGRALIZAÇÃO'
                From ParcelamentoCCA a
                INNER JOIN ContaCapital b ON a.NumMatricula = b.NumMatricula 
                INNER JOIN Pessoa c ON b.NumCliente = c.NumPessoa 
                INNER JOIN Cliente d ON b.NumCliente = d.NumCliente 
                Where a.NumMatricula = ${vo.numMatriculaInicial}
                <j:if test="${vo.numPac != null}">
					<j:if test="${vo.numPac != -1}">
						 And d.NumPac = ${vo.numPac}
					</j:if>
				</j:if>	
			]]>
		</command>
	</query>
	<query name="PESQUISA_SE_EMPRESA_PREP_REMESSA">
		<use-case name="Relatorio capital consignado"></use-case>
		<description>Verificar se a empresa já teve ou não preparação de Remessas</description>
		<command>
			<![CDATA[
				SELECT LPJ.NumPessoaJuridica from dbo.LancFolhaPJ LPJ 
				inner join dbo.COR_FolhaRemessa FR 
					on FR.NumPessoaJuridica = LPJ.NumPessoaJuridica 
				AND AnoRef = ${ano} AND MesRef = ${mes}
				Where LPJ.NumPessoaJuridica = ${numPessoaJuridica}
			]]>
		</command>
	</query>
	<query name="DADOS_RELATORIO_DE_OPERACOES_FINANCEIRAS">
		<use-case name="Relatório de Operações Financeiras"></use-case>
		<description>Relatório de Operações Financeiras</description>
		<command>
			<![CDATA[
SELECT 
	dbo.OperacaoFinanceira.IDOpFinanceira, 
	dbo.OperacaoFinanceira.DataProcessamento, 
	dbo.TipoValorContabilizar.DescTipoValorCont AS TipoValor, 
	dbo.ValorOpFin.ValorArgumento, 
	dbo.ModalidadeProduto.DescModalidadeProduto, 
	dbo.Produto.DescProduto, 
	dbo.Operacao.DescOperacao AS Operacao,  
	dbo.OperacaoFinanceira.CodStatusOpFin AS Situacao, 
	dbo.OperacaoFinanceira.DataOPFinanceira  
FROM 
	dbo.OperacaoFinanceira INNER JOIN 
	dbo.ValorOpFin ON  dbo.OperacaoFinanceira.IDOpFinanceira = dbo.ValorOpFin.IDOpFinanceira Inner Join  
	dbo.TipoValorContabilizar ON dbo.ValorOpFin.IDTipoValorCont = dbo.TipoValorContabilizar.IDTipoValorCont Inner Join  
	dbo.ModalidadeProduto ON dbo.OperacaoFinanceira.IDProduto = dbo.ModalidadeProduto.IDProduto  AND 
	dbo.OperacaoFinanceira.IDModalidadeProduto = dbo.ModalidadeProduto.IDModalidadeProduto  Inner Join 
	dbo.Produto ON dbo.ModalidadeProduto.IDProduto = dbo.Produto.IDProduto INNER  Join 
	dbo.Operacao ON  dbo.OperacaoFinanceira.IDProduto = dbo.Operacao.IDProduto AND  
	dbo.OperacaoFinanceira.IDOperacao = dbo.Operacao.IDOperacao  AND 
	dbo.Produto.IDProduto = dbo.Operacao.IDProduto  
Where 
	DataOPFinanceira = '${dataOperacaoFinanceira}'  And Operacao.IDProduto = ${idProduto}
			]]>
		</command>
	</query>
	
	<query name="OBTER_DADOS_RELATORIO_RECOLHIMENTO_IRRF_DESTINACAO_JUROS">
		<use-case name="Obter dados relatório de destinaçao de juros"></use-case>
		<description>Obter dados relatório de destinaçao de juros</description>
		<command>
			<![CDATA[
				SELECT
					a.NumMatricula,
					c.DescNomePessoa,
					NumCliente = CASE WHEN (b.NumCliente = 0) or (b.NumCliente = Null) THEN NULL WHEN LEN(LTRIM(STR(b.NumCliente))) = 1 THEN STR(b.NumCliente) Else rtrim(left(STR(b.NumCliente), len(rtrim(STR(b.NumCliente)))-1)+ '-' + right(rtrim(STR(b.NumCliente)),1)) END,
					DataInicial = SUBSTRING(convert(varchar, a.NumAnoMesInicial), 5, 2) + '/' + SUBSTRING(convert(varchar, a.NumAnoMesInicial), 1, 4),
					a.DataDestinacao,
					ValorDestinado = a.ValorDestIR + a.ValorDestCCA + a.ValorDestCCO,
					a.ValorDestIR,
					d.NumPac,
					DescPac = cast(d.NumPac as varchar(4)) + ' - ' + e.DescNomeCoop
				From 
					dbo.DestinoProvisao a
				INNER JOIN dbo.ContaCapital b ON a.NumMatricula = b.NumMatricula
				INNER JOIN dbo.Pessoa c ON b.NumCliente = c.NumPessoa
				INNER JOIN dbo.Cliente d ON b.NumCliente = d.NumCliente
				INNER JOIN dbo.Cooperativa e ON d.NumCooperativa = e.NumCooperativa
				AND d.NumPac = e.NumPac
				WHERE 
					a.NumMatricula Between ${matriculaInicial} AND ${matriculaFinal}
				AND 
					a.NumAnoMesInicial &gt;= ${dataInicial}
				AND 
					a.NumAnoMesFinal  &lt;= ${dataFinal}
				
				<j:if test="${dataDestinacao != null}">
					AND a.DataDestinacao = '${dataDestinacao}'
				</j:if>
				
				<j:if test="${numPac != null}">
					<j:if test="${numPac != -1}">
						And d.NumPac = ${numPac}
					</j:if>
				</j:if>


				<j:choose>
					<j:when test="${quebraPorPac}">							
						<j:choose>
							<j:when test="${ordenacao == 1}">
								Order By d.NumPac, a.NumMatricula, a.NumAnoMesInicial
							</j:when>
							<j:when test="${ordenacao == 2}">
								Order By d.NumPac, b.NumCliente, a.NumAnoMesInicial
							</j:when>
							<j:when test="${ordenacao == 3}">
								Order By d.NumPac, c.DescNomePessoa, a.NumAnoMesInicial
							</j:when>
						</j:choose>					
					</j:when>
					<j:otherwise>							
						<j:choose>
							<j:when test="${ordenacao == 1}">
								Order By a.NumMatricula, a.NumAnoMesInicial
							</j:when>
							<j:when test="${ordenacao == 2}">
								Order By b.NumCliente, a.NumAnoMesInicial
							</j:when>
							<j:when test="${ordenacao == 3}">
								Order By c.DescNomePessoa, a.NumAnoMesInicial
							</j:when>
						</j:choose>
					</j:otherwise>	
				</j:choose>		

				
			]]>
		</command>
	</query>
	
		<query name="DADOS_RELATORIO_PARCELAMENTO_CCA">
		<use-case name="GerarRelFrmIntegrVoluntaria"></use-case>
		<description>GerarRelFrmIntegrVoluntaria</description>
		<command>
			<![CDATA[
				Select CONVERT(VarChar(8), a.NumMatricula) as Matricula, 
			         a.NumMatricula, c.DescNomePessoa, a.NumParcelamento, a.NumParcela, 
			         a.CodTipoParcelamento, a.DataVencParcela, a.DataSituacaoParcela, 
			         a.ValorParcela, a.CodModoLanc, 
			         ModoLancamento = Case a.CodModoLanc WHEN ${COD_MODO_LANCAMENTO_VIA_CAIXA}   THEN 'VIA CAIXA' 
			         WHEN ${COD_MODO_LANCAMENTO_VIA_CONTA}  THEN 'VIA CONTA CORRENTE' 
			         WHEN ${COD_MODO_LANCAMENTO_VIA_FOLHA}  THEN 'VIA FOLHA' + 
			                                    CASE WHEN a.UIDTrabalha IS NULL THEN ''
			                                    Else  (SELECT DescMatriculaFunc FROM dbo.Trabalha WHERE Trabalha.UIDTrabalha = a.UIDTrabalha)
			                                    END 
			         WHEN  ${COD_MODO_LANCAMENTO_VIA_MIGRACAO}  THEN 'VIA MIGRAÇÃO' 
			         WHEN  ${COD_MODO_LANCAMENTO_VIA_BANCO_CHADMIN}  THEN 'VIA BANCO/CHQ. ADM.' 
			         WHEN  ${COD_MODO_LANCAMENTO_VIA_RATEIO}  THEN 'VIA RATEIO' 
			         WHEN  ${COD_MODO_LANCAMENTO_VIA_RESERVA}  THEN 'VIA RESERVA' 
			         WHEN  ${COD_MODO_LANCAMENTO_VIA_COBRANCA}  THEN 'VIA COBRANÇA' END, 
			         a.CodSituacaoParcela,
		 
			
		        Situacao = CASE a.CodSituacaoParcela WHEN ${COD_PARCELA_GERADA}THEN 'EM ABERTO' 
		         WHEN ${COD_PARCELA_PAGA_VIA_CAIXA} THEN 'PAGA VIA CAIXA' 
		         WHEN ${COD_PARCELA_PAGA_VIA_CONTA} THEN 'PAGA VIA CONTA CORRENTE' 
		         WHEN ${COD_PARCELA_PAGA_VIA_COBRANCA} THEN 'PAGA VIA COBRANÇA'
		         WHEN ${COD_PARCELA_PAGA_ANTES_MIGRACAO} THEN 'PAGA ANTES MIGRAÇÃO' 
		         WHEN ${COD_PARCELA_CANCELADA} THEN 'CANCELADA' 
		         WHEN ${COD_PARCELA_PAGA_VIA_CHADMIN} THEN 'PAGA VIA BANCO/CHQ. ADM.' 
		         WHEN ${COD_PARCELA_PAGA_VIA_RATEIO} THEN 'PAGA VIA RATEIO' 
		         WHEN ${COD_PARCELA_PAGA_VIA_RESERVA} THEN 'PAGA VIA RESERVA' 
		         WHEN ${COD_PARCELA_PAGA_VIA_FOLHA} THEN 'PAGA VIA FOLHA'
		         WHEN ${COD_PARCELA_EXCLUIDA} THEN 'EXCLUÍDA'
		         Else 'OUTRA' 
		         END, a.NumContaCorrente, 
				 
					  CCMascarada = CASE WHEN (a.NumContaCorrente = 0) or (a.NumContaCorrente = Null) THEN Null  
			                WHEN LEN(LTRIM(STR(a.NumContaCorrente))) &gt; 0 AND 
			                LEN(LTRIM(STR(a.NumContaCorrente))) &lt; 5 THEN 
			                SUBSTRING(STR(a.NumContaCorrente), 7, 3)  + '-' + 
			                SUBSTRING(STR(a.NumContaCorrente), 10, 1) 
			                WHEN LEN(LTRIM(STR(a.NumContaCorrente))) &gt; 4 AND 
			                LEN(LTRIM(STR(a.NumContaCorrente))) &lt; 8 THEN 
			                SUBSTRING(STR(a.NumContaCorrente), 4, 3)  + '.' + 
			                SUBSTRING(STR(a.NumContaCorrente), 7, 3)  + '-' + 
			                SUBSTRING(STR(a.NumContaCorrente), 10, 1)  ELSE 
			                SUBSTRING(STR(a.NumContaCorrente), 1, 3)  + '.' + 
			                SUBSTRING(STR(a.NumContaCorrente), 4, 3)  + '.' + 
			                SUBSTRING(STR(a.NumContaCorrente), 7, 3)  + '-' + 
			                SUBSTRING(STR(a.NumContaCorrente), 10, 1) 
			                END 
				
			FROM 
		                dbo.ParcelamentoCCA a INNER JOIN dbo.ContaCapital b ON 
		                a.NumMatricula = b.NumMatricula INNER JOIN dbo.Pessoa c ON 
		                b.NumCliente = c.NumPessoa 
		                INNER JOIN dbo.Cliente d ON b.NumCliente = d.NumCliente 
		                WHERE 
		                a.NumMatricula Between ${vo.numMatriculaInicial}  AND ${vo.numMatriculaFinal}
		    AND a.DataVencParcela Between '${dataInicial}'	AND '${dataFinal}'
		    AND a.CodTipoParcelamento = ${vo.tpParcelamento}
			AND a.CodSituacaoParcela = ${vo.codSituacaoParcela}
	         <j:if test="${vo.bDataSituacao == true}">
	         	 <j:if test="${vo.dataSituacao != null}">
	                	 AND a.DataSituacaoParcela = '${dataSituacao}'
	         	 </j:if>
	         </j:if>
		    <j:if test="${vo.numPac != null}">
					<j:if test="${vo.numPac != -1}">
						 And d.NumPac = ${vo.numPac}
					</j:if>
			</j:if>
			<j:choose>
				<j:when test="${vo.ordenacao == 0}">
					Order By a.NumMatricula
				</j:when>
				<j:when test="${vo.ordenacao == 1}">
					 Order By c.DescNomePessoa
				</j:when>
				<j:when test="${vo.ordenacao == 2}">
					Order By a.DataVencParcela
				</j:when>
			</j:choose>	
				
			]]>
		</command>
	</query>
	
	<query name="RESUMO_SALDO_TOTAIS_MODALIDADE_PRODUTO">
		<use-case name="gerarRelResumoSaldo"></use-case>
		<description>gerarRelResumoSaldo</description>
		<command>
			<![CDATA[
				SELECT 
					IDModalidadeProduto, 
					DescModalidadeProduto,  
					ValorSaldoAtuInteg = Convert(Money, 0),  
					ValorSaldoAtuSubsc = Convert(Money, 0),  
					ValorSaldoAtuDevolver  = Convert(Money, 0),  
					ValorSaldoAtuDivs = Convert(Money, 0),  
					ValorSaldoAtuARealizar = Convert(Money, 0),  
					ValorSaldoAntInteg = Convert(Money, 0),  
					ValorSaldoAntSubsc = Convert(Money, 0),  
					ValorSaldoAntDevolver = Convert(Money, 0),  
					ValorSaldoAntDivs = Convert(Money, 0),  
					ValorSaldoAntARealizar = Convert(Money, 0),  
					ValorDiaIntegCred = Convert(Money, 0),  
					ValorDiaSubscCred = Convert(Money, 0),  
					ValorDiaDevolCred = Convert(Money, 0),  
					ValorDiaDivsCred = Convert(Money, 0),  
					ValorDiaARealizarCred = Convert(Money, 0),  
					ValorDiaIntegDeb = Convert(Money, 0),  
					ValorDiaSubscDeb = Convert(Money, 0),  
					ValorDiaDevolDeb = Convert(Money, 0),  
					ValorDiaDivsDeb = Convert(Money, 0),  
					ValorDiaARealizarDeb = Convert(Money, 0)  
				FROM dbo.ModalidadeProduto  
				WHERE IdProduto = 2			
			]]>
		</command>
	</query>
	<query name="RESUMO_SALDO_TOTAIS_LANCAMENTOS">
		<use-case name="gerarRelResumoSaldo"></use-case>
		<description>gerarRelResumoSaldo</description>
		<command>
			<![CDATA[
				SELECT 
					SUM(ValorAntC) AS ValorAntC, 
					SUM(ValorAntD)AS ValorAntD,  
					SUM(ValorAntRealC) AS ValorAntRealC, 
					SUM(ValorAntRealD) AS ValorAntRealD,  
					SUM(ValorDiaRealC) AS ValorDiaRealC, 
					SUM(ValorDiaRealD) AS ValorDiaRealD,  
					SUM(ValorDiaC) AS ValorDiaC, 
					SUM(ValorDiaD) AS ValorDiaD,  
					CodNaturezaOp, 
					CodGrupoHist 
				FROM  
					(SELECT 
						ValorAntC = 
							CASE
								WHEN Produto.DataAtualProd > LancamentosCCapital.DataLote 
									AND (TipoHistorico.CodNaturezaOp = 'C' OR (TipoHistorico.CodNaturezaOp = 'E' 
										AND HistEst.CodNaturezaOp = 'D'))
									AND (TipoHistorico.CodGrupoHist IN (1,2,4,3 ))
								THEN LancamentosCCapital.ValorLanc
								ELSE 0            
							END,     
						ValorAntD = 
							CASE 
								WHEN Produto.DataAtualProd > LancamentosCCapital.DataLote
									AND (TipoHistorico.CodNaturezaOp = 'D' OR (TipoHistorico.CodNaturezaOp = 'E' 
										AND HistEst.CodNaturezaOp = 'C'))
									AND (TipoHistorico.CodGrupoHist IN (1,2,4,3 ))
								THEN LancamentosCCapital.ValorLanc
								ELSE 0            
							END,    
						ValorDiaC = 
							CASE 
								WHEN Produto.DataAtualProd = LancamentosCCapital.DataLote 
									AND (TipoHistorico.CodNaturezaOp = 'C' OR (TipoHistorico.CodNaturezaOp = 'E' 
										AND HistEst.CodNaturezaOp = 'D'))
									AND (TipoHistorico.CodGrupoHist IN (1,2,4,3 ))
								THEN LancamentosCCapital.ValorLanc
								ELSE 0            
							END,
						ValorDiaD = 
							CASE 
								WHEN Produto.DataAtualProd = LancamentosCCapital.DataLote
									AND (TipoHistorico.CodNaturezaOp = 'D' 
										OR (TipoHistorico.CodNaturezaOp = 'E' AND HistEst.CodNaturezaOp = 'C'))
									AND (TipoHistorico.CodGrupoHist IN (1,2,4,3))
								THEN LancamentosCCapital.ValorLanc
								ELSE 0            
							END,  
						ValorAntRealC = 
							CASE 
								WHEN Produto.DataAtualProd > LancamentosCCapital.DataLote 
									AND (((TipoHistorico.CodNaturezaOp = 'C' 
										OR (TipoHistorico.CodNaturezaOp = 'E' AND HistEst.CodNaturezaOp = 'D')) 
										AND TipoHistorico.CodGrupoHist IN (2))
										OR ((TipoHistorico.CodNaturezaOp = 'D' 
										OR (TipoHistorico.CodNaturezaOp = 'E' AND HistEst.CodNaturezaOp = 'C')) 
										AND TipoHistorico.CodGrupoHist IN (1)) )                 
								THEN LancamentosCCapital.ValorLanc 
								ELSE 0  
							END,  
						ValorAntRealD = 
							CASE 
								WHEN Produto.DataAtualProd > LancamentosCCapital.DataLote 
									AND (((TipoHistorico.CodNaturezaOp = 'C' OR (TipoHistorico.CodNaturezaOp = 'E' 
										AND HistEst.CodNaturezaOp = 'D')) AND TipoHistorico.CodGrupoHist IN (1))                      
										OR ((TipoHistorico.CodNaturezaOp = 'D' OR (TipoHistorico.CodNaturezaOp = 'E' 
										AND HistEst.CodNaturezaOp = 'C')) AND TipoHistorico.CodGrupoHist IN (2)))                 
								THEN LancamentosCCapital.ValorLanc 
								ELSE 0 
							END,      
						ValorDiaRealC = 
							CASE 
								WHEN Produto.DataAtualProd = LancamentosCCapital.DataLote
									AND (((TipoHistorico.CodNaturezaOp = 'C' OR (TipoHistorico.CodNaturezaOp = 'E' 
									AND HistEst.CodNaturezaOp = 'D')) 
									AND TipoHistorico.CodGrupoHist IN (2))
									OR ((TipoHistorico.CodNaturezaOp = 'D' OR (TipoHistorico.CodNaturezaOp = 'E' 
									AND HistEst.CodNaturezaOp = 'C')) 
									AND TipoHistorico.CodGrupoHist IN (1)))                     
								THEN LancamentosCCapital.ValorLanc 
								ELSE 0 
							END,  
						ValorDiaRealD = 
							CASE 
								WHEN Produto.DataAtualProd = LancamentosCCapital.DataLote
									AND (((TipoHistorico.CodNaturezaOp = 'C' OR (TipoHistorico.CodNaturezaOp = 'E' 
									AND HistEst.CodNaturezaOp = 'D')) AND TipoHistorico.CodGrupoHist IN (1))
									OR ((TipoHistorico.CodNaturezaOp = 'D' OR (TipoHistorico.CodNaturezaOp = 'E' 
									AND HistEst.CodNaturezaOp = 'C')) AND TipoHistorico.CodGrupoHist IN (2)))                     
								THEN LancamentosCCapital.ValorLanc 
								ELSE 0 
							END,  
						TipoHistorico.CodNaturezaOp,
						TipoHistorico.CodGrupoHist  
					FROM dbo.LancamentosCCapital  
					INNER JOIN dbo.TipoHistorico     
						ON TipoHistorico.IDProduto = LancamentosCCapital.IDProduto     
						AND TipoHistorico.IDTipoHistorico = LancamentosCCapital.IDTipoHistoricoLanc  
					LEFT JOIN dbo.TipoHistorico HistEst     
						ON HistEst.IDProduto = LancamentosCCapital.IDProduto     
						AND HistEst.IDTipoHistorico = LancamentosCCapital.IDTipoHistoricoEstorno  
					INNER JOIN dbo.Produto     
						ON Produto.IDProduto = LancamentosCCapital.IDProduto) 
					AS A  
				GROUP BY CodGrupoHist, CodNaturezaOp
			]]>
		</command>
	</query>	
	<query name="RETORNAR_ARQUIVO">
		<use-case name="RETORNAR_ARQUIVO"></use-case>
		<description>RETORNAR_ARQUIVO</description>
		<command>
			<![CDATA[
				SELECT
					DISTINCT AFR.NumPessoaJuridica,
					AFR.SequencialArquivo,
					CodOrgao,
					NomeArquivoImportacao,
					MesAnoReferencia,
					TipoArquivo = CASE WHEN isnull(QTDE.QTD,0) &gt; 0
					AND isnull(QTDC.QTD,0)= 0 THEN 1 WHEN isnull(QTDE.QTD,0) = 0
					AND isnull(QTDC.QTD,0) &gt; 0 THEN 2 WHEN isnull(QTDE.QTD,0) &gt; 0
					AND isnull(QTDC.QTD,0) &gt; 0 THEN 3 END
				FROM 
					ArquivoFolhaRetorno AFR
					Left Join
					(
					   SELECT
					   NumPessoaJuridica,SequencialArquivo,COUNT(SequencialDetalhe) AS QTD
					   From ArquivoFolhaRetornoDetalhe
					   GROUP BY NumPessoaJuridica,SequencialArquivo
					)
					AS QTDE ON AFR.NumPessoaJuridica = QTDE.NumPessoaJuridica
					AND AFR.SequencialArquivo = QTDE.SequencialArquivo
					Left Join
					(
					   SELECT
					   NumPessoaJuridica,IDSequencialArquivo,COUNT(IDSequencialDetalhe) AS QTD
					   From ArquivoRetornoFolhaPgtoDetalhe
					   GROUP BY NumPessoaJuridica,IDSequencialArquivo
					)
					AS QTDC ON AFR.NumPessoaJuridica = QTDC.NumPessoaJuridica
					AND AFR.SequencialArquivo = QTDC.IDSequencialArquivo
				WHERE 
					AFR.NumPessoaJuridica = ${numPessoaJuridica}
				AND 
					AFR.MesAnoReferencia = ${mesAno}
			]]>
		</command>
	</query>
	
	<query name="DADOS_INCOSISTENCIA_FOLHA_PAGTO">
		<use-case name="DADOS_INCOSISTENCIA_FOLHA_PAGTO"></use-case>
		<description>DADOS_INCOSISTENCIA_FOLHA_PAGTO</description>
		<command>
			<![CDATA[
				SELECT
				
					CASE LEN(LFPJ.NumPessoaJuridica) WHEN 1 THEN CAST(LFPJ.NumPessoaJuridica AS VARCHAR) ELSE SUBSTRING(CAST(LFPJ.NumPessoaJuridica AS VARCHAR), 1, LEN(LFPJ.NumPessoaJuridica) - 1) + '-' + SUBSTRING(CAST(LFPJ.NumPessoaJuridica AS VARCHAR), LEN(LFPJ.NumPessoaJuridica), 1) END AS NumPessoaJuridica ,
					PJ.DescNomePessoa AS DescPessoaJuridica,
					LFPJ.QtdeDiasGeraInf AS DiaCorte,
					LFPJ.DiaRodaFolha AS DiaFolha,
					CASE LFPJ.BolGeraInfDebitoMensal WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' ELSE 'Não' END AS EnvioMensal,
					CASE LFPJ.BolGeraArquivoRetorno WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' ELSE 'Não' END AS TrataRetorno,
					CASE LEN(isnull(TRB.NumPessoaFisica,0)) WHEN 1 THEN ISNULL(CAST(TRB.NumPessoaFisica AS VARCHAR) , '-') ELSE SUBSTRING(CAST(TRB.NumPessoaFisica AS VARCHAR), 1, LEN(TRB.NumPessoaFisica) - 1) + '-' + SUBSTRING(CAST(TRB.NumPessoaFisica AS VARCHAR), LEN(TRB.NumPessoaFisica), 1) END AS Cliente ,
					CCA.NumMatricula ,
					ISNULL(PF.DescNomePessoa, '-') AS DescPessoaFisica,
					AFRD.ValorPago AS ValorRetorno ,
					IFP.DescMensagemErro AS MensagemErro ,
					IFP.CodTipoInconsistencia ,
					CASE IFP.CodTipoInconsistencia WHEN 1 THEN 'GRAVE' WHEN 2 THEN 'ALERTA' WHEN 3 THEN 'GRAVE' ELSE '' END AS TipoErro ,
					AFR.NomeArquivoImportacao AS NomeArquivo ,
					AFR.DataHoraRecepcao AS DataHoraRecepcao,
					CASE LEN(AFR.MesAnoReferencia) WHEN 6 THEN SUBSTRING(CAST(AFR.MesAnoReferencia AS VARCHAR), 1, 2) + '/' + SUBSTRING(CAST(AFR.MesAnoReferencia AS VARCHAR), 3, 4) ELSE '0' + SUBSTRING(CAST(AFR.MesAnoReferencia AS VARCHAR), 1, 1) + '/' + SUBSTRING(CAST(AFR.MesAnoReferencia AS VARCHAR), 2, 4) END AS MesAnoReferencia ,
					AFR.ValorTotalArquivo AS ValorTotalArquivo,
					AFR.ValorRejeitado AS ValorRejeitado ,
					AFR.ValorAceito AS ValorAceito ,
					AFR.QtdParcelasArquivo AS QtdeParcArquivo ,
					AFR.QtdRejeitada AS QtdeParcRejeitada,
					AFR.QtdAceito AS QtdeParcAceita
					FROM dbo.ArquivoFolhaRetorno AFR
					INNER JOIN dbo.ArquivoRetornoFolhaPgtoDetalhe AFRD ON AFRD.NumPessoaJuridica = AFR.NumPessoaJuridica
					AND AFRD.IdSequencialArquivo = AFR.SequencialArquivo
					INNER JOIN dbo.InconsistArqRetFolhaPgto IFP ON IFP.NumPessoaJuridica = AFRD.NumPessoaJuridica
					AND IFP.IdSequencialArquivo = AFRD.IdSequencialArquivo
					AND IFP.IdSequencialDetalhe = AFRD.IdSequencialDetalhe
					INNER JOIN dbo.LancFolhaPJ LFPJ ON AFR.NumPessoaJuridica = LFPJ.NumPessoaJuridica
					LEFT JOIN dbo.Trabalha TRB ON TRB.UIDTrabalha = AFRD.UIDTrabalha
					INNER JOIN dbo.Pessoa PJ ON LFPJ.NumPessoaJuridica = PJ.NumPessoa
					LEFT JOIN dbo.ContaCapital CCA ON TRB.NumPessoaFisica = CCA.NumCliente
					AND AFRD.IdentNegocio = CONVERT(VARCHAR(50), CCA.NumMatricula)
					LEFT JOIN dbo.Pessoa PF ON PF.NumPessoa = TRB.NumPessoaFisica
					WHERE AFRD.CodTipoDado = 2
					<j:if test="${numEmpresa != null}">
						AND LFPJ.NumPessoaJuridica = ${numEmpresa}
					</j:if>
					 
					<j:if test="${seqArquivo != null}">
						AND AFR.SequencialArquivo = ${seqArquivo}
					</j:if>
					
					<j:if test="${mesAno != null}">
						AND AFR.MesAnoReferencia = ${mesAno}
					</j:if>

					<j:if test="${tipo == 1}">
						And IFP.CodTipoInconsistencia IN (1,3)
					</j:if>
					<j:if test="${tipo == 2}">
						And IFP.CodTipoInconsistencia = 2 
					</j:if>
		
					<j:if test="${ordenacao == 1}">
						Order By TRB.NumPessoaFisica
					</j:if>
					<j:if test="${ordenacao == 2}">
						Order By CCA.NumMatricula 
					</j:if>
					<j:if test="${ordenacao == 3}">
						 Order By PF.DescNomePessoa 
					</j:if>
									
			]]>
		</command>
	</query>
	
	<query name="PESQUISA_SE_PESSOA_FISICA">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa se é Pessoa Física</description>
		<command>
			<![CDATA[
			SELECT CodPF_PJ FROM dbo.ContaCapital 
				INNER JOIN dbo.Pessoa on Pessoa.NumPessoa = ContaCapital.NumCliente 
				WHERE (NumMatricula = ${numMatricula})				
			]]>
		</command>
	</query>	
	<query name="PESQUISA_SE_PESSOA_FISICA_TRABALHA_EMP_FOLHA">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa se Pessoa Física Trabalha Emp. Folha</description>
		<command>
			<![CDATA[
			SELECT CCA.nUMMATRICULA From dbo.Trabalha T 
				INNER JOIN dbo.LancFolhaPJ LF ON T.NumPessoaJuridica = LF.NumPessoaJuridica 
				INNER JOIN dbo.CONTACAPITAL CCA ON T.NumPessoaFisica = CCA.NUMCLIENTE 
				INNER JOIN dbo.Pessoa P on P.NumPessoa = CCA.NumCliente and CodPF_PJ = 0 
			WHERE cca.NumMatricula = ${numMatricula}				
			]]>
		</command>
	</query>	
	<query name="PESQUISA_SE_DEB_IND_FOLHA_CLIENTE">
		<use-case name="Conta Capital"></use-case>
		<description>Pesquisa se Debito Indeterminado Folha Cliente</description>
		<command>
			<![CDATA[
				SELECT NUMMATRICULA  
				    From dbo.CONTACAPITAL 
				    where BolDebIndeterminado = 1 AND codsituacao = 1 
					and CodFormaDeb in (${codModoLancamentoViaFolha}, ${codModoLancamentoViaBancoChadmin}) 
				<j:choose>
					<j:when test="${numcliente != null}">
						and NumCliente = ${numcliente}
					</j:when>
					<j:otherwise>
						and NumMatricula &lt;&gt; ${numMatricula}
						AND NumCliente in (SELECT NumCliente FROM dbo.ContaCapital WHERE NumMatricula = ${numMatricula})
					</j:otherwise>	
				</j:choose>			
			]]>
		</command>
	</query>
	<query name="OBTER_RENDAS_CAPITAL_CONSIGNADO">
		<use-case name="Conta Capital"></use-case>
		<description>Obtém Rendas Capital Consignado</description>
		<command>
			<![CDATA[
				SELECT CCA.nUMMATRICULA, T.NumPessoaFisica, T.NumPessoaJuridica,
					T.DescMatriculaFunc, R.DescRenda, R.ReceitaBrutaMensal
				FROM dbo.Trabalha T
					INNER JOIN dbo.LancFolhaPJ LF ON T.NumPessoaJuridica = LF.NumPessoaJuridica
					INNER JOIN dbo.CONTACAPITAL CCA ON T.NumPessoaFisica = CCA.NUMCLIENTE
					INNER JOIN dbo.FonteRenda R ON R.NumPessoaJuridica = T.NumPessoaJuridica AND R.NumPessoa = T.NumPessoaFisica
						AND R.CodFonteRenda = 0 AND R.BolConjuge = 0
				where cca.NumMatricula = ${numMatricula}	
			]]>
		</command>
	</query>
	
	<query name="CONSULTAR_ASSOCIADO">
		<use-case name="Conta Capital"></use-case>
		<description>Verifica se cliente é associado</description>
		<command>
			<![CDATA[
				select dbo.Fn_CCA_ValidaAssociado (${numCliente})
			]]>
		</command>
	</query>
	<query name="EXCLUIR_LANCAMENTOS">
		<use-case name="Excluir Lançamentos por matricula"></use-case>
		<description>Excluir Lançamentos por matricula</description>
		<command>
			<![CDATA[
				DELETE FROM dbo.LancamentosCCapital WHERE NumMatricula = ${lNumMatricula}
			]]>
		</command>
	</query>
	<query name="PESQUISA_PREP_REMESSA_PARCELA_ATENDIMENTO">
		<use-case name="PESQUISA_PREP_REMESSA_PARCELA_ATENDIMENTO"></use-case>
		<description>Consulta se tem remessas preparadas</description>
		<command>
			<![CDATA[
			SELECT 0 as Quant   					
			]]>
		</command>
	</query>	
	<query name="GERAR_REL_POS_INCORPORACAO">
		<use-case name="GERAR RELELATÓRIO POS INCORPORACAO"></use-case>
		<description>GERAR RELELATÓRIO POS INCORPORACAO</description>
		<command>
			<![CDATA[
				    dbo.SPU_CCA_RelPosIncorporacao ${numCooperativaIncorporadora},${numCooperativaIncorporada}                                     	
			]]>
		</command>
	</query>
	<query name="CONSULTAR_QUANTIDADE_INCORPORADOS">
		<use-case name="CONSULTAR QUANTIDADE INCORPORADOS"></use-case>
		<description>CONSUTA A QUANTIDADE DE ASSOCIADOS INCORPORADOS</description>
		<command>
			<![CDATA[
				    select count(*) as total from dbo.implantacaoincmatricula where NumCooperativaIncorporadora = ${numCooperativaIncorporadora} and NumCooperativaIncorporada = ${numCooperativaIncorporada}                                     	
			]]>
		</command>
	</query>
	<query name="PESQUISA_CANCELAMENTO_PARCELA_SUBSCRICAO">
		<use-case name="PESQUISA CANCELAMENTO PARCELA SUBSCRICAO"></use-case>
		<description>CONSUTA CANCELAMENTO DA PARCELA SUBSCRICAO</description>
		<command>
			<![CDATA[				    
				SELECT COUNT(1) QTDPARCELACANCELADA 
				FROM DBO.PARCELAMENTOCCA 
				INNER JOIN DBO.PRODUTO ON PRODUTO.IDPRODUTO = 2 AND PARCELAMENTOCCA.DATASITUACAOPARCELA = PRODUTO.DATAATUALPROD 
				WHERE PARCELAMENTOCCA.CODSITUACAOPARCELA = 4  
				   AND PARCELAMENTOCCA.NUMMATRICULA = ${numMatricula}
				   AND PARCELAMENTOCCA.CODTIPOPARCELAMENTO = 1 
				   AND PARCELAMENTOCCA.NUMPARCELAMENTO IN ( 
				       SELECT MAX(PCCA.NUMPARCELAMENTO)  
				       FROM DBO.PARCELAMENTOCCA PCCA 
				       INNER JOIN DBO.PRODUTO ON PRODUTO.IDPRODUTO = 2 AND PCCA.DATASITUACAOPARCELA = PRODUTO.DATAATUALPROD 
				       WHERE PCCA.NUMMATRICULA = ${numMatricula} 
				       AND PCCA.CODTIPOPARCELAMENTO = 1 
				   ) 
			]]>
		</command>
	</query>	
	<query name="GERAR_REL_PRE_INCORPORACAO">
		<use-case name="GERAR RELELATÓRIO PRE INCORPORACAO"></use-case>
		<description>GERAR RELELATÓRIO PRÉ INCORPORACAO</description>
		<command>
			<![CDATA[
				    dbo.SPU_CCA_RelPreIncorporacao ${numCooperativaIncorporadora}, ${numCooperativaIncorporada}                                     	
			]]>
		</command>
	</query>
	
</queries>

